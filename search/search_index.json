{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-,:!=\\[\\]()\"/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])"},"docs":[{"location":"","text":"Omnibus \u00b6 Attention This aggregated documentation is under active development, some page may be incomplete. Please visit our forums or discord for specific questions! OpenMEV Platform Documentation \u00b6 Strategy and Implementation details End User information Help Desk and Troubleshooting Searcher Integration Formulas and Proofs Technical: Technical overview on specific category SushiSwap \u00b6 The SushiSwap integration provides a service that realizes profit by transaction batching for the purposes of arbitrage by controlling transaction ordering. Right now every user sends a transaction directly to the network mempool and thus give away the arbitrage, front-running, back-running opportunities to miners(or random bots). OpenMEV provides a credibly neutral platform that enables aggregation of transactions (batching) for the purposes of extracting MEV profits and returning them back to the traders. What is credible neutrality ? \u00b6 \"...that it is not just neutrality that is required here, it is credible neutrality. That is, it is not just enough for a mechanism to not be designed to favor specific people or outcomes over others; it\u2019s also crucially important for a mechanism to be able to convince a large and diverse group of people that the mechanism at least makes that basic effort to be fair.\" Vitalik Buterin, credible neutrality as a guiding principle This ethos is at the heart of OpenMEV. Part of establishing credible neutrality is having a clear and comprehensive rule book that regulates off-chain behavior and activities. Our assumption concerning governance is that methods and processes that work in legacy markets may not be applicable in adversarial environments such as permissionless blockchains. With that understanding it is important not to rely solely on such systems and mechanics long term. Discuss this and more on our discourse forums","title":"Omnibus"},{"location":"#omnibus","text":"Attention This aggregated documentation is under active development, some page may be incomplete. Please visit our forums or discord for specific questions!","title":"Omnibus"},{"location":"#openmev-platform-documentation","text":"Strategy and Implementation details End User information Help Desk and Troubleshooting Searcher Integration Formulas and Proofs Technical: Technical overview on specific category","title":"OpenMEV Platform Documentation"},{"location":"#sushiswap","text":"The SushiSwap integration provides a service that realizes profit by transaction batching for the purposes of arbitrage by controlling transaction ordering. Right now every user sends a transaction directly to the network mempool and thus give away the arbitrage, front-running, back-running opportunities to miners(or random bots). OpenMEV provides a credibly neutral platform that enables aggregation of transactions (batching) for the purposes of extracting MEV profits and returning them back to the traders.","title":"SushiSwap"},{"location":"#what-is-credible-neutrality","text":"\"...that it is not just neutrality that is required here, it is credible neutrality. That is, it is not just enough for a mechanism to not be designed to favor specific people or outcomes over others; it\u2019s also crucially important for a mechanism to be able to convince a large and diverse group of people that the mechanism at least makes that basic effort to be fair.\" Vitalik Buterin, credible neutrality as a guiding principle This ethos is at the heart of OpenMEV. Part of establishing credible neutrality is having a clear and comprehensive rule book that regulates off-chain behavior and activities. Our assumption concerning governance is that methods and processes that work in legacy markets may not be applicable in adversarial environments such as permissionless blockchains. With that understanding it is important not to rely solely on such systems and mechanics long term. Discuss this and more on our discourse forums","title":"What is credible neutrality?"},{"location":"faq/","text":"FAQ \u00b6 General and Common Questions \u00b6 I submitted a trade and never got any rebate back, why? Your trade was not eligible for being included into a bundle, so we could not generate an arbitrage opportunity from it. If a trade I submit is not included in a bundle, what benefit do I get form OpenMEV? Your trades are sent to miners via our private and permissioned RPC connections. This means you get transaction privacy no matter if your transaction is included in a bundle or if its not. Where can I get help? Discord support channel GitHub Issues Specific Questions \u00b6 Who is on the team? [read our post on the forums] Who owns OpenMEV? Manifold Finance, Inc. operates and maintains OpenMEV through its subsidiary CommodityStream LLC, Registration Information for CommodityStream: Company No: 2021-00039 Address: The Sotheby Building, Rodney Village, City: Rodney Bay, Gros-Islet, Country: St. Lucia Do you have a security policy or bug bounty? Software Defects \u00b6 At CommodityStream LLC, security is a priority. But regardless of how much effort we put into system security, there may still be vulnerabilities present. If you discover a vulnerability, we want to know about it so we can take steps to address it as quickly as possible. We would like to ask you to help us better protect our clients and our systems. Read more about our bug bounty and security policy here","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#general-and-common-questions","text":"I submitted a trade and never got any rebate back, why? Your trade was not eligible for being included into a bundle, so we could not generate an arbitrage opportunity from it. If a trade I submit is not included in a bundle, what benefit do I get form OpenMEV? Your trades are sent to miners via our private and permissioned RPC connections. This means you get transaction privacy no matter if your transaction is included in a bundle or if its not. Where can I get help? Discord support channel GitHub Issues","title":"General and Common Questions"},{"location":"faq/#specific-questions","text":"Who is on the team? [read our post on the forums] Who owns OpenMEV? Manifold Finance, Inc. operates and maintains OpenMEV through its subsidiary CommodityStream LLC, Registration Information for CommodityStream: Company No: 2021-00039 Address: The Sotheby Building, Rodney Village, City: Rodney Bay, Gros-Islet, Country: St. Lucia Do you have a security policy or bug bounty?","title":"Specific Questions"},{"location":"faq/#software-defects","text":"At CommodityStream LLC, security is a priority. But regardless of how much effort we put into system security, there may still be vulnerabilities present. If you discover a vulnerability, we want to know about it so we can take steps to address it as quickly as possible. We would like to ask you to help us better protect our clients and our systems. Read more about our bug bounty and security policy here","title":"Software Defects"},{"location":"sushiswap-overview/","text":"OpenMEV & Sushiswap \u00b6 OpenMEV and Sushiswap work together to recapture lost MEV profits so that Sushi traders can trade for free (up to 95%) on the exchange. These are not gasless transactions, these are paid rebate transactions! You get paid to trade more using OpenMEV. Support and Help \u00b6 Support Page Discord Chat Trading for Free on Sushi.com \u00b6 baseFee amount is subject to transaction cost rebates Transactions with a slippage tolerance of 1% or higher are eligible for gas refunds Refunds are paid out in ETH/WETH/xSUSHI It will take at least 35 blocks to receive a refund, no more than 50. Getting Gas Pricing information \u00b6 Our API Endpoint is here curl -s -L api.txprice.com | jq .blockPrices [ 0 ] .estimatedPrices [ 3 ] { \"confidence\" : 80 , \"price\" : 112 , \"maxPriorityFeePerGas\" : 1.76 , \"maxFeePerGas\" : 222.52 } Engine \u00b6 OpenMEV Engine uses a batch auction-based matching engine to execute orders. Batch auctions were chosen to reduce the impact of frontrunning on the exchange. All orders for the given market are collected. Orders beyond their time-in-force are canceled. Orders are placed into separate lists by market side, and aggregate supply and demand curves are calculated. The matching engine discovers the price at which the aggregate supply and demand curves cross, which yields the clearing price. If there is a horizontal cross - i.e., two prices for which aggregate supply and demand are equal - then the clearing price is the midpoint between the two prices. If both sides of the market have equal volume, then all orders are completely filled. If one side has more volume than the other, then the side with higher volume is rationed pro-rata based on how much its volume exceeds the other side. For example, if aggregate demand is 100 and aggregate supply is 90, then every order on the demand side of the market will be matched by 90%. Orders are sorted based on their price, and order ID. Order IDs are generated at post time and is the only part of the matching engine that is time-dependent. However, the oldest order IDs are matched first so there is no incentive to post an order ahead of someone else\u2019s.","title":"OpenMEV & Sushiswap"},{"location":"sushiswap-overview/#openmev-sushiswap","text":"OpenMEV and Sushiswap work together to recapture lost MEV profits so that Sushi traders can trade for free (up to 95%) on the exchange. These are not gasless transactions, these are paid rebate transactions! You get paid to trade more using OpenMEV.","title":"OpenMEV &amp; Sushiswap"},{"location":"sushiswap-overview/#support-and-help","text":"Support Page Discord Chat","title":"Support and Help"},{"location":"sushiswap-overview/#trading-for-free-on-sushicom","text":"baseFee amount is subject to transaction cost rebates Transactions with a slippage tolerance of 1% or higher are eligible for gas refunds Refunds are paid out in ETH/WETH/xSUSHI It will take at least 35 blocks to receive a refund, no more than 50.","title":"Trading for Free on Sushi.com"},{"location":"sushiswap-overview/#getting-gas-pricing-information","text":"Our API Endpoint is here curl -s -L api.txprice.com | jq .blockPrices [ 0 ] .estimatedPrices [ 3 ] { \"confidence\" : 80 , \"price\" : 112 , \"maxPriorityFeePerGas\" : 1.76 , \"maxFeePerGas\" : 222.52 }","title":"Getting Gas Pricing information"},{"location":"sushiswap-overview/#engine","text":"OpenMEV Engine uses a batch auction-based matching engine to execute orders. Batch auctions were chosen to reduce the impact of frontrunning on the exchange. All orders for the given market are collected. Orders beyond their time-in-force are canceled. Orders are placed into separate lists by market side, and aggregate supply and demand curves are calculated. The matching engine discovers the price at which the aggregate supply and demand curves cross, which yields the clearing price. If there is a horizontal cross - i.e., two prices for which aggregate supply and demand are equal - then the clearing price is the midpoint between the two prices. If both sides of the market have equal volume, then all orders are completely filled. If one side has more volume than the other, then the side with higher volume is rationed pro-rata based on how much its volume exceeds the other side. For example, if aggregate demand is 100 and aggregate supply is 90, then every order on the demand side of the market will be matched by 90%. Orders are sorted based on their price, and order ID. Order IDs are generated at post time and is the only part of the matching engine that is time-dependent. However, the oldest order IDs are matched first so there is no incentive to post an order ahead of someone else\u2019s.","title":"Engine"},{"location":"Network/","text":"Getting Started \u00b6 Getting started with Backbone takes just a few minutes once you\u2019ve signed up . When you sign up you'll receive your Backbone v3 key to use within your app. With it we can provide you with customized insights and analytics, route your data where it needs to go, and give you access to the most powerful infrastructure for Ethereum. Learn more about getting started , and if you have any issues check our other resources below for help. Ethereum API \u00b6 Seamlessly access Ethereum via the Backbone load-balanced nodes and smart architecture the same way you would via your own nodes. We have built services and APIs around JSON RPC , REST and WebSockets that you can use with your favorite libraries and frameworks, on four Ethereum networks. Read more about our Ethereum API . WebSockets API \u00b6 Use our WebSockets API to poll on filters, subscriptions, events, etc. Access the Ethereum Pub/Sub API documentation and Parity Ethereum Pub/Sub API documentation . Read more about our WebSockets API .","title":"Getting Started"},{"location":"Network/#getting-started","text":"Getting started with Backbone takes just a few minutes once you\u2019ve signed up . When you sign up you'll receive your Backbone v3 key to use within your app. With it we can provide you with customized insights and analytics, route your data where it needs to go, and give you access to the most powerful infrastructure for Ethereum. Learn more about getting started , and if you have any issues check our other resources below for help.","title":"Getting Started"},{"location":"Network/#ethereum-api","text":"Seamlessly access Ethereum via the Backbone load-balanced nodes and smart architecture the same way you would via your own nodes. We have built services and APIs around JSON RPC , REST and WebSockets that you can use with your favorite libraries and frameworks, on four Ethereum networks. Read more about our Ethereum API .","title":"Ethereum API"},{"location":"Network/#websockets-api","text":"Use our WebSockets API to poll on filters, subscriptions, events, etc. Access the Ethereum Pub/Sub API documentation and Parity Ethereum Pub/Sub API documentation . Read more about our WebSockets API .","title":"WebSockets API"},{"location":"Network/api/get/","text":"eth_accounts \u00b6 v1/jsonrpc/:network/eth_accounts \u00b6 Returns a list of addresses owned by client. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_accounts HEADERS Content-Type: application/json Example curl -sL https://api.sushirelay.com/v1/eth_accounts // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_accounts\" , \"params\" : [] , \"id\" :73 } RESPONSE RESULT FIELDS ADDRESSES - arrays of hex codes as strings representing the addresses owned by the client BODY { jsonrpc : \"2.0\" , id : 1 , result : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" ] } eth_blockNumber \u00b6 v1/jsonrpc/:network/eth_blockNumber \u00b6 Returns the number of most recent block. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_blockNumber HEADERS Content-Type: application/json Example curl -sL https://api.sushirelay.com/v1/eth_blockNumber // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_blockNumber\" , \"params\" : [] , \"id\" :73 } RESPONSE RESULT FIELDS BLOCK NUMBER - a hex code of an integer representing the current block number the client is on. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x5c174e\" } eth_gasPrice \u00b6 v1/jsonrpc/:network/eth_gasPrice \u00b6 Returns the number of hashes per second that the node is mining with. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_gasPrice HEADERS Content-Type: application/json Example curl -sL https://api.sushirelay.com/v1/eth_gasPrice // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_gasPrice\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_gasPrice\" , \"params\" : [] , \"id\" :73 } RESPONSE RESULT FIELDS HASHRATE - a hex code of an integer representing the current gas price in wei. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x3b9acde7\" } eth_getBalance \u00b6 v1/jsonrpc/:network/eth_getBalance \u00b6 Returns the balance of the account of given address. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBalance?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) to check for balance BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getBalance --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBalance\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :73 } RESPONSE RESULT FIELDS BALANCE - integer of the current balance in wei. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x29a33d8a9314006\" } eth_getBlockByHash \u00b6 v1/jsonrpc/:network/eth_getBlockByHash \u00b6 Returns information about a block by hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBlockByHash?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions. Example curl -sL -G https://api.sushirelay.com/v1/eth_getBlockByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ,false ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } } eth_getBlockByNumber \u00b6 v1/jsonrpc/:network/eth_getBlockByNumber \u00b6 Returns information about a block by hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBlockByNumber?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions. Example curl -sL -G https://api.sushirelay.com/v1/eth_getBlockByNumber --data-urlencode 'params=[\"0x5BAD55\",false]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\": [\"0x5BAD55\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByNumber\" , \"params\" : [ \"0x5BAD55\" ,false ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } } eth_getBlockTransactionCountByHash \u00b6 v1/jsonrpc/:network/eth_getBlockTransactionCountByHash \u00b6 Returns the number of transactions in a block from a block matching the given block hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBlockTransactionCountByHash?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block Example curl -sL -G https://api.sushirelay.com/v1/eth_getBlockTransactionCountByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x50\" } eth_getBlockTransactionCountByNumber \u00b6 v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber \u00b6 Returns the number of transactions in a block matching the given block number. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getBlockTransactionCountByNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" } eth_getCode \u00b6 v1/jsonrpc/:network/eth_getCode \u00b6 Returns code at a given address. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getCode?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) of the code BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getCode --data-urlencode 'params=[\"0x06012c8cf97bead5deae237070f9587f8e7a266d\",\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\": [\"0x06012c8cf97bead5deae237070f9587f8e7a266d\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getCode\" , \"params\" : [ \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" ] , \"id\" :1 } RESPONSE RESULT FIELDS CODE - a hex of the code at the given address BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x606060............\" } eth_getLogs \u00b6 v1/jsonrpc/:network/eth_getLogs \u00b6 Returns an array of all logs matching a given filter object. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getLogs?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS FILTER OBJECT address [optional] - a string representing the address (20 bytes) to check for balance fromBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" toBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" topics [optional] - Array of 32 Bytes DATA topics. Topics are order-dependent. blockhash : [optional, **_future **]_ With the addition of EIP-234, blockHash will be a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash . Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash . If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed. Example curl -sL -G https://api.sushirelay.com/v1/eth_getLogs --data-urlencode 'params=[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getLogs\" , \"params\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ] , \"id\" :1 } RESPONSE RESULT FIELDS LOG OBJECTS - An array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes of 32 Bytes), e.g. [\"0x3454645634534...\"] For filters created with eth_newPendingTransactionFilter the return are transaction hashes of 32 Bytes), e.g. [\"0x6345343454645...\"]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : contains one or more 32 Bytes non-indexed arguments of the log. topics : Array of 0 to 4 32 Bytes of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.) BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : [ { \"address\" : \"0x1a94fce7ef36bc90959e206ba569a12afbc91ca1\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x0000000000000000000000003e3310720058c51f0de456e273c626cdd35065700000000000000000000000000000000000000000000000000000000000003185000000000000000000000000000000000000000000000000000000000000318200000000000000000000000000000000000000000000000000000000005c2a23\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x3dc91b98249fa9f2c5c37486a2427a3a7825be240c1c84961dfb3063d9c04d50\" , \"transactionIndex\" : \"0x1d\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x1d\" , \"removed\" : false }, { \"address\" : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x00000000000000000000000077ea137625739598666ded665953d26b3d8e374400000000000000000000000000000000000000000000000000000000000749ff00000000000000000000000000000000000000000000000000000000000a749d00000000000000000000000000000000000000000000000000000000005c2a0f\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x788b1442414cb9c9a36dba2abe250763161a6f6395788a2e808f1b34e92beec1\" , \"transactionIndex\" : \"0x54\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x57\" , \"removed\" : false } ] } eth_getStorageAt \u00b6 v1/jsonrpc/:network/eth_getStorageAt \u00b6 Returns the value from a storage position at a given address. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getStorageAt?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) of the storage STORAGE POSITION [required] - a hex code of the position in the storage BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getStorageAt --data-urlencode 'params=[\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getStorageAt\",\"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getStorageAt\" , \"params\" : [ \"0x295a70b2de5e3953354a6a8344e616ed314d7251\" , \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" , \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS STORAGE VALUE - a hex code of the integer indicating the value of the storage position at the provided address BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" } Calculating the correct position depends on the storage to retrieve. Consider the following contract deployed at 0x295a70b2de5e3953354a6a8344e616ed314d7251 by address 0x391694e7e0b0cce554cb130d723a9d27458f9298 , contract Storage { uint pos0; mapping(address => uint) pos1; function Storage() { pos0 = 1234; pos1[msg.sender] = 5678; } } Retrieving the value of pos0 is straight forward: curl -sL -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x0\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x00000000000000000000000000000000000000000000000000000000000004d2\" } Retrieving an element of the map is harder. The position of an element in the map is calculated with: keccak ( LeftPad32 ( key , 0 ), LeftPad32 ( map position , 0 )) This means to retrieve the storage on pos1[\"0x391694e7e0b0cce554cb130d723a9d27458f9298\"] we need to calculate the position with: keccak ( decodeHex ( '000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298' + '0000000000000000000000000000000000000000000000000000000000000001' ) ); The geth console which comes with the web3 library can be used to make the calculation: > var key = \"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" + \"0000000000000000000000000000000000000000000000000000000000000001\" undefined > web3 . sha3 ( key , { \"encoding\" : \"hex\" }) \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" Now to fetch the storage: curl -sL -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" } eth_getTransactionByBlockHashAndIndex \u00b6 /v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex \u00b6 Returns information about a transaction by block hash and transaction index position. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockHashAndIndex\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"0x0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } } eth_getTransactionByBlockNumberAndIndex \u00b6 v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex \u00b6 Returns information about a transaction by block number and transaction index position. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionByBlockNumberAndIndex --data-urlencode 'params=[\"0x5BAD55\",\"0x0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\": [\"0x5BAD55\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockNumberAndIndex\" , \"params\" : [ \"0x5BAD55\" , \"0x0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } } eth_getTransactionByHash \u00b6 v1/jsonrpc/:network/eth_getTransactionByHash \u00b6 Returns information about a transaction for a given hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionByHash?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionByHash --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByHash\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } } eth_getTransactionCount \u00b6 v1/jsonrpc/:network/eth_getTransactionCount \u00b6 Returns the number of transactions sent from an address. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionCount?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) to check for transaction count for BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionCount --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION COUNT - a hex code of the integer representing the number of transactions sent from this address. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1a\" } eth_getTransactionReceipt \u00b6 v1/jsonrpc/:network/eth_getTransactionReceipt \u00b6 Returns the receipt of a transaction by transaction hash. Note that the receipt is not available for pending transactions. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionReceipt?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionReceipt --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionReceipt\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION RECEIPT - A transaction receipt object, or null when no receipt was found: transactionHash : 32 Bytes - hash of the transaction. transactionIndex : integer of the transactions index position in the block. blockHash : 32 Bytes - hash of the block where this transaction was in. blockNumber : block number where this transaction was in. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. cumulativeGasUsed : the total amount of gas used when this transaction was executed in the block. gasUsed : the amount of gas used by this specific transaction alone. contractAddress : 20 Bytes - the contract address created, if the transaction was a contract creation, otherwise - null. logs : Array - Array of log objects, which this transaction generated. logsBloom : 256 Bytes - Bloom filter for light clients to quickly retrieve related logs. It also returns either : - root : 32 bytes of post-transaction stateroot (pre Byzantium) - status : either 1 (success) or 0 (failure) BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { transactionHash : '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238' , transactionIndex : '0x1' , // 1 blockNumber : '0xb' , // 11 blockHash : '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b' , cumulativeGasUsed : '0x33bc' , // 13244 gasUsed : '0x4dc' , // 1244 contractAddress : '0xb60e8dd61c5d32be8058bb8eb970870f07233155' , // or null, if none was created logs : [{ // logs as returned by getFilterLogs, etc. }, ...], logsBloom : \"0x00...0\" , // 256 byte bloom filter status : '0x1' } } eth_getUncleByBlockHashAndIndex \u00b6 v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex \u00b6 Returns information about the 'Uncle' of a block by hash and the Uncle index position. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle's index position. Example curl -sL -G https://api.sushirelay.com/v1/eth_getUncleByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn't contain individual transactions. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } } eth_getUncleByBlockNumberAndIndex \u00b6 v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex \u00b6 Returns information about the 'Uncle' of a block by hash and the Uncle index position. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle's index position. Example curl -sL -G https://api.sushirelay.com/v1/eth_getUncleByBlockNumberAndIndex --data-urlencode 'params=[\"0x29c\",\"0x0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\": [\"0x29c\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleByBlockNumberAndIndex\" , \"params\" : [ \"0x29c\" , \"0x0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn't contain individual transactions. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } } eth_getUncleCountByBlockHash \u00b6 v1/jsonrpc/:network/eth_getUncleCountByBlockHash \u00b6 Returns the number of uncles in a block from a block matching the given block hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getUncleCountByBlockHash?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block Example curl -sL -G https://api.sushirelay.com/v1/eth_getUncleCountByBlockHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1\" } eth_getUncleCountByBlockNumber \u00b6 v1/jsonrpc/:network/eth_getUncleCountByBlockNumber \u00b6 Returns the number of uncles in a block from a block matching the given block number. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getUncleCountByBlockNumber?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getUncleCountByBlockNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" } eth_getWork \u00b6 v1/jsonrpc/:network/eth_getWork \u00b6 Returns the hash of the current block, the seedHash, and the boundary condition to be met (\"target\"). REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getWork HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_getWork // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getWork\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS WORK ARRAY 32 Bytes - current block header pow-hash 32 Bytes - the seed hash used for the DAG. 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty. BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : [ \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\" , \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\" , \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\" ] } eth_hashrate \u00b6 v1/jsonrpc/:network/eth_hashrate \u00b6 Returns the number of hashes per second that the node is mining with. Only applicable when the node is mining. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_hashrate HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_hashrate // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_hashrate\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_hashrate\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS HASHRATE - a hex code of an integer representing the number of hashes per second. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x38a\" } eth_mining \u00b6 v1/jsonrpc/:network/eth_mining \u00b6 Returns true if client is actively mining new blocks. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_mining HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_mining // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_mining\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_mining\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS IS MINING FLAG - a boolean indicating if the client is mining BODY { jsonrpc : \"2.0\" , id : 1 , result : true } eth_protocolVersion \u00b6 v1/jsonrpc/:network/eth_protocolVersion \u00b6 Returns the current ethereum protocol version. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_protocolVersion HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_protocolVersion // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_protocolVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_protocolVersion\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS PROTOCOL VERSION - a string indicating the current ethereum protocol version BODY { jsonrpc : \"2.0\" , id : 1 , result : \"54\" \" } eth_syncing \u00b6 v1/jsonrpc/:network/eth_syncing \u00b6 Returns an object with data about the sync status or false. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_syncing HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_syncing // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_syncing\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS SYNC STATUS - a boolean as false only when not syncing SYNC BLOCKS i. startingBlock - a hexcode of the integer indicating the block at which the import started (will only be reset, after the sync reached his head) ii. currentBlock - a hexcode of the integer indicating the current block, same as eth_blockNumber iii. highestBlock - a hexcode of the integer indicating the highest block BODY \\\\ When not syncing { jsonrpc : \"2.0\" , id : 1 , result : \"1\" } \\\\ When syncing { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { startingBlock : '0x384' , currentBlock : '0x386' , highestBlock : '0x454' } } net_listening \u00b6 v1/jsonrpc/:network/net_listening \u00b6 Returns true if client is actively listening for network connections. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/net_listening HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/net_listening // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_listening\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_listening\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS LISTENING FLAG - a boolean indicating whether the client is actively listening for network connections BODY { jsonrpc : \"2.0\" , id : 1 , result : true } net_peerCount \u00b6 v1/jsonrpc/:network/net_peerCount \u00b6 Returns the number of peers currently connected to the client. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/net_peerCount HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/net_peerCount // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_peerCount\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS PEER COUNT - integer of the number of connected peers. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x64\" } net_version \u00b6 v1/jsonrpc/:network/net_version \u00b6 Returns the current network id. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/net_version HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/net_version // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_version\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS NETWORK ID - a string representing the current network id. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"1\" } method \u00b6 v1/jsonrpc/network/method \u00b6 A request using an \"HTTP GET-compatible\" (non-state-changing) JSON-RPC method. Most Ethereum JSON-RPC methods can be described in this way, since they query the blockchain for various pieces of information. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. GET \u00b6 GET https://api.sushirelay.com/v1/jsonrpc/network/method?params= Parameters network Ethereum network in lowercase. Possible values: api.staging., ropsten , kovan , rinkeby` Enum method JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. String params This is the params field that would normally be part of the JSON-RPC POST body. Use the exact same format. If it's omitted, it will default to an empty array. Array Request \u00b6 curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/jsonrpc/{network}/{method}?params=' Response \u00b6 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object) ## JSON-RPC Response \u00b6 200 HEADERS Content-Type:application/json BODY { \"jsonrpc\": \"2.0\", \"id\": -5294191, \"result\": \"sed dolor eu ullamco\" } JSON Schema { \"type\": \"object\", \"properties\": { \"jsonrpc\": { \"type\": \"string\", \"description\": \"JSON-RPC version\", \"enum\": [ \"2.0\" ] }, \"id\": { \"type\": \"integer\", \"description\": \"JSON-RPC request ID\" }, \"result\": { \"type\": \"string\", \"description\": \"JSON-RPC result (can also be an object)\" } }, \"required\": [ \"jsonrpc\", \"id\" ] } Response \u00b6 Bad JSON in params query parameter 400 HEADERS Content-Type:application/json Response \u00b6 JSON-RPC method is not a valid GET method 404 HEADERS Content-Type:application/json Response \u00b6 Server error 500 HEADERS Content-Type:application/json Response \u00b6 Ethereum client error 502 HEADERS Content-Type:application/json methods \u00b6 v1/jsonrpc/network/methods \u00b6 The JSON-RPC methods supported by the /v1/jsonrpc/{network}/{method} (GET) and /v1/jsonrpc/{network} (POST) endpoints. GET \u00b6 GET https://api.sushirelay.com/v1/jsonrpc/network/methods Parameters \u00b6 Attributes network Ethereum network in lowercase. Possible values: api.staging., ropsten , kovan , rinkeby` enum Request \u00b6 curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/jsonrpc/{network}/methods' Response \u00b6 Attributes get required array List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET) string 0 post required array List of methods supported by the /v1/jsonrpc/{network} endpoint (POST) string 0 ## Methods Response \u00b6 200 HEADERS Content-Type:application/json BODY { \"get\": [ \"culpa ipsum sunt dolor\", \"labore in\", \"sunt pariatur eiusmod\", \"nostrud mollit\" ], \"post\": [ \"aute aliqua elit\", \"eu tempor nulla Excepteur eiusmod\", \"ipsum et officia laborum\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"get\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET)\", \"items\": { \"type\": \"string\" } }, \"post\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network} endpoint (POST)\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"get\", \"post\" ] } Response \u00b6 Server error 500 HEADERS Content-Type:application/json symbol \u00b6 v1/jsonrpc/symbol \u00b6 Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at the exchange with the most volume for the symbol. Use the /v1/ticker/symbols endpoint for the full list of supported symbols. GET \u00b6 GET https://api.sushirelay.com/v1/ticker/symbol Parameters symbol Ticker symbol (currency pair) String Request \u00b6 curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/ticker/{symbol}' Response \u00b6 Attributes base string Currency pair base quote string Currency pair quote bid number Bid at the exchange with the most volume ask number Ask at the exchange with most volume exchange string The exchange with the most volume volume number Volume at the exchange with the most volume num_exchanges number Number of exchanges queried total_volume number Total volume across all exchanges queried timestamp number Unix timestamp ## Ticker Response \u00b6 200 HEADERS Content-Type:application/json full \u00b6 v1/ticker/symbol/full \u00b6 Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at various exchanges where the symbol is traded. Use the /v1/ticker/symbols endpoint for the full list of supported symbols. GET \u00b6 GET https://api.sushirelay.com/v1/ticker/symbol/full Parameters Symbol Ticker symbol (currency pair string Request \u00b6 curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/ticker/{symbol}/full' Response \u00b6 Attributes base string Currency pair base quote string Currency pair quote tickers array List of tickers at various exchanges object 0 bid number ask number exchange string volume number `timestamp number ## Full ticker Response \u00b6 200 HEADERS Content-Type:application/json symbols \u00b6 v1/ticker/symbols \u00b6 Get a list of supported symbols (currency pairs), including fiat, crypto, and tokens GET \u00b6 GET https://api.sushirelay.com/v1/ticker/symbols Request \u00b6 curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/ticker/symbols' Response \u00b6 Attributes symbols array List of supported symbols (currency pairs) string 0 ## Symbols Response \u00b6 200 HEADERS Content-Type:application/json v1 Blacklist \u00b6 v1/blacklist \u00b6 Return a blacklist of phishing sites. This list is maintained by GitHub user 409H at https://github.com/409H/EtherAddressLookup/blob/master/blacklists/domains.json . GET \u00b6 GET https://api.sushirelay.com/v1/blacklist Request \u00b6 curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/blacklist' Response \u00b6 Attributes string 0 ## List of blacklisted phishing domains \u00b6 200 HEADERS Content-Type:application/json BODY [ \"quis esse ut\", \"dolor quis\", \"dolore culpa et\", \"laboris Ut ut nisi commodo\", \"l\" ] JSON Schema { \"type\": \"array\", \"items\": { \"type\": \"string\" } } ## Response \u00b6 Github is having issues 502 HEADERS Content-Type:application/json v2 Blacklist \u00b6 v2/blacklist \u00b6 Return a blacklist of phishing sites, as well as a whitelist and a fuzzylist. This list is maintained by the MetaMask project at https://github.com/MetaMask/eth-phishing-detect/blob/master/src/config.json . GET \u00b6 GET https://api.sushirelay.com/v2/blacklist Request \u00b6 curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v2/blacklist' Response \u00b6 Attributes version required number Version tolerance required number Tolerance fuzzylist required array Fuzzylist string 0 whitelist required array Whitelist string 0 blacklist required array Blacklist string 0 ## Phishing blacklist, whitelist, and fuzzylist \u00b6 200 HEADERS Content-Type:application/json BODY { \"version\": 38611173, \"tolerance\": 49572925, \"fuzzylist\": [ \"eiusmod anim mollit Ut\", \"minim et ea ex\" ], \"whitelist\": [ \"irure Duis\", \"officia minim voluptate cillum ullamco\", \"nostrud aliquip\", \"ex in sint velit\", \"Excepteur veniam fugi\" ], \"blacklist\": [ \"do in tempor consectet\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"version\": { \"type\": \"integer\", \"description\": \"Version\" }, \"tolerance\": { \"type\": \"integer\", \"description\": \"Tolerance\" }, \"fuzzylist\": { \"description\": \"Fuzzylist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"whitelist\": { \"description\": \"Whitelist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"blacklist\": { \"description\": \"Blacklist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"version\", \"tolerance\", \"fuzzylist\", \"whitelist\", \"blacklist\" ] } ## Response \u00b6 Github is having issues 502 HEADERS Content-Type:application/json web3_clientVersion \u00b6 v1/jsonrpc/:network/web3_clientVersion \u00b6 Returns the current client version. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/web3_clientVersion HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/web3_clientVersion // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"web3_clientVersion\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS STRING - The current client version BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"Geth/v1.8.6-patched-leveldb-8818ab0b/linux-amd64/go1.9.2\" }","title":"eth_accounts"},{"location":"Network/api/get/#eth_accounts","text":"","title":"eth_accounts"},{"location":"Network/api/get/#v1jsonrpcnetworketh_accounts","text":"Returns a list of addresses owned by client. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_accounts HEADERS Content-Type: application/json Example curl -sL https://api.sushirelay.com/v1/eth_accounts // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_accounts\" , \"params\" : [] , \"id\" :73 } RESPONSE RESULT FIELDS ADDRESSES - arrays of hex codes as strings representing the addresses owned by the client BODY { jsonrpc : \"2.0\" , id : 1 , result : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" ] }","title":"v1/jsonrpc/:network/eth_accounts"},{"location":"Network/api/get/#eth_blocknumber","text":"","title":"eth_blockNumber"},{"location":"Network/api/get/#v1jsonrpcnetworketh_blocknumber","text":"Returns the number of most recent block. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_blockNumber HEADERS Content-Type: application/json Example curl -sL https://api.sushirelay.com/v1/eth_blockNumber // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_blockNumber\" , \"params\" : [] , \"id\" :73 } RESPONSE RESULT FIELDS BLOCK NUMBER - a hex code of an integer representing the current block number the client is on. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x5c174e\" }","title":"v1/jsonrpc/:network/eth_blockNumber"},{"location":"Network/api/get/#eth_gasprice","text":"","title":"eth_gasPrice"},{"location":"Network/api/get/#v1jsonrpcnetworketh_gasprice","text":"Returns the number of hashes per second that the node is mining with. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_gasPrice HEADERS Content-Type: application/json Example curl -sL https://api.sushirelay.com/v1/eth_gasPrice // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_gasPrice\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_gasPrice\" , \"params\" : [] , \"id\" :73 } RESPONSE RESULT FIELDS HASHRATE - a hex code of an integer representing the current gas price in wei. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x3b9acde7\" }","title":"v1/jsonrpc/:network/eth_gasPrice"},{"location":"Network/api/get/#eth_getbalance","text":"","title":"eth_getBalance"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getbalance","text":"Returns the balance of the account of given address. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBalance?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) to check for balance BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getBalance --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBalance\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :73 } RESPONSE RESULT FIELDS BALANCE - integer of the current balance in wei. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x29a33d8a9314006\" }","title":"v1/jsonrpc/:network/eth_getBalance"},{"location":"Network/api/get/#eth_getblockbyhash","text":"","title":"eth_getBlockByHash"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getblockbyhash","text":"Returns information about a block by hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBlockByHash?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions. Example curl -sL -G https://api.sushirelay.com/v1/eth_getBlockByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ,false ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } }","title":"v1/jsonrpc/:network/eth_getBlockByHash"},{"location":"Network/api/get/#eth_getblockbynumber","text":"","title":"eth_getBlockByNumber"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getblockbynumber","text":"Returns information about a block by hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBlockByNumber?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions. Example curl -sL -G https://api.sushirelay.com/v1/eth_getBlockByNumber --data-urlencode 'params=[\"0x5BAD55\",false]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\": [\"0x5BAD55\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByNumber\" , \"params\" : [ \"0x5BAD55\" ,false ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } }","title":"v1/jsonrpc/:network/eth_getBlockByNumber"},{"location":"Network/api/get/#eth_getblocktransactioncountbyhash","text":"","title":"eth_getBlockTransactionCountByHash"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getblocktransactioncountbyhash","text":"Returns the number of transactions in a block from a block matching the given block hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBlockTransactionCountByHash?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block Example curl -sL -G https://api.sushirelay.com/v1/eth_getBlockTransactionCountByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x50\" }","title":"v1/jsonrpc/:network/eth_getBlockTransactionCountByHash"},{"location":"Network/api/get/#eth_getblocktransactioncountbynumber","text":"","title":"eth_getBlockTransactionCountByNumber"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getblocktransactioncountbynumber","text":"Returns the number of transactions in a block matching the given block number. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getBlockTransactionCountByNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" }","title":"v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber"},{"location":"Network/api/get/#eth_getcode","text":"","title":"eth_getCode"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getcode","text":"Returns code at a given address. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getCode?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) of the code BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getCode --data-urlencode 'params=[\"0x06012c8cf97bead5deae237070f9587f8e7a266d\",\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\": [\"0x06012c8cf97bead5deae237070f9587f8e7a266d\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getCode\" , \"params\" : [ \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" ] , \"id\" :1 } RESPONSE RESULT FIELDS CODE - a hex of the code at the given address BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x606060............\" }","title":"v1/jsonrpc/:network/eth_getCode"},{"location":"Network/api/get/#eth_getlogs","text":"","title":"eth_getLogs"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getlogs","text":"Returns an array of all logs matching a given filter object. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getLogs?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS FILTER OBJECT address [optional] - a string representing the address (20 bytes) to check for balance fromBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" toBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" topics [optional] - Array of 32 Bytes DATA topics. Topics are order-dependent. blockhash : [optional, **_future **]_ With the addition of EIP-234, blockHash will be a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash . Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash . If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed. Example curl -sL -G https://api.sushirelay.com/v1/eth_getLogs --data-urlencode 'params=[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getLogs\" , \"params\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ] , \"id\" :1 } RESPONSE RESULT FIELDS LOG OBJECTS - An array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes of 32 Bytes), e.g. [\"0x3454645634534...\"] For filters created with eth_newPendingTransactionFilter the return are transaction hashes of 32 Bytes), e.g. [\"0x6345343454645...\"]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : contains one or more 32 Bytes non-indexed arguments of the log. topics : Array of 0 to 4 32 Bytes of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.) BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : [ { \"address\" : \"0x1a94fce7ef36bc90959e206ba569a12afbc91ca1\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x0000000000000000000000003e3310720058c51f0de456e273c626cdd35065700000000000000000000000000000000000000000000000000000000000003185000000000000000000000000000000000000000000000000000000000000318200000000000000000000000000000000000000000000000000000000005c2a23\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x3dc91b98249fa9f2c5c37486a2427a3a7825be240c1c84961dfb3063d9c04d50\" , \"transactionIndex\" : \"0x1d\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x1d\" , \"removed\" : false }, { \"address\" : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x00000000000000000000000077ea137625739598666ded665953d26b3d8e374400000000000000000000000000000000000000000000000000000000000749ff00000000000000000000000000000000000000000000000000000000000a749d00000000000000000000000000000000000000000000000000000000005c2a0f\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x788b1442414cb9c9a36dba2abe250763161a6f6395788a2e808f1b34e92beec1\" , \"transactionIndex\" : \"0x54\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x57\" , \"removed\" : false } ] }","title":"v1/jsonrpc/:network/eth_getLogs"},{"location":"Network/api/get/#eth_getstorageat","text":"","title":"eth_getStorageAt"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getstorageat","text":"Returns the value from a storage position at a given address. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getStorageAt?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) of the storage STORAGE POSITION [required] - a hex code of the position in the storage BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getStorageAt --data-urlencode 'params=[\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getStorageAt\",\"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getStorageAt\" , \"params\" : [ \"0x295a70b2de5e3953354a6a8344e616ed314d7251\" , \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" , \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS STORAGE VALUE - a hex code of the integer indicating the value of the storage position at the provided address BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" } Calculating the correct position depends on the storage to retrieve. Consider the following contract deployed at 0x295a70b2de5e3953354a6a8344e616ed314d7251 by address 0x391694e7e0b0cce554cb130d723a9d27458f9298 , contract Storage { uint pos0; mapping(address => uint) pos1; function Storage() { pos0 = 1234; pos1[msg.sender] = 5678; } } Retrieving the value of pos0 is straight forward: curl -sL -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x0\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x00000000000000000000000000000000000000000000000000000000000004d2\" } Retrieving an element of the map is harder. The position of an element in the map is calculated with: keccak ( LeftPad32 ( key , 0 ), LeftPad32 ( map position , 0 )) This means to retrieve the storage on pos1[\"0x391694e7e0b0cce554cb130d723a9d27458f9298\"] we need to calculate the position with: keccak ( decodeHex ( '000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298' + '0000000000000000000000000000000000000000000000000000000000000001' ) ); The geth console which comes with the web3 library can be used to make the calculation: > var key = \"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" + \"0000000000000000000000000000000000000000000000000000000000000001\" undefined > web3 . sha3 ( key , { \"encoding\" : \"hex\" }) \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" Now to fetch the storage: curl -sL -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" }","title":"v1/jsonrpc/:network/eth_getStorageAt"},{"location":"Network/api/get/#eth_gettransactionbyblockhashandindex","text":"","title":"eth_getTransactionByBlockHashAndIndex"},{"location":"Network/api/get/#v1jsonrpcnetworketh_gettransactionbyblockhashandindex","text":"Returns information about a transaction by block hash and transaction index position. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockHashAndIndex\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"0x0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"/v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex"},{"location":"Network/api/get/#eth_gettransactionbyblocknumberandindex","text":"","title":"eth_getTransactionByBlockNumberAndIndex"},{"location":"Network/api/get/#v1jsonrpcnetworketh_gettransactionbyblocknumberandindex","text":"Returns information about a transaction by block number and transaction index position. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionByBlockNumberAndIndex --data-urlencode 'params=[\"0x5BAD55\",\"0x0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\": [\"0x5BAD55\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockNumberAndIndex\" , \"params\" : [ \"0x5BAD55\" , \"0x0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex"},{"location":"Network/api/get/#eth_gettransactionbyhash","text":"","title":"eth_getTransactionByHash"},{"location":"Network/api/get/#v1jsonrpcnetworketh_gettransactionbyhash","text":"Returns information about a transaction for a given hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionByHash?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionByHash --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByHash\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"v1/jsonrpc/:network/eth_getTransactionByHash"},{"location":"Network/api/get/#eth_gettransactioncount","text":"","title":"eth_getTransactionCount"},{"location":"Network/api/get/#v1jsonrpcnetworketh_gettransactioncount","text":"Returns the number of transactions sent from an address. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionCount?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) to check for transaction count for BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionCount --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION COUNT - a hex code of the integer representing the number of transactions sent from this address. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1a\" }","title":"v1/jsonrpc/:network/eth_getTransactionCount"},{"location":"Network/api/get/#eth_gettransactionreceipt","text":"","title":"eth_getTransactionReceipt"},{"location":"Network/api/get/#v1jsonrpcnetworketh_gettransactionreceipt","text":"Returns the receipt of a transaction by transaction hash. Note that the receipt is not available for pending transactions. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getTransactionReceipt?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction Example curl -sL -G https://api.sushirelay.com/v1/eth_getTransactionReceipt --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionReceipt\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS TRANSACTION RECEIPT - A transaction receipt object, or null when no receipt was found: transactionHash : 32 Bytes - hash of the transaction. transactionIndex : integer of the transactions index position in the block. blockHash : 32 Bytes - hash of the block where this transaction was in. blockNumber : block number where this transaction was in. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. cumulativeGasUsed : the total amount of gas used when this transaction was executed in the block. gasUsed : the amount of gas used by this specific transaction alone. contractAddress : 20 Bytes - the contract address created, if the transaction was a contract creation, otherwise - null. logs : Array - Array of log objects, which this transaction generated. logsBloom : 256 Bytes - Bloom filter for light clients to quickly retrieve related logs. It also returns either : - root : 32 bytes of post-transaction stateroot (pre Byzantium) - status : either 1 (success) or 0 (failure) BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { transactionHash : '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238' , transactionIndex : '0x1' , // 1 blockNumber : '0xb' , // 11 blockHash : '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b' , cumulativeGasUsed : '0x33bc' , // 13244 gasUsed : '0x4dc' , // 1244 contractAddress : '0xb60e8dd61c5d32be8058bb8eb970870f07233155' , // or null, if none was created logs : [{ // logs as returned by getFilterLogs, etc. }, ...], logsBloom : \"0x00...0\" , // 256 byte bloom filter status : '0x1' } }","title":"v1/jsonrpc/:network/eth_getTransactionReceipt"},{"location":"Network/api/get/#eth_getunclebyblockhashandindex","text":"","title":"eth_getUncleByBlockHashAndIndex"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getunclebyblockhashandindex","text":"Returns information about the 'Uncle' of a block by hash and the Uncle index position. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle's index position. Example curl -sL -G https://api.sushirelay.com/v1/eth_getUncleByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn't contain individual transactions. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } }","title":"v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex"},{"location":"Network/api/get/#eth_getunclebyblocknumberandindex","text":"","title":"eth_getUncleByBlockNumberAndIndex"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getunclebyblocknumberandindex","text":"Returns information about the 'Uncle' of a block by hash and the Uncle index position. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle's index position. Example curl -sL -G https://api.sushirelay.com/v1/eth_getUncleByBlockNumberAndIndex --data-urlencode 'params=[\"0x29c\",\"0x0\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\": [\"0x29c\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleByBlockNumberAndIndex\" , \"params\" : [ \"0x29c\" , \"0x0\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn't contain individual transactions. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } }","title":"v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex"},{"location":"Network/api/get/#eth_getunclecountbyblockhash","text":"","title":"eth_getUncleCountByBlockHash"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getunclecountbyblockhash","text":"Returns the number of uncles in a block from a block matching the given block hash. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getUncleCountByBlockHash?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block Example curl -sL -G https://api.sushirelay.com/v1/eth_getUncleCountByBlockHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1\" }","title":"v1/jsonrpc/:network/eth_getUncleCountByBlockHash"},{"location":"Network/api/get/#eth_getunclecountbyblocknumber","text":"","title":"eth_getUncleCountByBlockNumber"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getunclecountbyblocknumber","text":"Returns the number of uncles in a block from a block matching the given block number. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getUncleCountByBlockNumber?params=:paramsJSONArray HEADERS Content-Type: application/json Example REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter Example curl -sL -G https://api.sushirelay.com/v1/eth_getUncleCountByBlockNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 } RESPONSE RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" }","title":"v1/jsonrpc/:network/eth_getUncleCountByBlockNumber"},{"location":"Network/api/get/#eth_getwork","text":"","title":"eth_getWork"},{"location":"Network/api/get/#v1jsonrpcnetworketh_getwork","text":"Returns the hash of the current block, the seedHash, and the boundary condition to be met (\"target\"). REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_getWork HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_getWork // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getWork\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS WORK ARRAY 32 Bytes - current block header pow-hash 32 Bytes - the seed hash used for the DAG. 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty. BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : [ \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\" , \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\" , \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\" ] }","title":"v1/jsonrpc/:network/eth_getWork"},{"location":"Network/api/get/#eth_hashrate","text":"","title":"eth_hashrate"},{"location":"Network/api/get/#v1jsonrpcnetworketh_hashrate","text":"Returns the number of hashes per second that the node is mining with. Only applicable when the node is mining. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_hashrate HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_hashrate // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_hashrate\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_hashrate\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS HASHRATE - a hex code of an integer representing the number of hashes per second. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x38a\" }","title":"v1/jsonrpc/:network/eth_hashrate"},{"location":"Network/api/get/#eth_mining","text":"","title":"eth_mining"},{"location":"Network/api/get/#v1jsonrpcnetworketh_mining","text":"Returns true if client is actively mining new blocks. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_mining HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_mining // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_mining\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_mining\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS IS MINING FLAG - a boolean indicating if the client is mining BODY { jsonrpc : \"2.0\" , id : 1 , result : true }","title":"v1/jsonrpc/:network/eth_mining"},{"location":"Network/api/get/#eth_protocolversion","text":"","title":"eth_protocolVersion"},{"location":"Network/api/get/#v1jsonrpcnetworketh_protocolversion","text":"Returns the current ethereum protocol version. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_protocolVersion HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_protocolVersion // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_protocolVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_protocolVersion\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS PROTOCOL VERSION - a string indicating the current ethereum protocol version BODY { jsonrpc : \"2.0\" , id : 1 , result : \"54\" \" }","title":"v1/jsonrpc/:network/eth_protocolVersion"},{"location":"Network/api/get/#eth_syncing","text":"","title":"eth_syncing"},{"location":"Network/api/get/#v1jsonrpcnetworketh_syncing","text":"Returns an object with data about the sync status or false. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/eth_syncing HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/eth_syncing // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_syncing\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS SYNC STATUS - a boolean as false only when not syncing SYNC BLOCKS i. startingBlock - a hexcode of the integer indicating the block at which the import started (will only be reset, after the sync reached his head) ii. currentBlock - a hexcode of the integer indicating the current block, same as eth_blockNumber iii. highestBlock - a hexcode of the integer indicating the highest block BODY \\\\ When not syncing { jsonrpc : \"2.0\" , id : 1 , result : \"1\" } \\\\ When syncing { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { startingBlock : '0x384' , currentBlock : '0x386' , highestBlock : '0x454' } }","title":"v1/jsonrpc/:network/eth_syncing"},{"location":"Network/api/get/#net_listening","text":"","title":"net_listening"},{"location":"Network/api/get/#v1jsonrpcnetworknet_listening","text":"Returns true if client is actively listening for network connections. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/net_listening HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/net_listening // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_listening\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_listening\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS LISTENING FLAG - a boolean indicating whether the client is actively listening for network connections BODY { jsonrpc : \"2.0\" , id : 1 , result : true }","title":"v1/jsonrpc/:network/net_listening"},{"location":"Network/api/get/#net_peercount","text":"","title":"net_peerCount"},{"location":"Network/api/get/#v1jsonrpcnetworknet_peercount","text":"Returns the number of peers currently connected to the client. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/net_peerCount HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/net_peerCount // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_peerCount\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS PEER COUNT - integer of the number of connected peers. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x64\" }","title":"v1/jsonrpc/:network/net_peerCount"},{"location":"Network/api/get/#net_version","text":"","title":"net_version"},{"location":"Network/api/get/#v1jsonrpcnetworknet_version","text":"Returns the current network id. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/net_version HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/net_version // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_version\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS NETWORK ID - a string representing the current network id. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"1\" }","title":"v1/jsonrpc/:network/net_version"},{"location":"Network/api/get/#method","text":"","title":"method"},{"location":"Network/api/get/#v1jsonrpcnetworkmethod","text":"A request using an \"HTTP GET-compatible\" (non-state-changing) JSON-RPC method. Most Ethereum JSON-RPC methods can be described in this way, since they query the blockchain for various pieces of information. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods.","title":"v1/jsonrpc/network/method"},{"location":"Network/api/get/#get","text":"GET https://api.sushirelay.com/v1/jsonrpc/network/method?params= Parameters network Ethereum network in lowercase. Possible values: api.staging., ropsten , kovan , rinkeby` Enum method JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. String params This is the params field that would normally be part of the JSON-RPC POST body. Use the exact same format. If it's omitted, it will default to an empty array. Array","title":"GET"},{"location":"Network/api/get/#request","text":"curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/jsonrpc/{network}/{method}?params='","title":"Request"},{"location":"Network/api/get/#response","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object)","title":"Response"},{"location":"Network/api/get/#json-rpc-response","text":"200 HEADERS Content-Type:application/json BODY { \"jsonrpc\": \"2.0\", \"id\": -5294191, \"result\": \"sed dolor eu ullamco\" } JSON Schema { \"type\": \"object\", \"properties\": { \"jsonrpc\": { \"type\": \"string\", \"description\": \"JSON-RPC version\", \"enum\": [ \"2.0\" ] }, \"id\": { \"type\": \"integer\", \"description\": \"JSON-RPC request ID\" }, \"result\": { \"type\": \"string\", \"description\": \"JSON-RPC result (can also be an object)\" } }, \"required\": [ \"jsonrpc\", \"id\" ] }","title":"## JSON-RPC Response"},{"location":"Network/api/get/#response_1","text":"Bad JSON in params query parameter 400 HEADERS Content-Type:application/json","title":"Response"},{"location":"Network/api/get/#response_2","text":"JSON-RPC method is not a valid GET method 404 HEADERS Content-Type:application/json","title":"Response"},{"location":"Network/api/get/#response_3","text":"Server error 500 HEADERS Content-Type:application/json","title":"Response"},{"location":"Network/api/get/#response_4","text":"Ethereum client error 502 HEADERS Content-Type:application/json","title":"Response"},{"location":"Network/api/get/#methods","text":"","title":"methods"},{"location":"Network/api/get/#v1jsonrpcnetworkmethods","text":"The JSON-RPC methods supported by the /v1/jsonrpc/{network}/{method} (GET) and /v1/jsonrpc/{network} (POST) endpoints.","title":"v1/jsonrpc/network/methods"},{"location":"Network/api/get/#get_1","text":"GET https://api.sushirelay.com/v1/jsonrpc/network/methods","title":"GET"},{"location":"Network/api/get/#parameters","text":"Attributes network Ethereum network in lowercase. Possible values: api.staging., ropsten , kovan , rinkeby` enum","title":"Parameters"},{"location":"Network/api/get/#request_1","text":"curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/jsonrpc/{network}/methods'","title":"Request"},{"location":"Network/api/get/#response_5","text":"Attributes get required array List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET) string 0 post required array List of methods supported by the /v1/jsonrpc/{network} endpoint (POST) string 0","title":"Response"},{"location":"Network/api/get/#methods-response","text":"200 HEADERS Content-Type:application/json BODY { \"get\": [ \"culpa ipsum sunt dolor\", \"labore in\", \"sunt pariatur eiusmod\", \"nostrud mollit\" ], \"post\": [ \"aute aliqua elit\", \"eu tempor nulla Excepteur eiusmod\", \"ipsum et officia laborum\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"get\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET)\", \"items\": { \"type\": \"string\" } }, \"post\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network} endpoint (POST)\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"get\", \"post\" ] }","title":"## Methods Response"},{"location":"Network/api/get/#response_6","text":"Server error 500 HEADERS Content-Type:application/json","title":"Response"},{"location":"Network/api/get/#symbol","text":"","title":"symbol"},{"location":"Network/api/get/#v1jsonrpcsymbol","text":"Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at the exchange with the most volume for the symbol. Use the /v1/ticker/symbols endpoint for the full list of supported symbols.","title":"v1/jsonrpc/symbol"},{"location":"Network/api/get/#get_2","text":"GET https://api.sushirelay.com/v1/ticker/symbol Parameters symbol Ticker symbol (currency pair) String","title":"GET"},{"location":"Network/api/get/#request_2","text":"curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/ticker/{symbol}'","title":"Request"},{"location":"Network/api/get/#response_7","text":"Attributes base string Currency pair base quote string Currency pair quote bid number Bid at the exchange with the most volume ask number Ask at the exchange with most volume exchange string The exchange with the most volume volume number Volume at the exchange with the most volume num_exchanges number Number of exchanges queried total_volume number Total volume across all exchanges queried timestamp number Unix timestamp","title":"Response"},{"location":"Network/api/get/#ticker-response","text":"200 HEADERS Content-Type:application/json","title":"## Ticker Response"},{"location":"Network/api/get/#full","text":"","title":"full"},{"location":"Network/api/get/#v1tickersymbolfull","text":"Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at various exchanges where the symbol is traded. Use the /v1/ticker/symbols endpoint for the full list of supported symbols.","title":"v1/ticker/symbol/full"},{"location":"Network/api/get/#get_3","text":"GET https://api.sushirelay.com/v1/ticker/symbol/full Parameters Symbol Ticker symbol (currency pair string","title":"GET"},{"location":"Network/api/get/#request_3","text":"curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/ticker/{symbol}/full'","title":"Request"},{"location":"Network/api/get/#response_8","text":"Attributes base string Currency pair base quote string Currency pair quote tickers array List of tickers at various exchanges object 0 bid number ask number exchange string volume number `timestamp number","title":"Response"},{"location":"Network/api/get/#full-ticker-response","text":"200 HEADERS Content-Type:application/json","title":"## Full ticker Response"},{"location":"Network/api/get/#symbols","text":"","title":"symbols"},{"location":"Network/api/get/#v1tickersymbols","text":"Get a list of supported symbols (currency pairs), including fiat, crypto, and tokens","title":"v1/ticker/symbols"},{"location":"Network/api/get/#get_4","text":"GET https://api.sushirelay.com/v1/ticker/symbols","title":"GET"},{"location":"Network/api/get/#request_4","text":"curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/ticker/symbols'","title":"Request"},{"location":"Network/api/get/#response_9","text":"Attributes symbols array List of supported symbols (currency pairs) string 0","title":"Response"},{"location":"Network/api/get/#symbols-response","text":"200 HEADERS Content-Type:application/json","title":"## Symbols Response"},{"location":"Network/api/get/#v1-blacklist","text":"","title":"v1 Blacklist"},{"location":"Network/api/get/#v1blacklist","text":"Return a blacklist of phishing sites. This list is maintained by GitHub user 409H at https://github.com/409H/EtherAddressLookup/blob/master/blacklists/domains.json .","title":"v1/blacklist"},{"location":"Network/api/get/#get_5","text":"GET https://api.sushirelay.com/v1/blacklist","title":"GET"},{"location":"Network/api/get/#request_5","text":"curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v1/blacklist'","title":"Request"},{"location":"Network/api/get/#response_10","text":"Attributes string 0","title":"Response"},{"location":"Network/api/get/#list-of-blacklisted-phishing-domains","text":"200 HEADERS Content-Type:application/json BODY [ \"quis esse ut\", \"dolor quis\", \"dolore culpa et\", \"laboris Ut ut nisi commodo\", \"l\" ] JSON Schema { \"type\": \"array\", \"items\": { \"type\": \"string\" } }","title":"## List of blacklisted phishing domains"},{"location":"Network/api/get/#response_11","text":"Github is having issues 502 HEADERS Content-Type:application/json","title":"## Response"},{"location":"Network/api/get/#v2-blacklist","text":"","title":"v2 Blacklist"},{"location":"Network/api/get/#v2blacklist","text":"Return a blacklist of phishing sites, as well as a whitelist and a fuzzylist. This list is maintained by the MetaMask project at https://github.com/MetaMask/eth-phishing-detect/blob/master/src/config.json .","title":"v2/blacklist"},{"location":"Network/api/get/#get_6","text":"GET https://api.sushirelay.com/v2/blacklist","title":"GET"},{"location":"Network/api/get/#request_6","text":"curl -sL --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.sushirelay.com/v2/blacklist'","title":"Request"},{"location":"Network/api/get/#response_12","text":"Attributes version required number Version tolerance required number Tolerance fuzzylist required array Fuzzylist string 0 whitelist required array Whitelist string 0 blacklist required array Blacklist string 0","title":"Response"},{"location":"Network/api/get/#phishing-blacklist-whitelist-and-fuzzylist","text":"200 HEADERS Content-Type:application/json BODY { \"version\": 38611173, \"tolerance\": 49572925, \"fuzzylist\": [ \"eiusmod anim mollit Ut\", \"minim et ea ex\" ], \"whitelist\": [ \"irure Duis\", \"officia minim voluptate cillum ullamco\", \"nostrud aliquip\", \"ex in sint velit\", \"Excepteur veniam fugi\" ], \"blacklist\": [ \"do in tempor consectet\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"version\": { \"type\": \"integer\", \"description\": \"Version\" }, \"tolerance\": { \"type\": \"integer\", \"description\": \"Tolerance\" }, \"fuzzylist\": { \"description\": \"Fuzzylist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"whitelist\": { \"description\": \"Whitelist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"blacklist\": { \"description\": \"Blacklist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"version\", \"tolerance\", \"fuzzylist\", \"whitelist\", \"blacklist\" ] }","title":"## Phishing blacklist, whitelist, and fuzzylist"},{"location":"Network/api/get/#response_13","text":"Github is having issues 502 HEADERS Content-Type:application/json","title":"## Response"},{"location":"Network/api/get/#web3_clientversion","text":"","title":"web3_clientVersion"},{"location":"Network/api/get/#v1jsonrpcnetworkweb3_clientversion","text":"Returns the current client version. REQUEST GET https://api.sushirelay.com/v1/jsonrpc/:network/web3_clientVersion HEADERS Content-Type: application/json Example curl -sL -G https://api.sushirelay.com/v1/web3_clientVersion // HTTP POST curl -sL https://api.staging.sushirelay.com/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://api.staging.sushirelay.com/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"web3_clientVersion\" , \"params\" : [] , \"id\" :1 } RESPONSE RESULT FIELDS STRING - The current client version BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"Geth/v1.8.6-patched-leveldb-8818ab0b/linux-amd64/go1.9.2\" }","title":"v1/jsonrpc/:network/web3_clientVersion"},{"location":"Network/api/get/eth_accounts/","text":"eth_accounts \u00b6 /v1/jsonrpc/:network/eth_accounts \u00b6 Returns a list of addresses owned by client. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_accounts HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_accounts // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_accounts\" , \"params\" : [] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 ADDRESSES - arrays of hex codes as strings representing the addresses owned by the client BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" ] }","title":"eth_accounts"},{"location":"Network/api/get/eth_accounts/#eth_accounts","text":"","title":"eth_accounts"},{"location":"Network/api/get/eth_accounts/#v1jsonrpcnetworketh_accounts","text":"Returns a list of addresses owned by client.","title":"/v1/jsonrpc/:network/eth_accounts"},{"location":"Network/api/get/eth_accounts/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_accounts","title":"REQUEST"},{"location":"Network/api/get/eth_accounts/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_accounts/#example","text":"// HTTP GET curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_accounts // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_accounts\" , \"params\" : [] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_accounts/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_accounts/#result-fields","text":"ADDRESSES - arrays of hex codes as strings representing the addresses owned by the client","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_accounts/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" ] }","title":"BODY"},{"location":"Network/api/get/eth_blockNumber/","text":"eth_blockNumber \u00b6 /v1/jsonrpc/:network/eth_blockNumber \u00b6 Returns the number of most recent block. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_blockNumber HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_blockNumber\" , \"params\" : [] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BLOCK NUMBER - a hex code of an integer representing the current block number the client is on. BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : \"0x5c174e\" }","title":"eth_blockNumber"},{"location":"Network/api/get/eth_blockNumber/#eth_blocknumber","text":"","title":"eth_blockNumber"},{"location":"Network/api/get/eth_blockNumber/#v1jsonrpcnetworketh_blocknumber","text":"Returns the number of most recent block.","title":"/v1/jsonrpc/:network/eth_blockNumber"},{"location":"Network/api/get/eth_blockNumber/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_blockNumber","title":"REQUEST"},{"location":"Network/api/get/eth_blockNumber/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_blockNumber/#example","text":"// HTTP GET curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_blockNumber\" , \"params\" : [] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_blockNumber/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_blockNumber/#result-fields","text":"BLOCK NUMBER - a hex code of an integer representing the current block number the client is on.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_blockNumber/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : \"0x5c174e\" }","title":"BODY"},{"location":"Network/api/get/eth_gasPrice/","text":"eth_gasPrice \u00b6 /v1/jsonrpc/:network/eth_gasPrice \u00b6 Returns the number of hashes per second that the node is mining with. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_gasPrice HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_gasPrice // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_gasPrice\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_gasPrice\" , \"params\" : [] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 HASHRATE - a hex code of an integer representing the current gas price in wei. BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : \"0x3b9acde7\" }","title":"eth_gasPrice"},{"location":"Network/api/get/eth_gasPrice/#eth_gasprice","text":"","title":"eth_gasPrice"},{"location":"Network/api/get/eth_gasPrice/#v1jsonrpcnetworketh_gasprice","text":"Returns the number of hashes per second that the node is mining with.","title":"/v1/jsonrpc/:network/eth_gasPrice"},{"location":"Network/api/get/eth_gasPrice/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_gasPrice","title":"REQUEST"},{"location":"Network/api/get/eth_gasPrice/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_gasPrice/#example","text":"// HTTP GET curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_gasPrice // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_gasPrice\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_gasPrice\" , \"params\" : [] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_gasPrice/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_gasPrice/#result-fields","text":"HASHRATE - a hex code of an integer representing the current gas price in wei.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_gasPrice/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : \"0x3b9acde7\" }","title":"BODY"},{"location":"Network/api/get/eth_getBalance/","text":"eth_getBalance \u00b6 /v1/jsonrpc/:network/eth_getBalance \u00b6 Returns the balance of the account of given address. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBalance?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 ADDRESS [required] - a string representing the address (20 bytes) to check for balance BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBalance --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBalance\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BALANCE - integer of the current balance in wei. BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x29a33d8a9314006\" }","title":"eth_getBalance"},{"location":"Network/api/get/eth_getBalance/#eth_getbalance","text":"","title":"eth_getBalance"},{"location":"Network/api/get/eth_getBalance/#v1jsonrpcnetworketh_getbalance","text":"Returns the balance of the account of given address.","title":"/v1/jsonrpc/:network/eth_getBalance"},{"location":"Network/api/get/eth_getBalance/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBalance?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getBalance/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getBalance/#request-params","text":"ADDRESS [required] - a string representing the address (20 bytes) to check for balance BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getBalance/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBalance --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBalance\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getBalance/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getBalance/#result-fields","text":"BALANCE - integer of the current balance in wei.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getBalance/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x29a33d8a9314006\" }","title":"BODY"},{"location":"Network/api/get/eth_getBlockByHash/","text":"eth_getBlockByHash \u00b6 /v1/jsonrpc/:network/eth_getBlockByHash \u00b6 Returns information about a block by hash. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockByHash?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK HASH [required] - a string representing the hash (32 bytes) of a block SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions. EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ,false ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes. BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } }","title":"eth_getBlockByHash"},{"location":"Network/api/get/eth_getBlockByHash/#eth_getblockbyhash","text":"","title":"eth_getBlockByHash"},{"location":"Network/api/get/eth_getBlockByHash/#v1jsonrpcnetworketh_getblockbyhash","text":"Returns information about a block by hash.","title":"/v1/jsonrpc/:network/eth_getBlockByHash"},{"location":"Network/api/get/eth_getBlockByHash/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockByHash?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getBlockByHash/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getBlockByHash/#request-params","text":"BLOCK HASH [required] - a string representing the hash (32 bytes) of a block SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions.","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getBlockByHash/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ,false ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getBlockByHash/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getBlockByHash/#result-fields","text":"BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getBlockByHash/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } }","title":"BODY"},{"location":"Network/api/get/eth_getBlockByNumber/","text":"eth_getBlockByNumber \u00b6 /v1/jsonrpc/:network/eth_getBlockByNumber \u00b6 Returns information about a block by hash. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockByNumber?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions. EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockByNumber --data-urlencode 'params=[\"0x5BAD55\",false]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\": [\"0x5BAD55\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByNumber\" , \"params\" : [ \"0x5BAD55\" ,false ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes. BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } }","title":"eth_getBlockByNumber"},{"location":"Network/api/get/eth_getBlockByNumber/#eth_getblockbynumber","text":"","title":"eth_getBlockByNumber"},{"location":"Network/api/get/eth_getBlockByNumber/#v1jsonrpcnetworketh_getblockbynumber","text":"Returns information about a block by hash.","title":"/v1/jsonrpc/:network/eth_getBlockByNumber"},{"location":"Network/api/get/eth_getBlockByNumber/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockByNumber?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getBlockByNumber/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getBlockByNumber/#request-params","text":"BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions.","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getBlockByNumber/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockByNumber --data-urlencode 'params=[\"0x5BAD55\",false]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\": [\"0x5BAD55\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByNumber\" , \"params\" : [ \"0x5BAD55\" ,false ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getBlockByNumber/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getBlockByNumber/#result-fields","text":"BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getBlockByNumber/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } }","title":"BODY"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/","text":"eth_getBlockTransactionCountByHash \u00b6 /v1/jsonrpc/:network/eth_getBlockTransactionCountByHash \u00b6 Returns the number of transactions in a block from a block matching the given block hash. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockTransactionCountByHash?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK HASH [required] - a string representing the hash (32 bytes) of a block EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockTransactionCountByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x50\" }","title":"eth_getBlockTransactionCountByHash"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/#eth_getblocktransactioncountbyhash","text":"","title":"eth_getBlockTransactionCountByHash"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/#v1jsonrpcnetworketh_getblocktransactioncountbyhash","text":"Returns the number of transactions in a block from a block matching the given block hash.","title":"/v1/jsonrpc/:network/eth_getBlockTransactionCountByHash"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockTransactionCountByHash?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/#request-params","text":"BLOCK HASH [required] - a string representing the hash (32 bytes) of a block","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockTransactionCountByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/#result-fields","text":"BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getBlockTransactionCountByHash/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x50\" }","title":"BODY"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/","text":"eth_getBlockTransactionCountByNumber \u00b6 /v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber \u00b6 Returns the number of transactions in a block matching the given block number. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockTransactionCountByNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" }","title":"eth_getBlockTransactionCountByNumber"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/#eth_getblocktransactioncountbynumber","text":"","title":"eth_getBlockTransactionCountByNumber"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/#v1jsonrpcnetworketh_getblocktransactioncountbynumber","text":"Returns the number of transactions in a block matching the given block number.","title":"/v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/#request-params","text":"BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockTransactionCountByNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/#result-fields","text":"BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getBlockTransactionCountByNumber/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" }","title":"BODY"},{"location":"Network/api/get/eth_getCode/","text":"eth_getCode \u00b6 /v1/jsonrpc/:network/eth_getCode \u00b6 Returns code at a given address. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getCode?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 ADDRESS [required] - a string representing the address (20 bytes) of the code BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getCode --data-urlencode 'params=[\"0x06012c8cf97bead5deae237070f9587f8e7a266d\",\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\": [\"0x06012c8cf97bead5deae237070f9587f8e7a266d\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getCode\" , \"params\" : [ \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 CODE - a hex of the code at the given address BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x606060............\" }","title":"eth_getCode"},{"location":"Network/api/get/eth_getCode/#eth_getcode","text":"","title":"eth_getCode"},{"location":"Network/api/get/eth_getCode/#v1jsonrpcnetworketh_getcode","text":"Returns code at a given address.","title":"/v1/jsonrpc/:network/eth_getCode"},{"location":"Network/api/get/eth_getCode/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getCode?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getCode/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getCode/#request-params","text":"ADDRESS [required] - a string representing the address (20 bytes) of the code BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getCode/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getCode --data-urlencode 'params=[\"0x06012c8cf97bead5deae237070f9587f8e7a266d\",\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\": [\"0x06012c8cf97bead5deae237070f9587f8e7a266d\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getCode\" , \"params\" : [ \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getCode/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getCode/#result-fields","text":"CODE - a hex of the code at the given address","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getCode/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x606060............\" }","title":"BODY"},{"location":"Network/api/get/eth_getLogs/","text":"eth_getLogs \u00b6 /v1/jsonrpc/:network/eth_getLogs \u00b6 Returns an array of all logs matching a given filter object. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getLogs?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 FILTER OBJECT address [optional] - a string representing the address (20 bytes) to check for balance fromBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" toBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" topics [optional] - Array of 32 Bytes DATA topics. Topics are order-dependent. blockhash : [optional, **_future **]_ With the addition of EIP-234, blockHash will be a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash . Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash . If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed. EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getLogs --data-urlencode 'params=[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getLogs\" , \"params\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 LOG OBJECTS - An array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes of 32 Bytes), e.g. [\"0x3454645634534...\"] For filters created with eth_newPendingTransactionFilter the return are transaction hashes of 32 Bytes), e.g. [\"0x6345343454645...\"]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : contains one or more 32 Bytes non-indexed arguments of the log. topics : Array of 0 to 4 32 Bytes of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.) BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : [ { \"address\" : \"0x1a94fce7ef36bc90959e206ba569a12afbc91ca1\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x0000000000000000000000003e3310720058c51f0de456e273c626cdd35065700000000000000000000000000000000000000000000000000000000000003185000000000000000000000000000000000000000000000000000000000000318200000000000000000000000000000000000000000000000000000000005c2a23\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x3dc91b98249fa9f2c5c37486a2427a3a7825be240c1c84961dfb3063d9c04d50\" , \"transactionIndex\" : \"0x1d\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x1d\" , \"removed\" : false }, { \"address\" : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x00000000000000000000000077ea137625739598666ded665953d26b3d8e374400000000000000000000000000000000000000000000000000000000000749ff00000000000000000000000000000000000000000000000000000000000a749d00000000000000000000000000000000000000000000000000000000005c2a0f\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x788b1442414cb9c9a36dba2abe250763161a6f6395788a2e808f1b34e92beec1\" , \"transactionIndex\" : \"0x54\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x57\" , \"removed\" : false } ] }","title":"eth_getLogs"},{"location":"Network/api/get/eth_getLogs/#eth_getlogs","text":"","title":"eth_getLogs"},{"location":"Network/api/get/eth_getLogs/#v1jsonrpcnetworketh_getlogs","text":"Returns an array of all logs matching a given filter object.","title":"/v1/jsonrpc/:network/eth_getLogs"},{"location":"Network/api/get/eth_getLogs/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getLogs?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getLogs/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getLogs/#request-params","text":"FILTER OBJECT address [optional] - a string representing the address (20 bytes) to check for balance fromBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" toBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" topics [optional] - Array of 32 Bytes DATA topics. Topics are order-dependent. blockhash : [optional, **_future **]_ With the addition of EIP-234, blockHash will be a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash . Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash . If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed.","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getLogs/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getLogs --data-urlencode 'params=[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getLogs\" , \"params\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getLogs/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getLogs/#result-fields","text":"LOG OBJECTS - An array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes of 32 Bytes), e.g. [\"0x3454645634534...\"] For filters created with eth_newPendingTransactionFilter the return are transaction hashes of 32 Bytes), e.g. [\"0x6345343454645...\"]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : contains one or more 32 Bytes non-indexed arguments of the log. topics : Array of 0 to 4 32 Bytes of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.)","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getLogs/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : [ { \"address\" : \"0x1a94fce7ef36bc90959e206ba569a12afbc91ca1\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x0000000000000000000000003e3310720058c51f0de456e273c626cdd35065700000000000000000000000000000000000000000000000000000000000003185000000000000000000000000000000000000000000000000000000000000318200000000000000000000000000000000000000000000000000000000005c2a23\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x3dc91b98249fa9f2c5c37486a2427a3a7825be240c1c84961dfb3063d9c04d50\" , \"transactionIndex\" : \"0x1d\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x1d\" , \"removed\" : false }, { \"address\" : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x00000000000000000000000077ea137625739598666ded665953d26b3d8e374400000000000000000000000000000000000000000000000000000000000749ff00000000000000000000000000000000000000000000000000000000000a749d00000000000000000000000000000000000000000000000000000000005c2a0f\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x788b1442414cb9c9a36dba2abe250763161a6f6395788a2e808f1b34e92beec1\" , \"transactionIndex\" : \"0x54\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x57\" , \"removed\" : false } ] }","title":"BODY"},{"location":"Network/api/get/eth_getStorageAt/","text":"eth_getStorageAt \u00b6 /v1/jsonrpc/:network/eth_getStorageAt \u00b6 Returns the value from a storage position at a given address. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getStorageAt?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 ADDRESS [required] - a string representing the address (20 bytes) of the storage STORAGE POSITION [required] - a hex code of the position in the storage BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getStorageAt --data-urlencode 'params=[\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getStorageAt\",\"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getStorageAt\" , \"params\" : [ \"0x295a70b2de5e3953354a6a8344e616ed314d7251\" , \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" , \"latest\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 STORAGE VALUE - a hex code of the integer indicating the value of the storage position at the provided address BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" } Calculating the correct position depends on the storage to retrieve. Consider the following contract deployed at 0x295a70b2de5e3953354a6a8344e616ed314d7251 by address 0x391694e7e0b0cce554cb130d723a9d27458f9298 , contract Storage { uint pos0; mapping(address => uint) pos1; function Storage() { pos0 = 1234; pos1[msg.sender] = 5678; } } Retrieving the value of pos0 is straight forward: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x0\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x00000000000000000000000000000000000000000000000000000000000004d2\" } Retrieving an element of the map is harder. The position of an element in the map is calculated with: keccak ( LeftPad32 ( key , 0 ), LeftPad32 ( map position , 0 )) This means to retrieve the storage on pos1[\"0x391694e7e0b0cce554cb130d723a9d27458f9298\"] we need to calculate the position with: keccak ( decodeHex ( '000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298' + '0000000000000000000000000000000000000000000000000000000000000001' ) ); The geth console which comes with the web3 library can be used to make the calculation: > var key = \"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" + \"0000000000000000000000000000000000000000000000000000000000000001\" undefined > web3 . sha3 ( key , { \"encoding\" : \"hex\" }) \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" Now to fetch the storage: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" }","title":"eth_getStorageAt"},{"location":"Network/api/get/eth_getStorageAt/#eth_getstorageat","text":"","title":"eth_getStorageAt"},{"location":"Network/api/get/eth_getStorageAt/#v1jsonrpcnetworketh_getstorageat","text":"Returns the value from a storage position at a given address.","title":"/v1/jsonrpc/:network/eth_getStorageAt"},{"location":"Network/api/get/eth_getStorageAt/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getStorageAt?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getStorageAt/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getStorageAt/#request-params","text":"ADDRESS [required] - a string representing the address (20 bytes) of the storage STORAGE POSITION [required] - a hex code of the position in the storage BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getStorageAt/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getStorageAt --data-urlencode 'params=[\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getStorageAt\",\"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getStorageAt\" , \"params\" : [ \"0x295a70b2de5e3953354a6a8344e616ed314d7251\" , \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" , \"latest\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getStorageAt/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getStorageAt/#result-fields","text":"STORAGE VALUE - a hex code of the integer indicating the value of the storage position at the provided address","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getStorageAt/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" } Calculating the correct position depends on the storage to retrieve. Consider the following contract deployed at 0x295a70b2de5e3953354a6a8344e616ed314d7251 by address 0x391694e7e0b0cce554cb130d723a9d27458f9298 , contract Storage { uint pos0; mapping(address => uint) pos1; function Storage() { pos0 = 1234; pos1[msg.sender] = 5678; } } Retrieving the value of pos0 is straight forward: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x0\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x00000000000000000000000000000000000000000000000000000000000004d2\" } Retrieving an element of the map is harder. The position of an element in the map is calculated with: keccak ( LeftPad32 ( key , 0 ), LeftPad32 ( map position , 0 )) This means to retrieve the storage on pos1[\"0x391694e7e0b0cce554cb130d723a9d27458f9298\"] we need to calculate the position with: keccak ( decodeHex ( '000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298' + '0000000000000000000000000000000000000000000000000000000000000001' ) ); The geth console which comes with the web3 library can be used to make the calculation: > var key = \"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" + \"0000000000000000000000000000000000000000000000000000000000000001\" undefined > web3 . sha3 ( key , { \"encoding\" : \"hex\" }) \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" Now to fetch the storage: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" }","title":"BODY"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/","text":"eth_getTransactionByBlockHashAndIndex \u00b6 /v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex \u00b6 Returns information about a transaction by block hash and transaction index position. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK HASH [required] - a string representing the hash (32 bytes) of a block TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockHashAndIndex\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"0x0\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"eth_getTransactionByBlockHashAndIndex"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/#eth_gettransactionbyblockhashandindex","text":"","title":"eth_getTransactionByBlockHashAndIndex"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/#v1jsonrpcnetworketh_gettransactionbyblockhashandindex","text":"Returns information about a transaction by block hash and transaction index position.","title":"/v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/#request-params","text":"BLOCK HASH [required] - a string representing the hash (32 bytes) of a block TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockHashAndIndex\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"0x0\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/#result-fields","text":"TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getTransactionByBlockHashAndIndex/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"BODY"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/","text":"eth_getTransactionByBlockNumberAndIndex \u00b6 /v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex \u00b6 Returns information about a transaction by block number and transaction index position. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionByBlockNumberAndIndex --data-urlencode 'params=[\"0x5BAD55\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\": [\"0x5BAD55\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockNumberAndIndex\" , \"params\" : [ \"0x5BAD55\" , \"0x0\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"eth_getTransactionByBlockNumberAndIndex"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/#eth_gettransactionbyblocknumberandindex","text":"","title":"eth_getTransactionByBlockNumberAndIndex"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/#v1jsonrpcnetworketh_gettransactionbyblocknumberandindex","text":"Returns information about a transaction by block number and transaction index position.","title":"/v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/#request-params","text":"BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionByBlockNumberAndIndex --data-urlencode 'params=[\"0x5BAD55\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\": [\"0x5BAD55\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockNumberAndIndex\" , \"params\" : [ \"0x5BAD55\" , \"0x0\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/#result-fields","text":"TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getTransactionByBlockNumberAndIndex/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"BODY"},{"location":"Network/api/get/eth_getTransactionByHash/","text":"eth_getTransactionByHash \u00b6 /v1/jsonrpc/:network/eth_getTransactionByHash \u00b6 Returns information about a transaction for a given hash. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByHash?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionByHash --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByHash\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"eth_getTransactionByHash"},{"location":"Network/api/get/eth_getTransactionByHash/#eth_gettransactionbyhash","text":"","title":"eth_getTransactionByHash"},{"location":"Network/api/get/eth_getTransactionByHash/#v1jsonrpcnetworketh_gettransactionbyhash","text":"Returns information about a transaction for a given hash.","title":"/v1/jsonrpc/:network/eth_getTransactionByHash"},{"location":"Network/api/get/eth_getTransactionByHash/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByHash?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getTransactionByHash/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getTransactionByHash/#request-params","text":"TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getTransactionByHash/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionByHash --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByHash\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getTransactionByHash/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getTransactionByHash/#result-fields","text":"TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getTransactionByHash/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"BODY"},{"location":"Network/api/get/eth_getTransactionCount/","text":"eth_getTransactionCount \u00b6 /v1/jsonrpc/:network/eth_getTransactionCount \u00b6 Returns the number of transactions sent from an address. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionCount?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 ADDRESS [required] - a string representing the address (20 bytes) to check for transaction count for BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionCount --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 TRANSACTION COUNT - a hex code of the integer representing the number of transactions sent from this address. BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1a\" }","title":"eth_getTransactionCount"},{"location":"Network/api/get/eth_getTransactionCount/#eth_gettransactioncount","text":"","title":"eth_getTransactionCount"},{"location":"Network/api/get/eth_getTransactionCount/#v1jsonrpcnetworketh_gettransactioncount","text":"Returns the number of transactions sent from an address.","title":"/v1/jsonrpc/:network/eth_getTransactionCount"},{"location":"Network/api/get/eth_getTransactionCount/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionCount?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getTransactionCount/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getTransactionCount/#request-params","text":"ADDRESS [required] - a string representing the address (20 bytes) to check for transaction count for BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getTransactionCount/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionCount --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getTransactionCount/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getTransactionCount/#result-fields","text":"TRANSACTION COUNT - a hex code of the integer representing the number of transactions sent from this address.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getTransactionCount/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1a\" }","title":"BODY"},{"location":"Network/api/get/eth_getTransactionReceipt/","text":"eth_getTransactionReceipt \u00b6 /v1/jsonrpc/:network/eth_getTransactionReceipt \u00b6 Returns the receipt of a transaction by transaction hash. Note that the receipt is not available for pending transactions. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionReceipt?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionReceipt --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionReceipt\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 TRANSACTION RECEIPT - A transaction receipt object, or null when no receipt was found: transactionHash : 32 Bytes - hash of the transaction. transactionIndex : integer of the transactions index position in the block. blockHash : 32 Bytes - hash of the block where this transaction was in. blockNumber : block number where this transaction was in. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. cumulativeGasUsed : the total amount of gas used when this transaction was executed in the block. gasUsed : the amount of gas used by this specific transaction alone. contractAddress : 20 Bytes - the contract address created, if the transaction was a contract creation, otherwise - null. logs : Array - Array of log objects, which this transaction generated. logsBloom : 256 Bytes - Bloom filter for light clients to quickly retrieve related logs. It also returns either : - root : 32 bytes of post-transaction stateroot (pre Byzantium) - status : either 1 (success) or 0 (failure) BODY \u00b6 { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { transactionHash : '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238' , transactionIndex : '0x1' , // 1 blockNumber : '0xb' , // 11 blockHash : '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b' , cumulativeGasUsed : '0x33bc' , // 13244 gasUsed : '0x4dc' , // 1244 contractAddress : '0xb60e8dd61c5d32be8058bb8eb970870f07233155' , // or null, if none was created logs : [{ // logs as returned by getFilterLogs, etc. }, ...], logsBloom : \"0x00...0\" , // 256 byte bloom filter status : '0x1' } }","title":"eth_getTransactionReceipt"},{"location":"Network/api/get/eth_getTransactionReceipt/#eth_gettransactionreceipt","text":"","title":"eth_getTransactionReceipt"},{"location":"Network/api/get/eth_getTransactionReceipt/#v1jsonrpcnetworketh_gettransactionreceipt","text":"Returns the receipt of a transaction by transaction hash. Note that the receipt is not available for pending transactions.","title":"/v1/jsonrpc/:network/eth_getTransactionReceipt"},{"location":"Network/api/get/eth_getTransactionReceipt/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionReceipt?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getTransactionReceipt/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getTransactionReceipt/#request-params","text":"TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getTransactionReceipt/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionReceipt --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionReceipt\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getTransactionReceipt/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getTransactionReceipt/#result-fields","text":"TRANSACTION RECEIPT - A transaction receipt object, or null when no receipt was found: transactionHash : 32 Bytes - hash of the transaction. transactionIndex : integer of the transactions index position in the block. blockHash : 32 Bytes - hash of the block where this transaction was in. blockNumber : block number where this transaction was in. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. cumulativeGasUsed : the total amount of gas used when this transaction was executed in the block. gasUsed : the amount of gas used by this specific transaction alone. contractAddress : 20 Bytes - the contract address created, if the transaction was a contract creation, otherwise - null. logs : Array - Array of log objects, which this transaction generated. logsBloom : 256 Bytes - Bloom filter for light clients to quickly retrieve related logs. It also returns either : - root : 32 bytes of post-transaction stateroot (pre Byzantium) - status : either 1 (success) or 0 (failure)","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getTransactionReceipt/#body","text":"{ \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { transactionHash : '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238' , transactionIndex : '0x1' , // 1 blockNumber : '0xb' , // 11 blockHash : '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b' , cumulativeGasUsed : '0x33bc' , // 13244 gasUsed : '0x4dc' , // 1244 contractAddress : '0xb60e8dd61c5d32be8058bb8eb970870f07233155' , // or null, if none was created logs : [{ // logs as returned by getFilterLogs, etc. }, ...], logsBloom : \"0x00...0\" , // 256 byte bloom filter status : '0x1' } }","title":"BODY"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/","text":"eth_getUncleByBlockHashAndIndex \u00b6 /v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex \u00b6 Returns information about the 'Uncle' of a block by hash and the Uncle index position. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK HASH [required] - a string representing the hash (32 bytes) of a block UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle's index position. EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn't contain individual transactions. BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } }","title":"eth_getUncleByBlockHashAndIndex"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/#eth_getunclebyblockhashandindex","text":"","title":"eth_getUncleByBlockHashAndIndex"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/#v1jsonrpcnetworketh_getunclebyblockhashandindex","text":"Returns information about the 'Uncle' of a block by hash and the Uncle index position.","title":"/v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/#request-params","text":"BLOCK HASH [required] - a string representing the hash (32 bytes) of a block UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle's index position.","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/#result-fields","text":"BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn't contain individual transactions.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getUncleByBlockHashAndIndex/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } }","title":"BODY"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/","text":"eth_getUncleByBlockNumberAndIndex \u00b6 /v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex \u00b6 Returns information about the 'Uncle' of a block by hash and the Uncle index position. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle's index position. EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleByBlockNumberAndIndex --data-urlencode 'params=[\"0x29c\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\": [\"0x29c\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleByBlockNumberAndIndex\" , \"params\" : [ \"0x29c\" , \"0x0\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn't contain individual transactions. BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } }","title":"eth_getUncleByBlockNumberAndIndex"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/#eth_getunclebyblocknumberandindex","text":"","title":"eth_getUncleByBlockNumberAndIndex"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/#v1jsonrpcnetworketh_getunclebyblocknumberandindex","text":"Returns information about the 'Uncle' of a block by hash and the Uncle index position.","title":"/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/#request-params","text":"BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle's index position.","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleByBlockNumberAndIndex --data-urlencode 'params=[\"0x29c\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\": [\"0x29c\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleByBlockNumberAndIndex\" , \"params\" : [ \"0x29c\" , \"0x0\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/#result-fields","text":"BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \"extra data\" field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn't contain individual transactions.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getUncleByBlockNumberAndIndex/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } }","title":"BODY"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/","text":"eth_getUncleCountByBlockHash \u00b6 /v1/jsonrpc/:network/eth_getUncleCountByBlockHash \u00b6 Returns the number of uncles in a block from a block matching the given block hash. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleCountByBlockHash?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK HASH [required] - a string representing the hash (32 bytes) of a block EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleCountByBlockHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1\" }","title":"eth_getUncleCountByBlockHash"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/#eth_getunclecountbyblockhash","text":"","title":"eth_getUncleCountByBlockHash"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/#v1jsonrpcnetworketh_getunclecountbyblockhash","text":"Returns the number of uncles in a block from a block matching the given block hash.","title":"/v1/jsonrpc/:network/eth_getUncleCountByBlockHash"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleCountByBlockHash?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/#request-params","text":"BLOCK HASH [required] - a string representing the hash (32 bytes) of a block","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleCountByBlockHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/#result-fields","text":"BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getUncleCountByBlockHash/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1\" }","title":"BODY"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/","text":"eth_getUncleCountByBlockNumber \u00b6 /v1/jsonrpc/:network/eth_getUncleCountByBlockNumber \u00b6 Returns the number of uncles in a block from a block matching the given block number. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleCountByBlockNumber?params=:paramsJSONArray HEADERS \u00b6 Content-Type: application/json REQUEST PARAMS \u00b6 BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleCountByBlockNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" }","title":"eth_getUncleCountByBlockNumber"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/#eth_getunclecountbyblocknumber","text":"","title":"eth_getUncleCountByBlockNumber"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/#v1jsonrpcnetworketh_getunclecountbyblocknumber","text":"Returns the number of uncles in a block from a block matching the given block number.","title":"/v1/jsonrpc/:network/eth_getUncleCountByBlockNumber"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleCountByBlockNumber?params=:paramsJSONArray","title":"REQUEST"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/#request-params","text":"BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter","title":"REQUEST PARAMS"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleCountByBlockNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/#result-fields","text":"BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getUncleCountByBlockNumber/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" }","title":"BODY"},{"location":"Network/api/get/eth_getWork/","text":"eth_getWork \u00b6 /v1/jsonrpc/:network/eth_getWork \u00b6 Returns the hash of the current block, the seedHash, and the boundary condition to be met (\"target\"). REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getWork HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getWork // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getWork\" , \"params\" : [] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 WORK ARRAY 32 Bytes - current block header pow-hash 32 Bytes - the seed hash used for the DAG. 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty. BODY \u00b6 { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : [ \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\" , \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\" , \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\" ] }","title":"eth_getWork"},{"location":"Network/api/get/eth_getWork/#eth_getwork","text":"","title":"eth_getWork"},{"location":"Network/api/get/eth_getWork/#v1jsonrpcnetworketh_getwork","text":"Returns the hash of the current block, the seedHash, and the boundary condition to be met (\"target\").","title":"/v1/jsonrpc/:network/eth_getWork"},{"location":"Network/api/get/eth_getWork/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getWork","title":"REQUEST"},{"location":"Network/api/get/eth_getWork/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_getWork/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getWork // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getWork\" , \"params\" : [] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_getWork/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_getWork/#result-fields","text":"WORK ARRAY 32 Bytes - current block header pow-hash 32 Bytes - the seed hash used for the DAG. 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_getWork/#body","text":"{ \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : [ \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\" , \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\" , \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\" ] }","title":"BODY"},{"location":"Network/api/get/eth_hashrate/","text":"eth_hashrate \u00b6 /v1/jsonrpc/:network/eth_hashrate \u00b6 Returns the number of hashes per second that the node is mining with. Only applicable when the node is mining. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_hashrate HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_hashrate // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_hashrate\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_hashrate\" , \"params\" : [] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 HASHRATE - a hex code of an integer representing the number of hashes per second. BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : \"0x38a\" }","title":"eth_hashrate"},{"location":"Network/api/get/eth_hashrate/#eth_hashrate","text":"","title":"eth_hashrate"},{"location":"Network/api/get/eth_hashrate/#v1jsonrpcnetworketh_hashrate","text":"Returns the number of hashes per second that the node is mining with. Only applicable when the node is mining.","title":"/v1/jsonrpc/:network/eth_hashrate"},{"location":"Network/api/get/eth_hashrate/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_hashrate","title":"REQUEST"},{"location":"Network/api/get/eth_hashrate/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_hashrate/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_hashrate // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_hashrate\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_hashrate\" , \"params\" : [] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_hashrate/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_hashrate/#result-fields","text":"HASHRATE - a hex code of an integer representing the number of hashes per second.","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_hashrate/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : \"0x38a\" }","title":"BODY"},{"location":"Network/api/get/eth_mining/","text":"eth_mining \u00b6 /v1/jsonrpc/:network/eth_mining \u00b6 Returns true if client is actively mining new blocks. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_mining HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_mining // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_mining\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_mining\" , \"params\" : [] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 IS MINING FLAG - a boolean indicating if the client is mining BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : true }","title":"eth_mining"},{"location":"Network/api/get/eth_mining/#eth_mining","text":"","title":"eth_mining"},{"location":"Network/api/get/eth_mining/#v1jsonrpcnetworketh_mining","text":"Returns true if client is actively mining new blocks.","title":"/v1/jsonrpc/:network/eth_mining"},{"location":"Network/api/get/eth_mining/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_mining","title":"REQUEST"},{"location":"Network/api/get/eth_mining/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_mining/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_mining // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_mining\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_mining\" , \"params\" : [] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_mining/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_mining/#result-fields","text":"IS MINING FLAG - a boolean indicating if the client is mining","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_mining/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : true }","title":"BODY"},{"location":"Network/api/get/eth_protocolVersion/","text":"eth_protocolVersion \u00b6 /v1/jsonrpc/:network/eth_protocolVersion \u00b6 Returns the current ethereum protocol version. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_protocolVersion HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_protocolVersion // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_protocolVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_protocolVersion\" , \"params\" : [] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 PROTOCOL VERSION - a string indicating the current ethereum protocol version BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : \"54\" \" }","title":"eth_protocolVersion"},{"location":"Network/api/get/eth_protocolVersion/#eth_protocolversion","text":"","title":"eth_protocolVersion"},{"location":"Network/api/get/eth_protocolVersion/#v1jsonrpcnetworketh_protocolversion","text":"Returns the current ethereum protocol version.","title":"/v1/jsonrpc/:network/eth_protocolVersion"},{"location":"Network/api/get/eth_protocolVersion/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_protocolVersion","title":"REQUEST"},{"location":"Network/api/get/eth_protocolVersion/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_protocolVersion/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_protocolVersion // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_protocolVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_protocolVersion\" , \"params\" : [] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_protocolVersion/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_protocolVersion/#result-fields","text":"PROTOCOL VERSION - a string indicating the current ethereum protocol version","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_protocolVersion/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : \"54\" \" }","title":"BODY"},{"location":"Network/api/get/eth_syncing/","text":"eth_syncing \u00b6 /v1/jsonrpc/:network/eth_syncing \u00b6 Returns an object with data about the sync status or false. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_syncing HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_syncing // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_syncing\" , \"params\" : [] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 SYNC STATUS - a boolean as false only when not syncing SYNC BLOCKS i. startingBlock - a hexcode of the integer indicating the block at which the import started (will only be reset, after the sync reached his head) ii. currentBlock - a hexcode of the integer indicating the current block, same as eth_blockNumber iii. highestBlock - a hexcode of the integer indicating the highest block BODY \u00b6 \\\\ When not syncing { jsonrpc : \"2.0\" , id : 1 , result : \"1\" } \\\\ When syncing { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { startingBlock : '0x384' , currentBlock : '0x386' , highestBlock : '0x454' } }","title":"eth_syncing"},{"location":"Network/api/get/eth_syncing/#eth_syncing","text":"","title":"eth_syncing"},{"location":"Network/api/get/eth_syncing/#v1jsonrpcnetworketh_syncing","text":"Returns an object with data about the sync status or false.","title":"/v1/jsonrpc/:network/eth_syncing"},{"location":"Network/api/get/eth_syncing/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_syncing","title":"REQUEST"},{"location":"Network/api/get/eth_syncing/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/eth_syncing/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_syncing // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_syncing\" , \"params\" : [] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/eth_syncing/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/eth_syncing/#result-fields","text":"SYNC STATUS - a boolean as false only when not syncing SYNC BLOCKS i. startingBlock - a hexcode of the integer indicating the block at which the import started (will only be reset, after the sync reached his head) ii. currentBlock - a hexcode of the integer indicating the current block, same as eth_blockNumber iii. highestBlock - a hexcode of the integer indicating the highest block","title":"RESULT FIELDS"},{"location":"Network/api/get/eth_syncing/#body","text":"\\\\ When not syncing { jsonrpc : \"2.0\" , id : 1 , result : \"1\" } \\\\ When syncing { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { startingBlock : '0x384' , currentBlock : '0x386' , highestBlock : '0x454' } }","title":"BODY"},{"location":"Network/api/get/net_listening/","text":"net_listening \u00b6 /v1/jsonrpc/:network/net_listening \u00b6 Returns true if client is actively listening for network connections. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_listening HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/net_listening // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_listening\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_listening\" , \"params\" : [] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 LISTENING FLAG - a boolean indicating whether the client is actively listening for network connections BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : true }","title":"net_listening"},{"location":"Network/api/get/net_listening/#net_listening","text":"","title":"net_listening"},{"location":"Network/api/get/net_listening/#v1jsonrpcnetworknet_listening","text":"Returns true if client is actively listening for network connections.","title":"/v1/jsonrpc/:network/net_listening"},{"location":"Network/api/get/net_listening/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_listening","title":"REQUEST"},{"location":"Network/api/get/net_listening/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/net_listening/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/net_listening // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_listening\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_listening\" , \"params\" : [] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/net_listening/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/net_listening/#result-fields","text":"LISTENING FLAG - a boolean indicating whether the client is actively listening for network connections","title":"RESULT FIELDS"},{"location":"Network/api/get/net_listening/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : true }","title":"BODY"},{"location":"Network/api/get/net_peerCount/","text":"net_peerCount \u00b6 /v1/jsonrpc/:network/net_peerCount \u00b6 Returns the number of peers currently connected to the client. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_peerCount HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/net_peerCount // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_peerCount\" , \"params\" : [] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 PEER COUNT - integer of the number of connected peers. BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : \"0x64\" }","title":"net_peerCount"},{"location":"Network/api/get/net_peerCount/#net_peercount","text":"","title":"net_peerCount"},{"location":"Network/api/get/net_peerCount/#v1jsonrpcnetworknet_peercount","text":"Returns the number of peers currently connected to the client.","title":"/v1/jsonrpc/:network/net_peerCount"},{"location":"Network/api/get/net_peerCount/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_peerCount","title":"REQUEST"},{"location":"Network/api/get/net_peerCount/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/net_peerCount/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/net_peerCount // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_peerCount\" , \"params\" : [] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/net_peerCount/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/net_peerCount/#result-fields","text":"PEER COUNT - integer of the number of connected peers.","title":"RESULT FIELDS"},{"location":"Network/api/get/net_peerCount/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : \"0x64\" }","title":"BODY"},{"location":"Network/api/get/net_version/","text":"net_version \u00b6 /v1/jsonrpc/:network/net_version \u00b6 Returns the current network id. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_version HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/net_version // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_version\" , \"params\" : [] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 NETWORK ID - a string representing the current network id. BODY \u00b6 { jsonrpc : \"2.0\" , id : 1 , result : \"1\" }","title":"net_version"},{"location":"Network/api/get/net_version/#net_version","text":"","title":"net_version"},{"location":"Network/api/get/net_version/#v1jsonrpcnetworknet_version","text":"Returns the current network id.","title":"/v1/jsonrpc/:network/net_version"},{"location":"Network/api/get/net_version/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_version","title":"REQUEST"},{"location":"Network/api/get/net_version/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/net_version/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/net_version // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_version\" , \"params\" : [] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/net_version/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/net_version/#result-fields","text":"NETWORK ID - a string representing the current network id.","title":"RESULT FIELDS"},{"location":"Network/api/get/net_version/#body","text":"{ jsonrpc : \"2.0\" , id : 1 , result : \"1\" }","title":"BODY"},{"location":"Network/api/get/networkMethod/","text":"method \u00b6 /v1/jsonrpc/network/method \u00b6 A request using an \"HTTP GET-compatible\" (non-state-changing) JSON-RPC method. Most Ethereum JSON-RPC methods can be described in this way, since they query the blockchain for various pieces of information. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. GET \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/network/method?params= Parameters network Ethereum network in lowercase. Possible values: mainnet , ropsten , kovan , rinkeby Enum method JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. String params This is the params field that would normally be part of the JSON-RPC POST body. Use the exact same format. If it's omitted, it will default to an empty array. Array Request \u00b6 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}/{method}?params=' Response \u00b6 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object) JSON-RPC Response \u00b6 200 HEADERS \u00b6 Content-Type:application/json BODY \u00b6 { \"jsonrpc\": \"2.0\", \"id\": -5294191, \"result\": \"sed dolor eu ullamco\" } JSON Schema { \"type\": \"object\", \"properties\": { \"jsonrpc\": { \"type\": \"string\", \"description\": \"JSON-RPC version\", \"enum\": [ \"2.0\" ] }, \"id\": { \"type\": \"integer\", \"description\": \"JSON-RPC request ID\" }, \"result\": { \"type\": \"string\", \"description\": \"JSON-RPC result (can also be an object)\" } }, \"required\": [ \"jsonrpc\", \"id\" ] } Response \u00b6 Bad JSON in params query parameter 400 HEADERS \u00b6 Content-Type:application/json Response \u00b6 JSON-RPC method is not a valid GET method 404 HEADERS \u00b6 Content-Type:application/json Response \u00b6 Server error 500 HEADERS \u00b6 Content-Type:application/json Response \u00b6 Ethereum client error 502 HEADERS \u00b6 Content-Type:application/json","title":"method"},{"location":"Network/api/get/networkMethod/#method","text":"","title":"method"},{"location":"Network/api/get/networkMethod/#v1jsonrpcnetworkmethod","text":"A request using an \"HTTP GET-compatible\" (non-state-changing) JSON-RPC method. Most Ethereum JSON-RPC methods can be described in this way, since they query the blockchain for various pieces of information. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods.","title":"/v1/jsonrpc/network/method"},{"location":"Network/api/get/networkMethod/#get","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/network/method?params= Parameters network Ethereum network in lowercase. Possible values: mainnet , ropsten , kovan , rinkeby Enum method JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. String params This is the params field that would normally be part of the JSON-RPC POST body. Use the exact same format. If it's omitted, it will default to an empty array. Array","title":"GET"},{"location":"Network/api/get/networkMethod/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}/{method}?params='","title":"Request"},{"location":"Network/api/get/networkMethod/#response","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object)","title":"Response"},{"location":"Network/api/get/networkMethod/#json-rpc-response","text":"200","title":"JSON-RPC Response"},{"location":"Network/api/get/networkMethod/#headers","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/networkMethod/#body","text":"{ \"jsonrpc\": \"2.0\", \"id\": -5294191, \"result\": \"sed dolor eu ullamco\" } JSON Schema { \"type\": \"object\", \"properties\": { \"jsonrpc\": { \"type\": \"string\", \"description\": \"JSON-RPC version\", \"enum\": [ \"2.0\" ] }, \"id\": { \"type\": \"integer\", \"description\": \"JSON-RPC request ID\" }, \"result\": { \"type\": \"string\", \"description\": \"JSON-RPC result (can also be an object)\" } }, \"required\": [ \"jsonrpc\", \"id\" ] }","title":"BODY"},{"location":"Network/api/get/networkMethod/#response_1","text":"Bad JSON in params query parameter 400","title":"Response"},{"location":"Network/api/get/networkMethod/#headers_1","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/networkMethod/#response_2","text":"JSON-RPC method is not a valid GET method 404","title":"Response"},{"location":"Network/api/get/networkMethod/#headers_2","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/networkMethod/#response_3","text":"Server error 500","title":"Response"},{"location":"Network/api/get/networkMethod/#headers_3","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/networkMethod/#response_4","text":"Ethereum client error 502","title":"Response"},{"location":"Network/api/get/networkMethod/#headers_4","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/networkMethods/","text":"methods \u00b6 /v1/jsonrpc/network/methods \u00b6 The JSON-RPC methods supported by the /v1/jsonrpc/{network}/{method} (GET) and /v1/jsonrpc/{network} (POST) endpoints. GET \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/network/methods Parameters \u00b6 Attributes network Ethereum network in lowercase. Possible values: mainnet , ropsten , kovan , rinkeby enum Request \u00b6 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}/methods' Response \u00b6 Attributes get required array List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET) string 0 post required array List of methods supported by the /v1/jsonrpc/{network} endpoint (POST) string 0 Methods Response \u00b6 200 HEADERS \u00b6 Content-Type:application/json BODY \u00b6 { \"get\": [ \"culpa ipsum sunt dolor\", \"labore in\", \"sunt pariatur eiusmod\", \"nostrud mollit\" ], \"post\": [ \"aute aliqua elit\", \"eu tempor nulla Excepteur eiusmod\", \"ipsum et officia laborum\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"get\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET)\", \"items\": { \"type\": \"string\" } }, \"post\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network} endpoint (POST)\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"get\", \"post\" ] } Response \u00b6 Server error 500 HEADERS \u00b6 Content-Type:application/json","title":"methods"},{"location":"Network/api/get/networkMethods/#methods","text":"","title":"methods"},{"location":"Network/api/get/networkMethods/#v1jsonrpcnetworkmethods","text":"The JSON-RPC methods supported by the /v1/jsonrpc/{network}/{method} (GET) and /v1/jsonrpc/{network} (POST) endpoints.","title":"/v1/jsonrpc/network/methods"},{"location":"Network/api/get/networkMethods/#get","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/network/methods","title":"GET"},{"location":"Network/api/get/networkMethods/#parameters","text":"Attributes network Ethereum network in lowercase. Possible values: mainnet , ropsten , kovan , rinkeby enum","title":"Parameters"},{"location":"Network/api/get/networkMethods/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}/methods'","title":"Request"},{"location":"Network/api/get/networkMethods/#response","text":"Attributes get required array List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET) string 0 post required array List of methods supported by the /v1/jsonrpc/{network} endpoint (POST) string 0","title":"Response"},{"location":"Network/api/get/networkMethods/#methods-response","text":"200","title":"Methods Response"},{"location":"Network/api/get/networkMethods/#headers","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/networkMethods/#body","text":"{ \"get\": [ \"culpa ipsum sunt dolor\", \"labore in\", \"sunt pariatur eiusmod\", \"nostrud mollit\" ], \"post\": [ \"aute aliqua elit\", \"eu tempor nulla Excepteur eiusmod\", \"ipsum et officia laborum\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"get\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET)\", \"items\": { \"type\": \"string\" } }, \"post\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network} endpoint (POST)\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"get\", \"post\" ] }","title":"BODY"},{"location":"Network/api/get/networkMethods/#response_1","text":"Server error 500","title":"Response"},{"location":"Network/api/get/networkMethods/#headers_1","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/symbol/","text":"symbol \u00b6 /v1/jsonrpc/symbol \u00b6 Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at the exchange with the most volume for the symbol. Use the /v1/ticker/symbols endpoint for the full list of supported symbols. GET \u00b6 GET https://api.backbonecabal.xyz/v1/ticker/symbol Parameters symbol Ticker symbol (currency pair) String Request \u00b6 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/{symbol}' Response \u00b6 Attributes base string Currency pair base quote string Currency pair quote bid number Bid at the exchange with the most volume ask number Ask at the exchange with most volume exchange string The exchange with the most volume volume number Volume at the exchange with the most volume num_exchanges number Number of exchanges queried total_volume number Total volume across all exchanges queried timestamp number Unix timestamp Ticker Response \u00b6 200 HEADERS \u00b6 Content-Type:application/json","title":"symbol"},{"location":"Network/api/get/symbol/#symbol","text":"","title":"symbol"},{"location":"Network/api/get/symbol/#v1jsonrpcsymbol","text":"Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at the exchange with the most volume for the symbol. Use the /v1/ticker/symbols endpoint for the full list of supported symbols.","title":"/v1/jsonrpc/symbol"},{"location":"Network/api/get/symbol/#get","text":"GET https://api.backbonecabal.xyz/v1/ticker/symbol Parameters symbol Ticker symbol (currency pair) String","title":"GET"},{"location":"Network/api/get/symbol/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/{symbol}'","title":"Request"},{"location":"Network/api/get/symbol/#response","text":"Attributes base string Currency pair base quote string Currency pair quote bid number Bid at the exchange with the most volume ask number Ask at the exchange with most volume exchange string The exchange with the most volume volume number Volume at the exchange with the most volume num_exchanges number Number of exchanges queried total_volume number Total volume across all exchanges queried timestamp number Unix timestamp","title":"Response"},{"location":"Network/api/get/symbol/#ticker-response","text":"200","title":"Ticker Response"},{"location":"Network/api/get/symbol/#headers","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/symbolFull/","text":"full \u00b6 /v1/ticker/symbol/full \u00b6 Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at various exchanges where the symbol is traded. Use the /v1/ticker/symbols endpoint for the full list of supported symbols. GET \u00b6 GET https://api.backbonecabal.xyz/v1/ticker/symbol/full Parameters Symbol Ticker symbol (currency pair string Request \u00b6 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/{symbol}/full' Response \u00b6 Attributes base string Currency pair base quote string Currency pair quote tickers array List of tickers at various exchanges object 0 bid number ask number exchange string volume number `timestamp number Full ticker Response \u00b6 200 HEADERS \u00b6 Content-Type:application/json","title":"full"},{"location":"Network/api/get/symbolFull/#full","text":"","title":"full"},{"location":"Network/api/get/symbolFull/#v1tickersymbolfull","text":"Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at various exchanges where the symbol is traded. Use the /v1/ticker/symbols endpoint for the full list of supported symbols.","title":"/v1/ticker/symbol/full"},{"location":"Network/api/get/symbolFull/#get","text":"GET https://api.backbonecabal.xyz/v1/ticker/symbol/full Parameters Symbol Ticker symbol (currency pair string","title":"GET"},{"location":"Network/api/get/symbolFull/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/{symbol}/full'","title":"Request"},{"location":"Network/api/get/symbolFull/#response","text":"Attributes base string Currency pair base quote string Currency pair quote tickers array List of tickers at various exchanges object 0 bid number ask number exchange string volume number `timestamp number","title":"Response"},{"location":"Network/api/get/symbolFull/#full-ticker-response","text":"200","title":"Full ticker Response"},{"location":"Network/api/get/symbolFull/#headers","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/symbols/","text":"symbols \u00b6 /v1/ticker/symbols \u00b6 Get a list of supported symbols (currency pairs), including fiat, crypto, and tokens GET \u00b6 GET https://api.backbonecabal.xyz/v1/ticker/symbols Request \u00b6 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/symbols' Response \u00b6 Attributes symbols array List of supported symbols (currency pairs) string 0 Symbols Response \u00b6 200 HEADERS \u00b6 Content-Type:application/json","title":"symbols"},{"location":"Network/api/get/symbols/#symbols","text":"","title":"symbols"},{"location":"Network/api/get/symbols/#v1tickersymbols","text":"Get a list of supported symbols (currency pairs), including fiat, crypto, and tokens","title":"/v1/ticker/symbols"},{"location":"Network/api/get/symbols/#get","text":"GET https://api.backbonecabal.xyz/v1/ticker/symbols","title":"GET"},{"location":"Network/api/get/symbols/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/symbols'","title":"Request"},{"location":"Network/api/get/symbols/#response","text":"Attributes symbols array List of supported symbols (currency pairs) string 0","title":"Response"},{"location":"Network/api/get/symbols/#symbols-response","text":"200","title":"Symbols Response"},{"location":"Network/api/get/symbols/#headers","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/v1Blacklist/","text":"v1 Blacklist \u00b6 /v1/blacklist \u00b6 Return a blacklist of phishing sites. This list is maintained by GitHub user 409H at https://github.com/409H/EtherAddressLookup/blob/master/blacklists/domains.json . GET \u00b6 GET https://api.backbonecabal.xyz/v1/blacklist Request \u00b6 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/blacklist' Response \u00b6 Attributes string 0 List of blacklisted phishing domains \u00b6 200 HEADERS \u00b6 Content-Type:application/json BODY \u00b6 [ \"quis esse ut\", \"dolor quis\", \"dolore culpa et\", \"laboris Ut ut nisi commodo\", \"l\" ] JSON Schema { \"type\": \"array\", \"items\": { \"type\": \"string\" } } Response \u00b6 Github is having issues 502 HEADERS \u00b6 Content-Type:application/json","title":"v1 Blacklist"},{"location":"Network/api/get/v1Blacklist/#v1-blacklist","text":"","title":"v1 Blacklist"},{"location":"Network/api/get/v1Blacklist/#v1blacklist","text":"Return a blacklist of phishing sites. This list is maintained by GitHub user 409H at https://github.com/409H/EtherAddressLookup/blob/master/blacklists/domains.json .","title":"/v1/blacklist"},{"location":"Network/api/get/v1Blacklist/#get","text":"GET https://api.backbonecabal.xyz/v1/blacklist","title":"GET"},{"location":"Network/api/get/v1Blacklist/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/blacklist'","title":"Request"},{"location":"Network/api/get/v1Blacklist/#response","text":"Attributes string 0","title":"Response"},{"location":"Network/api/get/v1Blacklist/#list-of-blacklisted-phishing-domains","text":"200","title":"List of blacklisted phishing domains"},{"location":"Network/api/get/v1Blacklist/#headers","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/v1Blacklist/#body","text":"[ \"quis esse ut\", \"dolor quis\", \"dolore culpa et\", \"laboris Ut ut nisi commodo\", \"l\" ] JSON Schema { \"type\": \"array\", \"items\": { \"type\": \"string\" } }","title":"BODY"},{"location":"Network/api/get/v1Blacklist/#response_1","text":"Github is having issues 502","title":"Response"},{"location":"Network/api/get/v1Blacklist/#headers_1","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/v2Blacklist/","text":"v2 Blacklist \u00b6 /v2/blacklist \u00b6 Return a blacklist of phishing sites, as well as a whitelist and a fuzzylist. This list is maintained by the MetaMask project at https://github.com/MetaMask/eth-phishing-detect/blob/master/src/config.json . GET \u00b6 GET https://api.backbonecabal.xyz/v2/blacklist Request \u00b6 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v2/blacklist' Response \u00b6 Attributes version required number Version tolerance required number Tolerance fuzzylist required array Fuzzylist string 0 whitelist required array Whitelist string 0 blacklist required array Blacklist string 0 Phishing blacklist, whitelist, and fuzzylist \u00b6 200 HEADERS \u00b6 Content-Type:application/json BODY \u00b6 { \"version\": 38611173, \"tolerance\": 49572925, \"fuzzylist\": [ \"eiusmod anim mollit Ut\", \"minim et ea ex\" ], \"whitelist\": [ \"irure Duis\", \"officia minim voluptate cillum ullamco\", \"nostrud aliquip\", \"ex in sint velit\", \"Excepteur veniam fugi\" ], \"blacklist\": [ \"do in tempor consectet\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"version\": { \"type\": \"integer\", \"description\": \"Version\" }, \"tolerance\": { \"type\": \"integer\", \"description\": \"Tolerance\" }, \"fuzzylist\": { \"description\": \"Fuzzylist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"whitelist\": { \"description\": \"Whitelist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"blacklist\": { \"description\": \"Blacklist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"version\", \"tolerance\", \"fuzzylist\", \"whitelist\", \"blacklist\" ] } Response \u00b6 Github is having issues 502 HEADERS \u00b6 Content-Type:application/json","title":"v2 Blacklist"},{"location":"Network/api/get/v2Blacklist/#v2-blacklist","text":"","title":"v2 Blacklist"},{"location":"Network/api/get/v2Blacklist/#v2blacklist","text":"Return a blacklist of phishing sites, as well as a whitelist and a fuzzylist. This list is maintained by the MetaMask project at https://github.com/MetaMask/eth-phishing-detect/blob/master/src/config.json .","title":"/v2/blacklist"},{"location":"Network/api/get/v2Blacklist/#get","text":"GET https://api.backbonecabal.xyz/v2/blacklist","title":"GET"},{"location":"Network/api/get/v2Blacklist/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v2/blacklist'","title":"Request"},{"location":"Network/api/get/v2Blacklist/#response","text":"Attributes version required number Version tolerance required number Tolerance fuzzylist required array Fuzzylist string 0 whitelist required array Whitelist string 0 blacklist required array Blacklist string 0","title":"Response"},{"location":"Network/api/get/v2Blacklist/#phishing-blacklist-whitelist-and-fuzzylist","text":"200","title":"Phishing blacklist, whitelist, and fuzzylist"},{"location":"Network/api/get/v2Blacklist/#headers","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/v2Blacklist/#body","text":"{ \"version\": 38611173, \"tolerance\": 49572925, \"fuzzylist\": [ \"eiusmod anim mollit Ut\", \"minim et ea ex\" ], \"whitelist\": [ \"irure Duis\", \"officia minim voluptate cillum ullamco\", \"nostrud aliquip\", \"ex in sint velit\", \"Excepteur veniam fugi\" ], \"blacklist\": [ \"do in tempor consectet\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"version\": { \"type\": \"integer\", \"description\": \"Version\" }, \"tolerance\": { \"type\": \"integer\", \"description\": \"Tolerance\" }, \"fuzzylist\": { \"description\": \"Fuzzylist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"whitelist\": { \"description\": \"Whitelist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"blacklist\": { \"description\": \"Blacklist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"version\", \"tolerance\", \"fuzzylist\", \"whitelist\", \"blacklist\" ] }","title":"BODY"},{"location":"Network/api/get/v2Blacklist/#response_1","text":"Github is having issues 502","title":"Response"},{"location":"Network/api/get/v2Blacklist/#headers_1","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/get/web3_clientVersion/","text":"web3_clientVersion \u00b6 /v1/jsonrpc/:network/web3_clientVersion \u00b6 Returns the current client version. REQUEST \u00b6 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/web3_clientVersion HEADERS \u00b6 Content-Type: application/json EXAMPLE \u00b6 // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/web3_clientVersion // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"web3_clientVersion\" , \"params\" : [] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 STRING - The current client version BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"Geth/v1.8.6-patched-leveldb-8818ab0b/linux-amd64/go1.9.2\" }","title":"web3_clientVersion"},{"location":"Network/api/get/web3_clientVersion/#web3_clientversion","text":"","title":"web3_clientVersion"},{"location":"Network/api/get/web3_clientVersion/#v1jsonrpcnetworkweb3_clientversion","text":"Returns the current client version.","title":"/v1/jsonrpc/:network/web3_clientVersion"},{"location":"Network/api/get/web3_clientVersion/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/web3_clientVersion","title":"REQUEST"},{"location":"Network/api/get/web3_clientVersion/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/get/web3_clientVersion/#example","text":"// HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/web3_clientVersion // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"web3_clientVersion\" , \"params\" : [] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/get/web3_clientVersion/#response","text":"","title":"RESPONSE"},{"location":"Network/api/get/web3_clientVersion/#result-fields","text":"STRING - The current client version","title":"RESULT FIELDS"},{"location":"Network/api/get/web3_clientVersion/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"Geth/v1.8.6-patched-leveldb-8818ab0b/linux-amd64/go1.9.2\" }","title":"BODY"},{"location":"Network/api/post/eth_call/","text":"eth_call \u00b6 /v1/jsonrpc/:network/eth_call \u00b6 Executes a new message call immediately without creating a transaction on the block chain. REQUEST \u00b6 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_call HEADERS \u00b6 Content-Type: application/json REQUEST PAYLOAD \u00b6 TRANSACTION CALL OBJECT [required] from : [optional] 20 Bytes - The address the transaction is sent from. to : 20 Bytes - The address the transaction is directed to. gas : [optional] Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. gasPrice : [optional] Integer of the gasPrice used for each paid gas value : [optional] Integer of the value sent with this transaction data : [optional] Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter EXAMPLE \u00b6 // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}, \"latest\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}, \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_call\" , \"params\" : [{ \"from\" : \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\" , \"to\" : \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\" , \"gas\" : \"0x76c0\" , \"gasPrice\" : \"0x9184e72a000\" , \"value\" : \"0x9184e72a\" , \"data\" : \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" } , \"latest\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 RETURN VALUE - the return value of executed contract. BODY \u00b6 { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0x\" }","title":"eth_call"},{"location":"Network/api/post/eth_call/#eth_call","text":"","title":"eth_call"},{"location":"Network/api/post/eth_call/#v1jsonrpcnetworketh_call","text":"Executes a new message call immediately without creating a transaction on the block chain.","title":"/v1/jsonrpc/:network/eth_call"},{"location":"Network/api/post/eth_call/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_call","title":"REQUEST"},{"location":"Network/api/post/eth_call/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/post/eth_call/#request-payload","text":"TRANSACTION CALL OBJECT [required] from : [optional] 20 Bytes - The address the transaction is sent from. to : 20 Bytes - The address the transaction is directed to. gas : [optional] Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. gasPrice : [optional] Integer of the gasPrice used for each paid gas value : [optional] Integer of the value sent with this transaction data : [optional] Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI BLOCK PARAMETER [required] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\", see the default block parameter","title":"REQUEST PAYLOAD"},{"location":"Network/api/post/eth_call/#example","text":"// HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}, \"latest\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}, \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_call\" , \"params\" : [{ \"from\" : \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\" , \"to\" : \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\" , \"gas\" : \"0x76c0\" , \"gasPrice\" : \"0x9184e72a000\" , \"value\" : \"0x9184e72a\" , \"data\" : \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" } , \"latest\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/post/eth_call/#response","text":"","title":"RESPONSE"},{"location":"Network/api/post/eth_call/#result-fields","text":"RETURN VALUE - the return value of executed contract.","title":"RESULT FIELDS"},{"location":"Network/api/post/eth_call/#body","text":"{ \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0x\" }","title":"BODY"},{"location":"Network/api/post/eth_estimateGas/","text":"eth_estimateGas \u00b6 /v1/jsonrpc/:network/eth_estimateGas \u00b6 Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance. REQUEST \u00b6 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_estimateGas HEADERS \u00b6 Content-Type: application/json REQUEST PAYLOAD \u00b6 TRANSACTION CALL OBJECT [required] from : [optional] 20 Bytes - The address the transaction is sent from. to : 20 Bytes - The address the transaction is directed to. gas : [optional] Integer of the gas provided for the transaction execution. eth_estimateGas consumes zero gas, but this parameter may be needed by some executions. gasPrice : [optional] Integer of the gasPrice used for each paid gas value : [optional] Integer of the value sent with this transaction data : [optional] Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI If no gas limit is specified geth uses the block gas limit from the pending block as an upper bound. As a result the returned estimate might not be enough to executed the call/transaction when the amount of gas is higher than the pending block gas limit. EXAMPLE \u00b6 // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_estimateGas\" , \"params\" : [{ \"from\" : \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\" , \"to\" : \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\" , \"gas\" : \"0x76c0\" , \"gasPrice\" : \"0x9184e72a000\" , \"value\" : \"0x9184e72a\" , \"data\" : \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" }] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 GAS USED - the amount of gas used. BODY \u00b6 { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0x5cec\" }","title":"eth_estimateGas"},{"location":"Network/api/post/eth_estimateGas/#eth_estimategas","text":"","title":"eth_estimateGas"},{"location":"Network/api/post/eth_estimateGas/#v1jsonrpcnetworketh_estimategas","text":"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.","title":"/v1/jsonrpc/:network/eth_estimateGas"},{"location":"Network/api/post/eth_estimateGas/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_estimateGas","title":"REQUEST"},{"location":"Network/api/post/eth_estimateGas/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/post/eth_estimateGas/#request-payload","text":"TRANSACTION CALL OBJECT [required] from : [optional] 20 Bytes - The address the transaction is sent from. to : 20 Bytes - The address the transaction is directed to. gas : [optional] Integer of the gas provided for the transaction execution. eth_estimateGas consumes zero gas, but this parameter may be needed by some executions. gasPrice : [optional] Integer of the gasPrice used for each paid gas value : [optional] Integer of the value sent with this transaction data : [optional] Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI If no gas limit is specified geth uses the block gas limit from the pending block as an upper bound. As a result the returned estimate might not be enough to executed the call/transaction when the amount of gas is higher than the pending block gas limit.","title":"REQUEST PAYLOAD"},{"location":"Network/api/post/eth_estimateGas/#example","text":"// HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_estimateGas\" , \"params\" : [{ \"from\" : \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\" , \"to\" : \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\" , \"gas\" : \"0x76c0\" , \"gasPrice\" : \"0x9184e72a000\" , \"value\" : \"0x9184e72a\" , \"data\" : \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" }] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/post/eth_estimateGas/#response","text":"","title":"RESPONSE"},{"location":"Network/api/post/eth_estimateGas/#result-fields","text":"GAS USED - the amount of gas used.","title":"RESULT FIELDS"},{"location":"Network/api/post/eth_estimateGas/#body","text":"{ \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0x5cec\" }","title":"BODY"},{"location":"Network/api/post/eth_sendRawTransaction/","text":"eth_sendRawTransaction \u00b6 /v1/jsonrpc/:network/eth_sendRawTransaction \u00b6 Creates new message call transaction or a contract creation for signed transactions. REQUEST \u00b6 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_sendRawTransaction HEADERS \u00b6 Content-Type: application/json REQUEST PAYLOAD \u00b6 TRANSACTION DATA [required] - The signed transaction data. EXAMPLE \u00b6 // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_sendRawTransaction\" , \"params\" : [ \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 TRANSACTION HASH - 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available NOTE - Use eth_getTransactionReceipt to get the contract address, after the transaction was mined, when you created a contract. BODY \u00b6 { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\" }","title":"eth_sendRawTransaction"},{"location":"Network/api/post/eth_sendRawTransaction/#eth_sendrawtransaction","text":"","title":"eth_sendRawTransaction"},{"location":"Network/api/post/eth_sendRawTransaction/#v1jsonrpcnetworketh_sendrawtransaction","text":"Creates new message call transaction or a contract creation for signed transactions.","title":"/v1/jsonrpc/:network/eth_sendRawTransaction"},{"location":"Network/api/post/eth_sendRawTransaction/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_sendRawTransaction","title":"REQUEST"},{"location":"Network/api/post/eth_sendRawTransaction/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/post/eth_sendRawTransaction/#request-payload","text":"TRANSACTION DATA [required] - The signed transaction data.","title":"REQUEST PAYLOAD"},{"location":"Network/api/post/eth_sendRawTransaction/#example","text":"// HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_sendRawTransaction\" , \"params\" : [ \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/post/eth_sendRawTransaction/#response","text":"","title":"RESPONSE"},{"location":"Network/api/post/eth_sendRawTransaction/#result-fields","text":"TRANSACTION HASH - 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available NOTE - Use eth_getTransactionReceipt to get the contract address, after the transaction was mined, when you created a contract.","title":"RESULT FIELDS"},{"location":"Network/api/post/eth_sendRawTransaction/#body","text":"{ \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\" }","title":"BODY"},{"location":"Network/api/post/eth_submitHashrate/","text":"eth_submitHashrate \u00b6 /v1/jsonrpc/:network/eth_submitHashrate \u00b6 Used for submitting mining hashrate. REQUEST \u00b6 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_submitHashrate HEADERS \u00b6 Content-Type: application/json REQUEST PAYLOAD \u00b6 HASHRATE [required] - a hexadecimal string representation (32 bytes) of the hash rate ID [required] - a string representing a random hexadecimal (32 bytes) ID identifying the client EXAMPLE \u00b6 // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitHashrate\",\"params\":[\"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitHashrate\",\"params\":[\"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_submitHashrate\" , \"params\" : [ \"0x0000000000000000000000000000000000000000000000000000000000500000\" , \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 SUCCESS - returns true if submitting went through succesfully and false otherwise. BODY \u00b6 { \"id\" : 73 , \"jsonrpc\" : \"2.0\" , \"result\" : true }","title":"eth_submitHashrate"},{"location":"Network/api/post/eth_submitHashrate/#eth_submithashrate","text":"","title":"eth_submitHashrate"},{"location":"Network/api/post/eth_submitHashrate/#v1jsonrpcnetworketh_submithashrate","text":"Used for submitting mining hashrate.","title":"/v1/jsonrpc/:network/eth_submitHashrate"},{"location":"Network/api/post/eth_submitHashrate/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_submitHashrate","title":"REQUEST"},{"location":"Network/api/post/eth_submitHashrate/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/post/eth_submitHashrate/#request-payload","text":"HASHRATE [required] - a hexadecimal string representation (32 bytes) of the hash rate ID [required] - a string representing a random hexadecimal (32 bytes) ID identifying the client","title":"REQUEST PAYLOAD"},{"location":"Network/api/post/eth_submitHashrate/#example","text":"// HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitHashrate\",\"params\":[\"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitHashrate\",\"params\":[\"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_submitHashrate\" , \"params\" : [ \"0x0000000000000000000000000000000000000000000000000000000000500000\" , \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/post/eth_submitHashrate/#response","text":"","title":"RESPONSE"},{"location":"Network/api/post/eth_submitHashrate/#result-fields","text":"SUCCESS - returns true if submitting went through succesfully and false otherwise.","title":"RESULT FIELDS"},{"location":"Network/api/post/eth_submitHashrate/#body","text":"{ \"id\" : 73 , \"jsonrpc\" : \"2.0\" , \"result\" : true }","title":"BODY"},{"location":"Network/api/post/eth_submitWork/","text":"eth_submitWork \u00b6 /v1/jsonrpc/:network/eth_submitWork \u00b6 Used for submitting a proof-of-work solution. REQUEST \u00b6 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_submitWork HEADERS \u00b6 Content-Type: application/json REQUEST PAYLOAD \u00b6 WORK ARRAY 8 Bytes - The nonce found (64 bits) 32 Bytes - The header's pow-hash (256 bits) 32 Bytes - The mix digest (256 bits) EXAMPLE \u00b6 // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitWork\",\"params\": [\"0x0000000000000001\",\"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitWork\",\"params\": [\"0x0000000000000001\",\"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_submitWork\" , \"params\" : [ \"0x0000000000000001\" , \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\" , \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\" ] , \"id\" :1 } RESPONSE \u00b6 RESULT FIELDS \u00b6 IS VALID FLAG - returns true if the provided solution is valid, otherwise false. BODY \u00b6 { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : false }","title":"eth_submitWork"},{"location":"Network/api/post/eth_submitWork/#eth_submitwork","text":"","title":"eth_submitWork"},{"location":"Network/api/post/eth_submitWork/#v1jsonrpcnetworketh_submitwork","text":"Used for submitting a proof-of-work solution.","title":"/v1/jsonrpc/:network/eth_submitWork"},{"location":"Network/api/post/eth_submitWork/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_submitWork","title":"REQUEST"},{"location":"Network/api/post/eth_submitWork/#headers","text":"Content-Type: application/json","title":"HEADERS"},{"location":"Network/api/post/eth_submitWork/#request-payload","text":"WORK ARRAY 8 Bytes - The nonce found (64 bits) 32 Bytes - The header's pow-hash (256 bits) 32 Bytes - The mix digest (256 bits)","title":"REQUEST PAYLOAD"},{"location":"Network/api/post/eth_submitWork/#example","text":"// HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitWork\",\"params\": [\"0x0000000000000001\",\"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitWork\",\"params\": [\"0x0000000000000001\",\"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_submitWork\" , \"params\" : [ \"0x0000000000000001\" , \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\" , \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\" ] , \"id\" :1 }","title":"EXAMPLE"},{"location":"Network/api/post/eth_submitWork/#response","text":"","title":"RESPONSE"},{"location":"Network/api/post/eth_submitWork/#result-fields","text":"IS VALID FLAG - returns true if the provided solution is valid, otherwise false.","title":"RESULT FIELDS"},{"location":"Network/api/post/eth_submitWork/#body","text":"{ \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : false }","title":"BODY"},{"location":"Network/api/post/network/","text":"network \u00b6 /v1/jsonrpc/network \u00b6 A request using an \"HTTP POST-compatible\" (state-changing) JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. Use the regular Ethereum JSON-RPC format for the POST body. POST \u00b6 POST https://api.backbonecabal.xyz/v1/jsonrpc/network Parameters Symbol Ticker symbol (currency pair string Request \u00b6 Attributes \u00b6 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 57386342, \\\"method\\\": \\\"eth_submitHashrate\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \u00b6 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object) JSON-RPC Response \u00b6 200 HEADERS \u00b6 Content-Type:application/json BODY \u00b6 { \"jsonrpc\": \"2.0\", \"id\": 4198843 } JSON Schema { \"type\": \"object\", \"properties\": { \"jsonrpc\": { \"type\": \"string\", \"description\": \"JSON-RPC version\", \"enum\": [ \"2.0\" ] }, \"id\": { \"type\": \"integer\", \"description\": \"JSON-RPC request ID\" }, \"result\": { \"type\": \"string\", \"description\": \"JSON-RPC result (can also be an object)\" } }, \"required\": [ \"jsonrpc\", \"id\" ] } Request \u00b6 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 1260246, \\\"method\\\": \\\"eth_submitWork\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \u00b6 Bad JSON in POST body or missing Content-Type Headers 400 HEADERS \u00b6 Content-Type:application/JSON Request \u00b6 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": -2521981, \\\"method\\\": \\\"eth_estimateGas\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \u00b6 JSON-RPC method is not a valid POST method 404 Request \u00b6 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": -50206243, \\\"method\\\": \\\"eth_submitWork\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \u00b6 Server error 500 HEADERS \u00b6 Content-Type:application/JSON Request \u00b6 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 23533803, \\\"method\\\": \\\"eth_estimateGas\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \u00b6 Ethereum client error 502 HEADERS \u00b6 Content-Type:application/JSON","title":"network"},{"location":"Network/api/post/network/#network","text":"","title":"network"},{"location":"Network/api/post/network/#v1jsonrpcnetwork","text":"A request using an \"HTTP POST-compatible\" (state-changing) JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. Use the regular Ethereum JSON-RPC format for the POST body.","title":"/v1/jsonrpc/network"},{"location":"Network/api/post/network/#post","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/network Parameters Symbol Ticker symbol (currency pair string","title":"POST"},{"location":"Network/api/post/network/#request","text":"","title":"Request"},{"location":"Network/api/post/network/#attributes","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 57386342, \\\"method\\\": \\\"eth_submitHashrate\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}'","title":"Attributes"},{"location":"Network/api/post/network/#response","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object)","title":"Response"},{"location":"Network/api/post/network/#json-rpc-response","text":"200","title":"JSON-RPC Response"},{"location":"Network/api/post/network/#headers","text":"Content-Type:application/json","title":"HEADERS"},{"location":"Network/api/post/network/#body","text":"{ \"jsonrpc\": \"2.0\", \"id\": 4198843 } JSON Schema { \"type\": \"object\", \"properties\": { \"jsonrpc\": { \"type\": \"string\", \"description\": \"JSON-RPC version\", \"enum\": [ \"2.0\" ] }, \"id\": { \"type\": \"integer\", \"description\": \"JSON-RPC request ID\" }, \"result\": { \"type\": \"string\", \"description\": \"JSON-RPC result (can also be an object)\" } }, \"required\": [ \"jsonrpc\", \"id\" ] }","title":"BODY"},{"location":"Network/api/post/network/#request_1","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 1260246, \\\"method\\\": \\\"eth_submitWork\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}'","title":"Request"},{"location":"Network/api/post/network/#response_1","text":"Bad JSON in POST body or missing Content-Type Headers 400","title":"Response"},{"location":"Network/api/post/network/#headers_1","text":"Content-Type:application/JSON","title":"HEADERS"},{"location":"Network/api/post/network/#request_2","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": -2521981, \\\"method\\\": \\\"eth_estimateGas\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}'","title":"Request"},{"location":"Network/api/post/network/#response_2","text":"JSON-RPC method is not a valid POST method 404","title":"Response"},{"location":"Network/api/post/network/#request_3","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": -50206243, \\\"method\\\": \\\"eth_submitWork\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}'","title":"Request"},{"location":"Network/api/post/network/#response_3","text":"Server error 500","title":"Response"},{"location":"Network/api/post/network/#headers_2","text":"Content-Type:application/JSON","title":"HEADERS"},{"location":"Network/api/post/network/#request_4","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 23533803, \\\"method\\\": \\\"eth_estimateGas\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}'","title":"Request"},{"location":"Network/api/post/network/#response_4","text":"Ethereum client error 502","title":"Response"},{"location":"Network/api/post/network/#headers_3","text":"Content-Type:application/JSON","title":"HEADERS"},{"location":"Network/websocket/","text":"Introduction \u00b6 Backbone's websocket endpoint provides support for Pub/Sub API as well as JSON-RPC filter support. The regular Ethereum API is also supported and documented in the 'examples' portion of 'Ethereum API' All examples in this reference section uses WSCAT, but will work with any tool that supports websockets. Some tools you can use for making these requests WSCAT Advanced Rest Client EXAMPLE \u00b6 The following is an example showing a connection to the WebSockets endpoint and using subscriptions through web3.js 1.0 NOTE: web3.js 1.0.0-beta.34 has an open issue with request headers. ( https://github.com/ethereum/web3.js/issues/1559 ) Users will have to revert to version 1.0.0-beta.33 to avoid the issue. const Web3 = require ( \"web3\" ); let web3 = new Web3 ( new Web3 . providers . WebsocketProvider ( \"wss://mainnet.backbonecabal.xyz/ws\" ) ); const instance = new web3 . eth . Contract ( < abi > , < address > ); instance . getPastEvents ( \"SomeEvent\" , { fromBlock : 0 , toBlock : \"latest\" }, ( errors , events ) => { if ( ! errors ) { // process events } } );","title":"Introduction"},{"location":"Network/websocket/#introduction","text":"Backbone's websocket endpoint provides support for Pub/Sub API as well as JSON-RPC filter support. The regular Ethereum API is also supported and documented in the 'examples' portion of 'Ethereum API' All examples in this reference section uses WSCAT, but will work with any tool that supports websockets. Some tools you can use for making these requests WSCAT Advanced Rest Client","title":"Introduction"},{"location":"Network/websocket/#example","text":"The following is an example showing a connection to the WebSockets endpoint and using subscriptions through web3.js 1.0 NOTE: web3.js 1.0.0-beta.34 has an open issue with request headers. ( https://github.com/ethereum/web3.js/issues/1559 ) Users will have to revert to version 1.0.0-beta.33 to avoid the issue. const Web3 = require ( \"web3\" ); let web3 = new Web3 ( new Web3 . providers . WebsocketProvider ( \"wss://mainnet.backbonecabal.xyz/ws\" ) ); const instance = new web3 . eth . Contract ( < abi > , < address > ); instance . getPastEvents ( \"SomeEvent\" , { fromBlock : 0 , toBlock : \"latest\" }, ( errors , events ) => { if ( ! errors ) { // process events } } );","title":"EXAMPLE"},{"location":"Network/websocket/eth_getFilterChanges/","text":"eth_getFilterChanges \u00b6 Polling method for a filter, which returns an array of logs which occurred since last poll. EXAMPLE \u00b6 >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getFilterChanges\" , \"params\" : [ \"0xfe704947a3cd3ca12541458a4321c869\" ] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 LOG OBJECT ARRAY - Array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes (32 Bytes), e.g. [\"0x3454645634534...\"]. For filters created with eth_newPendingTransactionFilter the return are transaction hashes (32 Bytes), e.g. [\"0x6345343454645...\"]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : DATA - contains the non-indexed arguments of the log. topics : Array of DATA - Array of 0 to 4 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.) BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : [{ \"address\" : \"0xb5a5f22694352c15b00323844ad545abb2b11028\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000\" , \"logIndex\" : \"0x0\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e\" , \"0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e\" ], \"transactionHash\" : \"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd\" , \"transactionIndex\" : \"0x3\" }, { \"address\" : \"0xe38165c9f6deb144afc9c32c206b024817e1496d\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000000000000025c6b720\" , \"logIndex\" : \"0x3\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3\" , \"0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef\" ], \"transactionHash\" : \"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153\" , \"transactionIndex\" : \"0x5\" } }","title":"eth_getFilterChanges"},{"location":"Network/websocket/eth_getFilterChanges/#eth_getfilterchanges","text":"Polling method for a filter, which returns an array of logs which occurred since last poll.","title":"eth_getFilterChanges"},{"location":"Network/websocket/eth_getFilterChanges/#example","text":">wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getFilterChanges\" , \"params\" : [ \"0xfe704947a3cd3ca12541458a4321c869\" ] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/websocket/eth_getFilterChanges/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/eth_getFilterChanges/#result-fields","text":"LOG OBJECT ARRAY - Array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes (32 Bytes), e.g. [\"0x3454645634534...\"]. For filters created with eth_newPendingTransactionFilter the return are transaction hashes (32 Bytes), e.g. [\"0x6345343454645...\"]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : DATA - contains the non-indexed arguments of the log. topics : Array of DATA - Array of 0 to 4 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.)","title":"RESULT FIELDS"},{"location":"Network/websocket/eth_getFilterChanges/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : [{ \"address\" : \"0xb5a5f22694352c15b00323844ad545abb2b11028\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000\" , \"logIndex\" : \"0x0\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e\" , \"0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e\" ], \"transactionHash\" : \"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd\" , \"transactionIndex\" : \"0x3\" }, { \"address\" : \"0xe38165c9f6deb144afc9c32c206b024817e1496d\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000000000000025c6b720\" , \"logIndex\" : \"0x3\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3\" , \"0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef\" ], \"transactionHash\" : \"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153\" , \"transactionIndex\" : \"0x5\" } }","title":"BODY"},{"location":"Network/websocket/eth_getFilterLogs/","text":"eth_getFilterLogs \u00b6 Returns an array of all logs matching filter with given id. REQUEST PARAMS \u00b6 FILTER OBJECT fromBlock [optional, default: \"latest\"] Integer block number, or \"latest\" for the last mined block or \"pending\", \"earliest\" for not yet mined transactions. toBlock [optional, default: \"latest\"] Integer block number, or \"latest\" for the last mined block or \"pending\", \"earliest\" for not yet mined transactions. address : [optional] (20 Bytes) Contract address or a list of addresses from which logs should originate. topics : [optional] Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with \"or\" options. blockhash: [optional, future] With the addition of EIP-234, blockHash will be a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash. Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed. EXAMPLE \u00b6 >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getFilterLogs\" , \"params\" : [ \"0xfe704947a3cd3ca12541458a4321c869\" ] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 LOG OBJECT ARRAY - Array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes (32 Bytes), e.g. [\"0x3454645634534...\"]. For filters created with eth_newPendingTransactionFilter the return are transaction hashes (32 Bytes), e.g. [\"0x6345343454645...\"]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : DATA - contains the non-indexed arguments of the log. topics : Array of DATA - Array of 0 to 4 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.) BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : [{ \"address\" : \"0xb5a5f22694352c15b00323844ad545abb2b11028\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000\" , \"logIndex\" : \"0x0\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e\" , \"0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e\" ], \"transactionHash\" : \"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd\" , \"transactionIndex\" : \"0x3\" }, { \"address\" : \"0xe38165c9f6deb144afc9c32c206b024817e1496d\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000000000000025c6b720\" , \"logIndex\" : \"0x3\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3\" , \"0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef\" ], \"transactionHash\" : \"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153\" , \"transactionIndex\" : \"0x5\" } }","title":"eth_getFilterLogs"},{"location":"Network/websocket/eth_getFilterLogs/#eth_getfilterlogs","text":"Returns an array of all logs matching filter with given id.","title":"eth_getFilterLogs"},{"location":"Network/websocket/eth_getFilterLogs/#request-params","text":"FILTER OBJECT fromBlock [optional, default: \"latest\"] Integer block number, or \"latest\" for the last mined block or \"pending\", \"earliest\" for not yet mined transactions. toBlock [optional, default: \"latest\"] Integer block number, or \"latest\" for the last mined block or \"pending\", \"earliest\" for not yet mined transactions. address : [optional] (20 Bytes) Contract address or a list of addresses from which logs should originate. topics : [optional] Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with \"or\" options. blockhash: [optional, future] With the addition of EIP-234, blockHash will be a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash. Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed.","title":"REQUEST PARAMS"},{"location":"Network/websocket/eth_getFilterLogs/#example","text":">wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getFilterLogs\" , \"params\" : [ \"0xfe704947a3cd3ca12541458a4321c869\" ] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/websocket/eth_getFilterLogs/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/eth_getFilterLogs/#result-fields","text":"LOG OBJECT ARRAY - Array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes (32 Bytes), e.g. [\"0x3454645634534...\"]. For filters created with eth_newPendingTransactionFilter the return are transaction hashes (32 Bytes), e.g. [\"0x6345343454645...\"]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : DATA - contains the non-indexed arguments of the log. topics : Array of DATA - Array of 0 to 4 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.)","title":"RESULT FIELDS"},{"location":"Network/websocket/eth_getFilterLogs/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : [{ \"address\" : \"0xb5a5f22694352c15b00323844ad545abb2b11028\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000\" , \"logIndex\" : \"0x0\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e\" , \"0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e\" ], \"transactionHash\" : \"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd\" , \"transactionIndex\" : \"0x3\" }, { \"address\" : \"0xe38165c9f6deb144afc9c32c206b024817e1496d\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000000000000025c6b720\" , \"logIndex\" : \"0x3\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3\" , \"0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef\" ], \"transactionHash\" : \"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153\" , \"transactionIndex\" : \"0x5\" } }","title":"BODY"},{"location":"Network/websocket/eth_newBlockFilter/","text":"eth_newBlockFilter \u00b6 Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges. EXAMPLE \u00b6 >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_newBlockFilter\" , \"params\" : [] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 FILTER ID - A string denoting the newly created filter id BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : \"0xfe704947a3cd3ca12541458a4321c869\" }","title":"eth_newBlockFilter"},{"location":"Network/websocket/eth_newBlockFilter/#eth_newblockfilter","text":"Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges.","title":"eth_newBlockFilter"},{"location":"Network/websocket/eth_newBlockFilter/#example","text":">wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_newBlockFilter\" , \"params\" : [] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/websocket/eth_newBlockFilter/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/eth_newBlockFilter/#result-fields","text":"FILTER ID - A string denoting the newly created filter id","title":"RESULT FIELDS"},{"location":"Network/websocket/eth_newBlockFilter/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : \"0xfe704947a3cd3ca12541458a4321c869\" }","title":"BODY"},{"location":"Network/websocket/eth_newFilter/","text":"eth_newFilter \u00b6 Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges REQUEST PAYLOAD \u00b6 FILTER OBJECT address [optional] - a string representing the address (20 bytes) to check for balance fromBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" toBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" topics [optional] - Array of 32 Bytes DATA topics. Topics are order-dependent. A note on specifying topic filters: Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic filters: [] - anything\" [A] - A in first position (and anything after) [null, B] - anything in first position AND B in second position (and anything after) [A, B] - A in first position AND B in second position (and anything after)\" [[A, B], [A, B]] - (A OR B) in first position AND (A OR B) in second position (and anything after) EXAMPLE \u00b6 >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_newFilter\" , \"params\" : [{ \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" ]}] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 FILTER ID - A string denoting the newly created filter id BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : \"0x7db09f66a25e197d995d3895278b731\" }","title":"eth_newFilter"},{"location":"Network/websocket/eth_newFilter/#eth_newfilter","text":"Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges","title":"eth_newFilter"},{"location":"Network/websocket/eth_newFilter/#request-payload","text":"FILTER OBJECT address [optional] - a string representing the address (20 bytes) to check for balance fromBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" toBlock [optional, default is \"latest\"] - an integer block number, or the string \"latest\", \"earliest\" or \"pending\" topics [optional] - Array of 32 Bytes DATA topics. Topics are order-dependent. A note on specifying topic filters: Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic filters: [] - anything\" [A] - A in first position (and anything after) [null, B] - anything in first position AND B in second position (and anything after) [A, B] - A in first position AND B in second position (and anything after)\" [[A, B], [A, B]] - (A OR B) in first position AND (A OR B) in second position (and anything after)","title":"REQUEST PAYLOAD"},{"location":"Network/websocket/eth_newFilter/#example","text":">wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_newFilter\" , \"params\" : [{ \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" ]}] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/websocket/eth_newFilter/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/eth_newFilter/#result-fields","text":"FILTER ID - A string denoting the newly created filter id","title":"RESULT FIELDS"},{"location":"Network/websocket/eth_newFilter/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : \"0x7db09f66a25e197d995d3895278b731\" }","title":"BODY"},{"location":"Network/websocket/eth_newPendingTransactionFilter/","text":"eth_newPendingTransactionFilter \u00b6 Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges. EXAMPLE \u00b6 >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_newPendingTransactionFilter\" , \"params\" : [] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 FILTER ID - A string denoting the newly created filter id BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : \"0xfe704947a3cd3ca12541458a4321c869\" }","title":"eth_newPendingTransactionFilter"},{"location":"Network/websocket/eth_newPendingTransactionFilter/#eth_newpendingtransactionfilter","text":"Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges.","title":"eth_newPendingTransactionFilter"},{"location":"Network/websocket/eth_newPendingTransactionFilter/#example","text":">wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_newPendingTransactionFilter\" , \"params\" : [] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/websocket/eth_newPendingTransactionFilter/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/eth_newPendingTransactionFilter/#result-fields","text":"FILTER ID - A string denoting the newly created filter id","title":"RESULT FIELDS"},{"location":"Network/websocket/eth_newPendingTransactionFilter/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : \"0xfe704947a3cd3ca12541458a4321c869\" }","title":"BODY"},{"location":"Network/websocket/eth_subscribe/","text":"eth_subscribe \u00b6 Creates a new subscription over particular events. The node will return a subscription id. For each event that matches the subscription a notification with relevant data is send together with the subscription id. REQUEST PARAMS \u00b6 SUBSCRIPTION TYPE NAME [required] newHeads - Subscribing to this, fires a notification each time a new header is appended to the chain, including chain reorganizations. Users can use the bloom filter to determine if the block contains logs that are interested to them. logs - Returns logs that are included in new imported blocks and match the given filter criteria. In case of a chain reorganization previous sent logs that are on the old chain will be resend with the removed property set to true. Logs from transactions that ended up in the new chain are emitted. Therefore a subscription can emit logs for the same transaction multiple times. address (optional) - either an address or an array of addresses. Only logs that are created from these addresses are returned (optional) topics (optional) - only logs which match the specified topics (optional) newPendingTransactions - Returns the hash for all transactions that are added to the pending state and are signed with a key that is available in the node. When a transaction that was previously part of the canonical chain isn't part of the new canonical chain after a reogranization its again emitted. syncing - Indicates when the node starts or stops synchronizing. The result can either be a boolean indicating that the synchronization has started (true), finished (false) or an object with various progress indicators. NOT SUPPORTED ON KOVAN! EXAMPLE \u00b6 >wscat -c wss://mainnet.backbonecabal.xyz/ws // newHeads > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"newHeads\" ]} // logs > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"logs\" , { \"address\" : \"0x8320fe7702b96808f7bbc0d4a888ed1468216cfd\" , \"topics\" : [ \"0xd78a0cb8bb633d06981248b816e7bd33c2a35a6089241d099fa519e361cab902\" ]}]} // newPendingTransactions > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"newPendingTransactions\" ]} // syncing ( not supported on Kovan ) > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"syncing\" ]} RESPONSE \u00b6 RESULT FIELDS \u00b6 SUBSCRIPTION ID - ID of the newly created subscription on the node BODY \u00b6 // New Subscrip t io n respo nse { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0x9cef478923ff08bf67fde6c64013158d\" } // ne wHeads { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_subscription\" , \"params\" : { \"result\" : { \"difficulty\" : \"0x15d9223a23aa\" , \"extraData\" : \"0xd983010305844765746887676f312e342e328777696e646f7773\" , \"gasLimit\" : \"0x47e7c4\" , \"gasUsed\" : \"0x38658\" , \"logsBloom\" : \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\" , \"miner\" : \"0xf8b483dba2c3b7176a3da549ad41a48bb3121069\" , \"nonce\" : \"0x084149998194cc5f\" , \"number\" : \"0x1348c9\" , \"parentHash\" : \"0x7736fab79e05dc611604d22470dadad26f56fe494421b5b333de816ce1f25701\" , \"receiptRoot\" : \"0x2fab35823ad00c7bb388595cb46652fe7886e00660a01e867824d3dceb1c8d36\" , \"sha3Uncles\" : \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\" , \"stateRoot\" : \"0xb3346685172db67de536d8765c43c31009d0eb3bd9c501c9be3229203f15f378\" , \"timestamp\" : \"0x56ffeff8\" , \"transactionsRoot\" : \"0x0167ffa60e3ebc0b080cdb95f7c0087dd6c0e61413140e39d94d3468d7c9689f\" }, \"subscription\" : \"0x9ce59a13059e417087c02d3236a0b1cc\" } } // logs Subscrip t io n { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_subscription\" , \"params\" : { \"subscription\" : \"0x4a8a4c0517381924f9838102c5a4dcb7\" , \"result\" : { \"address\" : \"0x8320fe7702b96808f7bbc0d4a888ed1468216cfd\" , \"blockHash\" : \"0x61cdb2a09ab99abf791d474f20c2ea89bf8de2923a2d42bb49944c8c993cbf04\" , \"blockNumber\" : \"0x29e87\" , \"data\" : \"0x00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003\" , \"logIndex\" : \"0x0\" , \"topics\" :[ \"0xd78a0cb8bb633d06981248b816e7bd33c2a35a6089241d099fa519e361cab902\" ], \"transactionHash\" : \"0xe044554a0a55067caafd07f8020ab9f2af60bdfe337e395ecd84b4877a3d1ab4\" , \"transactionIndex\" : \"0x0\" } } } // ne wPe n di n gTra nsa c t io n Subscrip t io n { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_subscription\" , \"params\" :{ \"subscription\" : \"0xc3b33aa549fb9a60e95d21862596617c\" , \"result\" : \"0xd6fdc5cc41a9959e922f30cb772a9aef46f4daea279307bc5f7024edc4ccd7fa\" } } // sy n ci n g subscrip t io n ( n o t suppor te d o n Kova n ) { \"subscription\" : \"0xe2ffeb2703bcf602d42922385829ce96\" , \"result\" : { \"syncing\" : true , \"status\" : { \"startingBlock\" : 674427 , \"currentBlock\" : 67400 , \"highestBlock\" : 674432 , \"pulledStates\" : 0 , \"knownStates\" : 0 } } }","title":"eth_subscribe"},{"location":"Network/websocket/eth_subscribe/#eth_subscribe","text":"Creates a new subscription over particular events. The node will return a subscription id. For each event that matches the subscription a notification with relevant data is send together with the subscription id.","title":"eth_subscribe"},{"location":"Network/websocket/eth_subscribe/#request-params","text":"SUBSCRIPTION TYPE NAME [required] newHeads - Subscribing to this, fires a notification each time a new header is appended to the chain, including chain reorganizations. Users can use the bloom filter to determine if the block contains logs that are interested to them. logs - Returns logs that are included in new imported blocks and match the given filter criteria. In case of a chain reorganization previous sent logs that are on the old chain will be resend with the removed property set to true. Logs from transactions that ended up in the new chain are emitted. Therefore a subscription can emit logs for the same transaction multiple times. address (optional) - either an address or an array of addresses. Only logs that are created from these addresses are returned (optional) topics (optional) - only logs which match the specified topics (optional) newPendingTransactions - Returns the hash for all transactions that are added to the pending state and are signed with a key that is available in the node. When a transaction that was previously part of the canonical chain isn't part of the new canonical chain after a reogranization its again emitted. syncing - Indicates when the node starts or stops synchronizing. The result can either be a boolean indicating that the synchronization has started (true), finished (false) or an object with various progress indicators. NOT SUPPORTED ON KOVAN!","title":"REQUEST PARAMS"},{"location":"Network/websocket/eth_subscribe/#example","text":">wscat -c wss://mainnet.backbonecabal.xyz/ws // newHeads > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"newHeads\" ]} // logs > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"logs\" , { \"address\" : \"0x8320fe7702b96808f7bbc0d4a888ed1468216cfd\" , \"topics\" : [ \"0xd78a0cb8bb633d06981248b816e7bd33c2a35a6089241d099fa519e361cab902\" ]}]} // newPendingTransactions > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"newPendingTransactions\" ]} // syncing ( not supported on Kovan ) > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"syncing\" ]}","title":"EXAMPLE"},{"location":"Network/websocket/eth_subscribe/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/eth_subscribe/#result-fields","text":"SUBSCRIPTION ID - ID of the newly created subscription on the node","title":"RESULT FIELDS"},{"location":"Network/websocket/eth_subscribe/#body","text":"// New Subscrip t io n respo nse { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0x9cef478923ff08bf67fde6c64013158d\" } // ne wHeads { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_subscription\" , \"params\" : { \"result\" : { \"difficulty\" : \"0x15d9223a23aa\" , \"extraData\" : \"0xd983010305844765746887676f312e342e328777696e646f7773\" , \"gasLimit\" : \"0x47e7c4\" , \"gasUsed\" : \"0x38658\" , \"logsBloom\" : \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\" , \"miner\" : \"0xf8b483dba2c3b7176a3da549ad41a48bb3121069\" , \"nonce\" : \"0x084149998194cc5f\" , \"number\" : \"0x1348c9\" , \"parentHash\" : \"0x7736fab79e05dc611604d22470dadad26f56fe494421b5b333de816ce1f25701\" , \"receiptRoot\" : \"0x2fab35823ad00c7bb388595cb46652fe7886e00660a01e867824d3dceb1c8d36\" , \"sha3Uncles\" : \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\" , \"stateRoot\" : \"0xb3346685172db67de536d8765c43c31009d0eb3bd9c501c9be3229203f15f378\" , \"timestamp\" : \"0x56ffeff8\" , \"transactionsRoot\" : \"0x0167ffa60e3ebc0b080cdb95f7c0087dd6c0e61413140e39d94d3468d7c9689f\" }, \"subscription\" : \"0x9ce59a13059e417087c02d3236a0b1cc\" } } // logs Subscrip t io n { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_subscription\" , \"params\" : { \"subscription\" : \"0x4a8a4c0517381924f9838102c5a4dcb7\" , \"result\" : { \"address\" : \"0x8320fe7702b96808f7bbc0d4a888ed1468216cfd\" , \"blockHash\" : \"0x61cdb2a09ab99abf791d474f20c2ea89bf8de2923a2d42bb49944c8c993cbf04\" , \"blockNumber\" : \"0x29e87\" , \"data\" : \"0x00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003\" , \"logIndex\" : \"0x0\" , \"topics\" :[ \"0xd78a0cb8bb633d06981248b816e7bd33c2a35a6089241d099fa519e361cab902\" ], \"transactionHash\" : \"0xe044554a0a55067caafd07f8020ab9f2af60bdfe337e395ecd84b4877a3d1ab4\" , \"transactionIndex\" : \"0x0\" } } } // ne wPe n di n gTra nsa c t io n Subscrip t io n { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_subscription\" , \"params\" :{ \"subscription\" : \"0xc3b33aa549fb9a60e95d21862596617c\" , \"result\" : \"0xd6fdc5cc41a9959e922f30cb772a9aef46f4daea279307bc5f7024edc4ccd7fa\" } } // sy n ci n g subscrip t io n ( n o t suppor te d o n Kova n ) { \"subscription\" : \"0xe2ffeb2703bcf602d42922385829ce96\" , \"result\" : { \"syncing\" : true , \"status\" : { \"startingBlock\" : 674427 , \"currentBlock\" : 67400 , \"highestBlock\" : 674432 , \"pulledStates\" : 0 , \"knownStates\" : 0 } } }","title":"BODY"},{"location":"Network/websocket/eth_uninstallFilter/","text":"eth_uninstallFilter \u00b6 Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additonally Filters timeout when they aren't requested with eth_getFilterChanges for a period of time. EXAMPLE \u00b6 >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_uninstallFilter\" , \"params\" : [ \"0xfe704947a3cd3ca12541458a4321c869\" ] , \"id\" :73 } RESPONSE \u00b6 RESULT FIELDS \u00b6 UNINSTALLED FLAG - true if the filter was successfully uninstalled, otherwise false. BODY \u00b6 { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : true }","title":"eth_uninstallFilter"},{"location":"Network/websocket/eth_uninstallFilter/#eth_uninstallfilter","text":"Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additonally Filters timeout when they aren't requested with eth_getFilterChanges for a period of time.","title":"eth_uninstallFilter"},{"location":"Network/websocket/eth_uninstallFilter/#example","text":">wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_uninstallFilter\" , \"params\" : [ \"0xfe704947a3cd3ca12541458a4321c869\" ] , \"id\" :73 }","title":"EXAMPLE"},{"location":"Network/websocket/eth_uninstallFilter/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/eth_uninstallFilter/#result-fields","text":"UNINSTALLED FLAG - true if the filter was successfully uninstalled, otherwise false.","title":"RESULT FIELDS"},{"location":"Network/websocket/eth_uninstallFilter/#body","text":"{ \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : true }","title":"BODY"},{"location":"Network/websocket/eth_unsubscribe/","text":"eth_unsubscribe \u00b6 Subscriptions are cancelled with a regular RPC call with eth_unsubscribe as method and the subscription id as first parameter. It returns a bool indicating if the subscription was cancelled successful. REQUEST PARAMS \u00b6 SUBSCRIPTION ID [required] EXAMPLE \u00b6 >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"id\" : 1 , \"method\" : \"eth_unsubscribe\" , \"params\" : [ \"0x9cef478923ff08bf67fde6c64013158d\" ]} RESPONSE \u00b6 RESULT FIELDS \u00b6 UNSUBSCRIBED FLAG - true if the subscription was cancelled successful. BODY \u00b6 { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : true }","title":"eth_unsubscribe"},{"location":"Network/websocket/eth_unsubscribe/#eth_unsubscribe","text":"Subscriptions are cancelled with a regular RPC call with eth_unsubscribe as method and the subscription id as first parameter. It returns a bool indicating if the subscription was cancelled successful.","title":"eth_unsubscribe"},{"location":"Network/websocket/eth_unsubscribe/#request-params","text":"SUBSCRIPTION ID [required]","title":"REQUEST PARAMS"},{"location":"Network/websocket/eth_unsubscribe/#example","text":">wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"id\" : 1 , \"method\" : \"eth_unsubscribe\" , \"params\" : [ \"0x9cef478923ff08bf67fde6c64013158d\" ]}","title":"EXAMPLE"},{"location":"Network/websocket/eth_unsubscribe/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/eth_unsubscribe/#result-fields","text":"UNSUBSCRIBED FLAG - true if the subscription was cancelled successful.","title":"RESULT FIELDS"},{"location":"Network/websocket/eth_unsubscribe/#body","text":"{ \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : true }","title":"BODY"},{"location":"Network/websocket/parity_subscribe/","text":"parity_subscribe \u00b6 Starts a subscription (on WebSockets / IPC / TCP transports) to results of calling some other RPC method. For every change in returned value of that RPC call a JSON-RPC notification with result and subscription ID will be sent to a client. NOTE: parity_subscribe is only supported on the Kovan network REQUEST PARAMS \u00b6 RPC method name [required] RPC method name (string type) OPTIONAL ARGUMENTS Params - Parameters passed to RPC method EXAMPLE \u00b6 >wscat -c wss://kovan.backbonecabal.xyz/ws // subscribe to eth_getBalance > { \"method\" : \"parity_subscribe\" , \"params\" : [ \"eth_getBalance\" , [ \"0x004702bdcC3C7dbFfd943136107E70B827028600\" , \"latest\" ]] , \"id\" :1, \"jsonrpc\" : \"2.0\" } RESPONSE \u00b6 RESULT FIELDS \u00b6 RESULT - ID of the newly created subscription on the node BODY \u00b6 // New Subscrip t io n respo nse { \"jsonrpc\" : \"2.0\" , \"result\" : \"0x070fa1c4d1b3fd81\" , \"id\" : 1 } // e t h_ge t Bala n ce subscrip t io n n o t i f ica t io n { \"jsonrpc\" : \"2.0\" , \"method\" : \"parity_subscription\" , \"params\" : { \"result\" : \"0x36464dbbdd98953718\" , \"subscription\" : \"0x49a3a64111acb418\" } }","title":"parity_subscribe"},{"location":"Network/websocket/parity_subscribe/#parity_subscribe","text":"Starts a subscription (on WebSockets / IPC / TCP transports) to results of calling some other RPC method. For every change in returned value of that RPC call a JSON-RPC notification with result and subscription ID will be sent to a client. NOTE: parity_subscribe is only supported on the Kovan network","title":"parity_subscribe"},{"location":"Network/websocket/parity_subscribe/#request-params","text":"RPC method name [required] RPC method name (string type) OPTIONAL ARGUMENTS Params - Parameters passed to RPC method","title":"REQUEST PARAMS"},{"location":"Network/websocket/parity_subscribe/#example","text":">wscat -c wss://kovan.backbonecabal.xyz/ws // subscribe to eth_getBalance > { \"method\" : \"parity_subscribe\" , \"params\" : [ \"eth_getBalance\" , [ \"0x004702bdcC3C7dbFfd943136107E70B827028600\" , \"latest\" ]] , \"id\" :1, \"jsonrpc\" : \"2.0\" }","title":"EXAMPLE"},{"location":"Network/websocket/parity_subscribe/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/parity_subscribe/#result-fields","text":"RESULT - ID of the newly created subscription on the node","title":"RESULT FIELDS"},{"location":"Network/websocket/parity_subscribe/#body","text":"// New Subscrip t io n respo nse { \"jsonrpc\" : \"2.0\" , \"result\" : \"0x070fa1c4d1b3fd81\" , \"id\" : 1 } // e t h_ge t Bala n ce subscrip t io n n o t i f ica t io n { \"jsonrpc\" : \"2.0\" , \"method\" : \"parity_subscription\" , \"params\" : { \"result\" : \"0x36464dbbdd98953718\" , \"subscription\" : \"0x49a3a64111acb418\" } }","title":"BODY"},{"location":"Network/websocket/parity_unsubscribe/","text":"parity_unsubscribe \u00b6 Unsubscribes from a subscription. NOTE: parity_unsubscribe is only supported on the Kovan network REQUEST PARAMS \u00b6 SUBSCRIPTION ID [required] EXAMPLE \u00b6 >wscat -c wss://kovan.backbonecabal.xyz/ws > { \"method\" : \"parity_unsubscribe\" , \"params\" : [ \"0x070fa1c4d1b3fd81\" ] , \"id\" :1, \"jsonrpc\" : \"2.0\" } RESPONSE \u00b6 RESULT FIELDS \u00b6 UNSUBSCRIBED FLAG - true if the subscription was cancelled successful. BODY \u00b6 { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : true }","title":"parity_unsubscribe"},{"location":"Network/websocket/parity_unsubscribe/#parity_unsubscribe","text":"Unsubscribes from a subscription. NOTE: parity_unsubscribe is only supported on the Kovan network","title":"parity_unsubscribe"},{"location":"Network/websocket/parity_unsubscribe/#request-params","text":"SUBSCRIPTION ID [required]","title":"REQUEST PARAMS"},{"location":"Network/websocket/parity_unsubscribe/#example","text":">wscat -c wss://kovan.backbonecabal.xyz/ws > { \"method\" : \"parity_unsubscribe\" , \"params\" : [ \"0x070fa1c4d1b3fd81\" ] , \"id\" :1, \"jsonrpc\" : \"2.0\" }","title":"EXAMPLE"},{"location":"Network/websocket/parity_unsubscribe/#response","text":"","title":"RESPONSE"},{"location":"Network/websocket/parity_unsubscribe/#result-fields","text":"UNSUBSCRIBED FLAG - true if the subscription was cancelled successful.","title":"RESULT FIELDS"},{"location":"Network/websocket/parity_unsubscribe/#body","text":"{ \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : true }","title":"BODY"},{"location":"OpenMEV/math/","text":"OpenMEV Mechanics and Formulas \u00b6 Overview of OpenMEV Applications SushiSwap \u00b6 Rebating Transaction Costs Rebating a transaction is determined by: Is the function that is called in the transaction eligible? By tracking contract function calls we are better able to provide observability in the rebating process, we can also coordinate with teams wishing to provide more incentives for specific actions and behaviors If yes, what is the percentage that can be rebated? This percentage value is a protocol value that can be adjusted What is the transaction cost for the eligible transaction? Thi s the value that the end user utilized in submitting their transaction. Calculate the Gas Reporting Index value This uses the gas pricing information from api.txprice.com to calculate the gas pricing information to be used in calculating the rebate amount for your transaction Calculate the rebate amount from the bundle profit surplus We take how much profit the arbitrage made and split it among all eligible trades within that bundle Rebate Mechanism \u00b6 Eligible transactions are rebated based on the 80 th confidence interval for gas estimation pricing. This is proportionally distributed based on transactional weight. Note: a naive formula would consider pairings, then slippage tolerance and finally transactional amount The amount of compensation is the fees less to miners and network operational transactional costs. Compensation payouts occur no later than a half hour Contract Function Eligibility \u00b6 $function_calls %eligible swapExactTokensForTokens 100 swapExactTokensForETH 100 swapExactETHForTokens 100 swapETHForExactTokens 100 getAmountsOut null addLiquidityETH 50 addLiquidity 50 swapTokensForExactTokens 100 getAmountOut null removeLiquidityETHWithPermit 100 swapTokensForExactETH 100 removeLiquidityWithPermit 25 removeLiquidityETH 25 removeLiquidity 25 factory null swapExactTokensForETHSupportingFeeOnTransferTokens # swapExactTokensForTokensSupportingFeeOnTransferTokens # getAmountsIn null WETH null swapExactETHForTokensSupportingFeeOnTransferTokens # getAmountIn null removeLiquidityETHWithPermitSupportingFeeOnTransferTokens # removeLiquidityETHSupportingFeeOnTransferTokens # Rebate Calculations \u00b6 Note : naive implementation, expect changes bundleCost = mev bribe + bundleTxs[1,2,...] gasAllowance = mev bribe - bundleTxs[1,2,...] BundleTransactionGas[1,2,...] = Individual Gas Cost BundleId = The Block Number (or hash?) in which the bundle was included max_gasRebate = (BundleId(BundleTransactionGas[1,2,...])) Transaction Parameters \u00b6 targetBlockNumber : block number at which this bundle is valid minTimestamp : minimum timestamp at which this bundle is valid (inclusive) maxTimestamp : maximum timestamp at which this bundle is valid (inclusive) MEV Bundle pricing formula \u00b6 Our costs for bundling transactions for MEV are as follows: Formula for calculating the pricing of a bundle (flashbots): \\[s_{v0.2} = \\frac{\\Delta_{coinbase} + \\sum_{T\\in U}g_Tp_T - \\sum_{T\\in M \\cap U}g_Tp_T}{\\sum_{T\\in U}g_T}\\] \\(s\\) : bundle \\(U\\) score used to sort bundles. \\(U\\) : ordered list of transactions \\(T\\) in a bundle. \\(M\\) : set of transactions \\(T\\) in the mempool. \\(g_{T}\\) : gas used by transaction \\(T\\) . \\(p_{T}\\) : gas price of transaction \\(T\\) . \\(\\Delta_{coinbase}\\) : coinbase difference from direct payment. Explanation \u00b6 This formula derives the effective gas price of the bundle by summing up all payments to coinbase as well as gas fees except for the gas fees of transactions that have been seen in the mempool. The gas fees of mempool transactions are deducted to prevent \"stuffing\" bundles with high gas price transactions from the mempool to inflate the effective gas price. Transactions Status Coding \u00b6 Status Description QUEUED The default state when initially creating a transaction during the initial API call. This indicates that this transaction is waiting to be picked up by a background worker. PROCESSING A background worker has started to process this transaction. FUNDING An auxiliary funding transaction is being initiated (this only applies to non-Ether transactions). FUNDED An auxiliary funding transaction was successful (this only applies to non-Ether transactions). BROADCASTING The transaction is being announced to the blockchain network nodes. BROADCASTED The transaction was successfully announced to the blockchain network nodes. PENDING The transaction is \"pending\" / \"in the mempool\", i.e. known to (some) blockchain network nodes, and awaiting inclusion/mining into a block. CONFIRMING The transaction was mined into a block, but not enough subsequent blocks have yet been mined to consider that transaction \"safe\" / confirmed. CONFIRMED The transaction was mined into a block and enough subsequent blocks have been mined to consider that transaction \"safe\" / confirmed. FAILED The transaction was mined into a block, but the execution of its smart contract code failed. Several reasons are possible, most notably \"out of gas\". The transaction is still included in a block because its gas is still awarded to the miner who attempted to execute it. REJECTED The transaction was mined into a block but was rejected during the execution of its smart contract code. Several reasons are possible, most notably Solidity's require() assertions not being satisfied. The transaction is still included in a block because it's gas is still awarded to the miner who attempted to execute it. UNPROCESSABLE An unrecoverable error occurred which prevents us from getting this transaction onto the blockchain. We have given up (or the customer requested us not to retry). RETRYING A temporary/recoverable error occurred, and this transaction was re-queued as to try getting this transaction onto the blockchain at a later time. This state is more or less equivalent to QUEUED, but its name is more telling.","title":"OpenMEV Mechanics and Formulas"},{"location":"OpenMEV/math/#openmev-mechanics-and-formulas","text":"Overview of OpenMEV Applications","title":"OpenMEV Mechanics and Formulas"},{"location":"OpenMEV/math/#sushiswap","text":"Rebating Transaction Costs Rebating a transaction is determined by: Is the function that is called in the transaction eligible? By tracking contract function calls we are better able to provide observability in the rebating process, we can also coordinate with teams wishing to provide more incentives for specific actions and behaviors If yes, what is the percentage that can be rebated? This percentage value is a protocol value that can be adjusted What is the transaction cost for the eligible transaction? Thi s the value that the end user utilized in submitting their transaction. Calculate the Gas Reporting Index value This uses the gas pricing information from api.txprice.com to calculate the gas pricing information to be used in calculating the rebate amount for your transaction Calculate the rebate amount from the bundle profit surplus We take how much profit the arbitrage made and split it among all eligible trades within that bundle","title":"SushiSwap"},{"location":"OpenMEV/math/#rebate-mechanism","text":"Eligible transactions are rebated based on the 80 th confidence interval for gas estimation pricing. This is proportionally distributed based on transactional weight. Note: a naive formula would consider pairings, then slippage tolerance and finally transactional amount The amount of compensation is the fees less to miners and network operational transactional costs. Compensation payouts occur no later than a half hour","title":"Rebate Mechanism"},{"location":"OpenMEV/math/#contract-function-eligibility","text":"$function_calls %eligible swapExactTokensForTokens 100 swapExactTokensForETH 100 swapExactETHForTokens 100 swapETHForExactTokens 100 getAmountsOut null addLiquidityETH 50 addLiquidity 50 swapTokensForExactTokens 100 getAmountOut null removeLiquidityETHWithPermit 100 swapTokensForExactETH 100 removeLiquidityWithPermit 25 removeLiquidityETH 25 removeLiquidity 25 factory null swapExactTokensForETHSupportingFeeOnTransferTokens # swapExactTokensForTokensSupportingFeeOnTransferTokens # getAmountsIn null WETH null swapExactETHForTokensSupportingFeeOnTransferTokens # getAmountIn null removeLiquidityETHWithPermitSupportingFeeOnTransferTokens # removeLiquidityETHSupportingFeeOnTransferTokens #","title":"Contract Function Eligibility"},{"location":"OpenMEV/math/#rebate-calculations","text":"Note : naive implementation, expect changes bundleCost = mev bribe + bundleTxs[1,2,...] gasAllowance = mev bribe - bundleTxs[1,2,...] BundleTransactionGas[1,2,...] = Individual Gas Cost BundleId = The Block Number (or hash?) in which the bundle was included max_gasRebate = (BundleId(BundleTransactionGas[1,2,...]))","title":"Rebate Calculations"},{"location":"OpenMEV/math/#transaction-parameters","text":"targetBlockNumber : block number at which this bundle is valid minTimestamp : minimum timestamp at which this bundle is valid (inclusive) maxTimestamp : maximum timestamp at which this bundle is valid (inclusive)","title":"Transaction Parameters"},{"location":"OpenMEV/math/#mev-bundle-pricing-formula","text":"Our costs for bundling transactions for MEV are as follows: Formula for calculating the pricing of a bundle (flashbots): \\[s_{v0.2} = \\frac{\\Delta_{coinbase} + \\sum_{T\\in U}g_Tp_T - \\sum_{T\\in M \\cap U}g_Tp_T}{\\sum_{T\\in U}g_T}\\] \\(s\\) : bundle \\(U\\) score used to sort bundles. \\(U\\) : ordered list of transactions \\(T\\) in a bundle. \\(M\\) : set of transactions \\(T\\) in the mempool. \\(g_{T}\\) : gas used by transaction \\(T\\) . \\(p_{T}\\) : gas price of transaction \\(T\\) . \\(\\Delta_{coinbase}\\) : coinbase difference from direct payment.","title":"MEV Bundle pricing formula"},{"location":"OpenMEV/math/#explanation","text":"This formula derives the effective gas price of the bundle by summing up all payments to coinbase as well as gas fees except for the gas fees of transactions that have been seen in the mempool. The gas fees of mempool transactions are deducted to prevent \"stuffing\" bundles with high gas price transactions from the mempool to inflate the effective gas price.","title":"Explanation"},{"location":"OpenMEV/math/#transactions-status-coding","text":"Status Description QUEUED The default state when initially creating a transaction during the initial API call. This indicates that this transaction is waiting to be picked up by a background worker. PROCESSING A background worker has started to process this transaction. FUNDING An auxiliary funding transaction is being initiated (this only applies to non-Ether transactions). FUNDED An auxiliary funding transaction was successful (this only applies to non-Ether transactions). BROADCASTING The transaction is being announced to the blockchain network nodes. BROADCASTED The transaction was successfully announced to the blockchain network nodes. PENDING The transaction is \"pending\" / \"in the mempool\", i.e. known to (some) blockchain network nodes, and awaiting inclusion/mining into a block. CONFIRMING The transaction was mined into a block, but not enough subsequent blocks have yet been mined to consider that transaction \"safe\" / confirmed. CONFIRMED The transaction was mined into a block and enough subsequent blocks have been mined to consider that transaction \"safe\" / confirmed. FAILED The transaction was mined into a block, but the execution of its smart contract code failed. Several reasons are possible, most notably \"out of gas\". The transaction is still included in a block because its gas is still awarded to the miner who attempted to execute it. REJECTED The transaction was mined into a block but was rejected during the execution of its smart contract code. Several reasons are possible, most notably Solidity's require() assertions not being satisfied. The transaction is still included in a block because it's gas is still awarded to the miner who attempted to execute it. UNPROCESSABLE An unrecoverable error occurred which prevents us from getting this transaction onto the blockchain. We have given up (or the customer requested us not to retry). RETRYING A temporary/recoverable error occurred, and this transaction was re-queued as to try getting this transaction onto the blockchain at a later time. This state is more or less equivalent to QUEUED, but its name is more telling.","title":"Transactions Status Coding"},{"location":"OpenMEV/mev-risks/","text":"MEV Risks \u00b6 source Call \\(T_{MEV}\\) the transaction fees netted by MEV transactions (in Gwei) MEV transactions use an amount of gas \\(g_{MEV}\\) Non-MEV transactions pay a miner fee \\(\\delta\\) (in Gwei per gas unit) Non-MEV transactions use \\(g_N\\) gas The whole block (MEV + non-MEV) uses \\(g = g_{MEV} + g_N\\) gas The block reward is \\(R\\) (in Gwei) The uncle reward is \\(U\\) (in Gwei) There is a rate \\(p\\) such that for each unit of gas added in the block, the uncle risk increases by \\(p\\) . It was once measured that 10M gas adds about 2.5% risk, so we take \\(p = 2.5 \\times 10^{-9}\\) The expected revenue from a block including only MEV transactions is \\[ A = (1-pg_{MEV}) (R + T_{MEV}) + pg_{MEV} U \\] The expected revenue from a block providing \\(g\\) gas in total is \\[ B = (1-pg) (R + T_{MEV} + \\delta g_N) + pgU \\] We look for \\(\\delta\\) such that \\(B \\geq A\\) , which yields \\[ \\delta \\geq \\frac{p(R + T_{MEV} - U)}{1-pg} \\] Note that this measure is independent of the quantity of gas used by MEV vs non-MEV transactions, but simply a function of the total gas used by the block \\(g\\) . Calculating for \\(T_{MEV} \\in [0, 2 \\times 10^9]\\) (i.e., MEV in block netting between 0 and 2 ETH), we obtain the following values for \\(\\delta\\) , assuming 15 million gas is provided: Recently, Tim Beiko argued that the value of \\(p\\) may be different: > If we eyeball it, the gas limit goes from ~12.25m to ~14.75m, so +2.5m. In that, it seems like the uncle rates go from clustering around .045 to .049 (being somewhat generous), so a ~0.004 increase in uncle rate for a 2.5m increase. This means a 10m gas would add ~1.6% uncle risk, not 2.5% as your note assumes. Note that as \\(p\\) decreases, so does the required miner fee. With \\(p = 2.0 \\times 10^{-9}\\) Notebook source How much MEV should I expect in the block? \u00b6 See Flashbots mev-explore , reporting around 200 USD profit per bundle, i.e., ~0.1 ETH (@ 2000 ETH/USD). Note that since the above calculation is based on averages, there could be bundles netting much more than 0.1 ETH sometimes, and bundles netting much less than 0.1 ETH most times. A priority fee of ~2Gwei seems fine for most cases however.","title":"MEV Risks "},{"location":"OpenMEV/mev-risks/#mev-risks","text":"source Call \\(T_{MEV}\\) the transaction fees netted by MEV transactions (in Gwei) MEV transactions use an amount of gas \\(g_{MEV}\\) Non-MEV transactions pay a miner fee \\(\\delta\\) (in Gwei per gas unit) Non-MEV transactions use \\(g_N\\) gas The whole block (MEV + non-MEV) uses \\(g = g_{MEV} + g_N\\) gas The block reward is \\(R\\) (in Gwei) The uncle reward is \\(U\\) (in Gwei) There is a rate \\(p\\) such that for each unit of gas added in the block, the uncle risk increases by \\(p\\) . It was once measured that 10M gas adds about 2.5% risk, so we take \\(p = 2.5 \\times 10^{-9}\\) The expected revenue from a block including only MEV transactions is \\[ A = (1-pg_{MEV}) (R + T_{MEV}) + pg_{MEV} U \\] The expected revenue from a block providing \\(g\\) gas in total is \\[ B = (1-pg) (R + T_{MEV} + \\delta g_N) + pgU \\] We look for \\(\\delta\\) such that \\(B \\geq A\\) , which yields \\[ \\delta \\geq \\frac{p(R + T_{MEV} - U)}{1-pg} \\] Note that this measure is independent of the quantity of gas used by MEV vs non-MEV transactions, but simply a function of the total gas used by the block \\(g\\) . Calculating for \\(T_{MEV} \\in [0, 2 \\times 10^9]\\) (i.e., MEV in block netting between 0 and 2 ETH), we obtain the following values for \\(\\delta\\) , assuming 15 million gas is provided: Recently, Tim Beiko argued that the value of \\(p\\) may be different: > If we eyeball it, the gas limit goes from ~12.25m to ~14.75m, so +2.5m. In that, it seems like the uncle rates go from clustering around .045 to .049 (being somewhat generous), so a ~0.004 increase in uncle rate for a 2.5m increase. This means a 10m gas would add ~1.6% uncle risk, not 2.5% as your note assumes. Note that as \\(p\\) decreases, so does the required miner fee. With \\(p = 2.0 \\times 10^{-9}\\) Notebook source","title":"MEV Risks"},{"location":"OpenMEV/mev-risks/#how-much-mev-should-i-expect-in-the-block","text":"See Flashbots mev-explore , reporting around 200 USD profit per bundle, i.e., ~0.1 ETH (@ 2000 ETH/USD). Note that since the above calculation is based on averages, there could be bundles netting much more than 0.1 ETH sometimes, and bundles netting much less than 0.1 ETH most times. A priority fee of ~2Gwei seems fine for most cases however.","title":"How much MEV should I expect in the block?"},{"location":"OpenMEV/mining-pools/","text":"Pool Examples for ETH \u00b6 Pool connection definition is issued via -P argument which has this syntax: -P scheme://user[.workername][:password]@hostname:port[/...] values in square brackets are optional where scheme can be any of: http for getwork mode (geth) stratum+tcp for plain stratum mode stratum1+tcp for plain stratum eth-proxy compatible mode stratum2+tcp for plain stratum NiceHash compatible mode A note about this form of notation \u00b6 This notation is called URI notation and gives us great flexibility allowing ethminer to specify all needed arguments per single connection (other miners offer single dedicated CLI arguments which are valid for all connections). An URI is formed like this Authority +---------------------------------------------------------------------+ stratum://0x123456789012345678901234567890.Worker:password@eu1.ethermine.org:4444 +------+ +----------------------------------------------+ +---------------+ +--+ | | | | | | | + > Port | | + ------------- > Host | + ------------------------------------------------ > User Info + -------------------------------------------------------------------------- > Scheme Optionally you can append to the above notation anything which might be useful in the form of a path. Example stratum://0x123456789012345678901234567890.Worker:password@eu1.ethermine.org:4444/something/else +--------------+ | Path --------------- + Anything you put in the Path part must be Url Encoded thus, for example, @ must be written as %40 As you may have noticed due to compatibility with pools we need to know exactly which are the delimiters for the account, the workername (if any) and the password (if any) which are respectively a dot . and a column : . Should your values contain any of the above mentioned chars or any other char which may impair the proper parsing of the URI you have two options: - either enclose the string in backticks (ASCII 96) - or URL encode the impairing chars Say you need to provide the pool with an account name which contains a dot. At your discretion you may either write -P stratum://`account.1234`.Worker:password@eu1.ethermine.org:4444 or -P stratum://account%2e1234.Worker:password@eu1.ethermine.org:4444 The above samples produce the very same result. Backticks on *nix . The backtick enclosure has a special meaning of execution thus you may need to further escape the sequence as -P stratum://\\`account.1234\\`.Worker:password@eu1.ethermine.org:4444 % on Windows . The percent symbol % has a special meaning in Windows batch files thus you may need to further escape it by doubling. Following example shows %2e needs to be replaced as %%2e -P stratum://account%%2e1234.Worker:password@eu1.ethermine.org:4444 Secure socket communications for stratum only \u00b6 Ethminer supports secure socket communications (where pool implements and offers it) to avoid the risk of a man-in-the-middle attack To enable it simply replace tcp with either: tls to enable secure socket communication ssl or tls12 to enable secure socket communication allowing only TLS 1.2 encryption thus your connection scheme changes to -P stratum+tls://[...] or -P stratum+tls12://[...] . Same applies for stratum1 and stratum2 . Special characters in variables \u00b6 You can use the %xx (xx=hexvalue of character) to pass special values. Some examples: Code Character %25 % %26 & %2e . %2f / %3a : %3f ? %40 @ Only for version 0.16+ (older versions not affected) \u00b6 Stratum autodetection has been introduced to mitigate user's duty to guess/find which stratum flavour to apply (stratum or stratum1 or stratum2). If you want to let ethminer do the tests for you simply enter scheme as stratum:// (note +tcp is missing) or stratums:// for secure socket or stratumss:// for secure socket allowing only TLS 1.2 encryption. Common samples \u00b6 Here you can find a collection of samples to connect to most commonly used ethash pools. (alphabetic order). Stratum connection is always to be preferred over getwork when pool offers it due to its better network latency. If possible the samples use a protocol which supports reporting of hashrate ( --report-hashrate ) if pool supports this. Check for updates in the pool connection settings visiting the pool's homepage. Variables \u00b6 We tried to merge the requirements of the variables so they match all pools. Variables Description Sample ETH_WALLET Replace ETH_WALLET with your Ethereum wallet number including the leading 0x . 0x1234567890ABCDEF1234567890abcdef12345678 WORKERNAME WORKERNAME may only contain letters and numbers. Some pools also only allow up to a maximum of 8 characters! pl1rig01 EMAIL EMAIL may contain letters, numbers, underscores. Please encode dashes, @-sign and other uncommon charaters using the Special characters joe1.doe_jr-ny%40acme.com USERNAME USERNAME you got from the pool (like miningpoolhub.com ) my_username WORKERPWD WORKERPWD is the password you got from the pool for the worker (like miningpoolhub.com ) - if you have no password set try using 'x' my_workerpwd BTC_WALLET As some pools honor your work in BTC (eg nicehash.com ) BTC_WALLET is your Bitcoin wallet address 1A2b3C4d5e5F6g7H8I9j0kLmNoPqRstUvW Servers \u00b6 The servers are listed in alphabetical order. To get best results reorder them from nearest to farest distance depending on your geographic location. Pools (alphabetic order) \u00b6 Pool Name Pool Homepage Details about connection 2miners.com https://2miners.com/ https://eth.2miners.com/en/help dwarfpool.org https://dwarfpool.com/ https://dwarfpool.com/eth ethermine.org https://ethermine.org/ https://ethermine.org/ ethpool.org https://www.ethpool.org/ https://www.ethpool.org/ f2pool.com https://www.f2pool.com/ https://www.f2pool.com/help/?#tab-content-eth flexpool.io https://flexpool.io/ https://flexpool.io/docs/getting-started/ miningpoolhub.com https://miningpoolhub.com/ https://ethereum.miningpoolhub.com/ nanopool.org https://nanopool.org/ https://eth.nanopool.org/help nicehash.com https://www.nicehash.com/ https://www.nicehash.com/help/which-stratum-servers-are-available sparkpool.com https://sparkpool.com/ https://eth.sparkpool.com/ whalesburg.com https://whalesburg.com/ https://whalesburg.com/start_mining/ 2miners.com \u00b6 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth.2miners.com:2020 dwarfpool.org \u00b6 With email -P stratum1+tcp://ETH_WALLET@eth-ar.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-asia.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-au.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-br.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-cn.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-cn2.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-eu.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-hk.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-sg.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-ru.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-ru2.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-us.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-us2.dwarfpool.com:8008/WORKERNAME/EMAIL Without email -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-ar.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-asia.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-au.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-br.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-cn.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-cn2.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-eu.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-hk.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-sg.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-ru.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-ru2.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-us.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-us2.dwarfpool.com:8008 HINTS: Use \"%40\" for the @-sign in your email address ethermine.org \u00b6 Non-SSL connection: -P stratum1+tcp://ETH_WALLET.WORKERNAME@asia1.ethermine.org:4444 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eu1.ethermine.org:4444 -P stratum1+tcp://ETH_WALLET.WORKERNAME@us1.ethermine.org:4444 -P stratum1+tcp://ETH_WALLET.WORKERNAME@us2.ethermine.org:4444 SSL connection: -P stratum1+ssl://ETH_WALLET.WORKERNAME@asia1.ethermine.org:5555 -P stratum1+ssl://ETH_WALLET.WORKERNAME@eu1.ethermine.org:5555 -P stratum1+ssl://ETH_WALLET.WORKERNAME@us1.ethermine.org:5555 -P stratum1+ssl://ETH_WALLET.WORKERNAME@us2.ethermine.org:5555 ethpool.org \u00b6 -P stratum1+tcp://ETH_WALLET.WORKERNAME@asia1.ethpool.org:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eu1.ethpool.org:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@us1.ethpool.org:3333 f2pool.com \u00b6 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth.f2pool.com:8008 flexpool.io \u00b6 Non-SSL connection: -P stratum1+tcp://ETH_WALLET.WORKERNAME@eu.flexpool.io:4444 -P stratum1+tcp://ETH_WALLET.WORKERNAME@us.flexpool.io:4444 SSL connection: -P stratum1+ssl://ETH_WALLET.WORKERNAME@eu.flexpool.io:5555 -P stratum1+ssl://ETH_WALLET.WORKERNAME@us.flexpool.io:5555 miningpoolhub.com \u00b6 -P stratum2+tcp://USERNAME%2eWORKERNAME:WORKERPWD@asia.ethash-hub.miningpoolhub.com:20535 -P stratum2+tcp://USERNAME%2eWORKERNAME:WORKERPWD@europe.ethash-hub.miningpoolhub.com:20535 -P stratum2+tcp://USERNAME%2eWORKERNAME:WORKERPWD@us-east.ethash-hub.miningpoolhub.com:20535 HINTS: miningpoolhub.com needs username.workername in the internal login process. Use \"%2e\" to join them into one parameter. It seems the password is not being verified by the pool so you can use a plain x as WORKERPWD . nanopool.org \u00b6 Notice \u26a0 Use \"%40\" for the @-sign in your email address Use \"\\%2e\" for the .-sign on Linux in ETH_WALLET.WORKERNAME With email: -P stratum1+tcp://ETH_WALLET@eth-asia1.nanopool.org:9999/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-eu1.nanopool.org:9999/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-eu2.nanopool.org:9999/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-us-east1.nanopool.org:9999/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-us-west1.nanopool.org:9999/WORKERNAME/EMAIL Without email: -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-asia1.nanopool.org:9999 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-eu1.nanopool.org:9999 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-eu2.nanopool.org:9999 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-us-east1.nanopool.org:9999 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-us-west1.nanopool.org:9999 nicehash.com \u00b6 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.br.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.eu.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.hk.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.in.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.jp.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.usa.nicehash.com:3353 sparkpool.com \u00b6 -P stratum1+tcp://ETH_WALLET.WORKERNAME@cn.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eu.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@jp.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@kr.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@na-east.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@na-west.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@tw.sparkpool.com:3333 whalesburg.com \u00b6 -P stratum1+tcp://ETH_WALLET.WORKERNAME@proxy.pool.whalesburg.com:8082","title":"Pool Examples for ETH"},{"location":"OpenMEV/mining-pools/#pool-examples-for-eth","text":"Pool connection definition is issued via -P argument which has this syntax: -P scheme://user[.workername][:password]@hostname:port[/...] values in square brackets are optional where scheme can be any of: http for getwork mode (geth) stratum+tcp for plain stratum mode stratum1+tcp for plain stratum eth-proxy compatible mode stratum2+tcp for plain stratum NiceHash compatible mode","title":"Pool Examples for ETH"},{"location":"OpenMEV/mining-pools/#a-note-about-this-form-of-notation","text":"This notation is called URI notation and gives us great flexibility allowing ethminer to specify all needed arguments per single connection (other miners offer single dedicated CLI arguments which are valid for all connections). An URI is formed like this Authority +---------------------------------------------------------------------+ stratum://0x123456789012345678901234567890.Worker:password@eu1.ethermine.org:4444 +------+ +----------------------------------------------+ +---------------+ +--+ | | | | | | | + > Port | | + ------------- > Host | + ------------------------------------------------ > User Info + -------------------------------------------------------------------------- > Scheme Optionally you can append to the above notation anything which might be useful in the form of a path. Example stratum://0x123456789012345678901234567890.Worker:password@eu1.ethermine.org:4444/something/else +--------------+ | Path --------------- + Anything you put in the Path part must be Url Encoded thus, for example, @ must be written as %40 As you may have noticed due to compatibility with pools we need to know exactly which are the delimiters for the account, the workername (if any) and the password (if any) which are respectively a dot . and a column : . Should your values contain any of the above mentioned chars or any other char which may impair the proper parsing of the URI you have two options: - either enclose the string in backticks (ASCII 96) - or URL encode the impairing chars Say you need to provide the pool with an account name which contains a dot. At your discretion you may either write -P stratum://`account.1234`.Worker:password@eu1.ethermine.org:4444 or -P stratum://account%2e1234.Worker:password@eu1.ethermine.org:4444 The above samples produce the very same result. Backticks on *nix . The backtick enclosure has a special meaning of execution thus you may need to further escape the sequence as -P stratum://\\`account.1234\\`.Worker:password@eu1.ethermine.org:4444 % on Windows . The percent symbol % has a special meaning in Windows batch files thus you may need to further escape it by doubling. Following example shows %2e needs to be replaced as %%2e -P stratum://account%%2e1234.Worker:password@eu1.ethermine.org:4444","title":"A note about this form of notation"},{"location":"OpenMEV/mining-pools/#secure-socket-communications-for-stratum-only","text":"Ethminer supports secure socket communications (where pool implements and offers it) to avoid the risk of a man-in-the-middle attack To enable it simply replace tcp with either: tls to enable secure socket communication ssl or tls12 to enable secure socket communication allowing only TLS 1.2 encryption thus your connection scheme changes to -P stratum+tls://[...] or -P stratum+tls12://[...] . Same applies for stratum1 and stratum2 .","title":"Secure socket communications for stratum only"},{"location":"OpenMEV/mining-pools/#special-characters-in-variables","text":"You can use the %xx (xx=hexvalue of character) to pass special values. Some examples: Code Character %25 % %26 & %2e . %2f / %3a : %3f ? %40 @","title":"Special characters in variables"},{"location":"OpenMEV/mining-pools/#only-for-version-016-older-versions-not-affected","text":"Stratum autodetection has been introduced to mitigate user's duty to guess/find which stratum flavour to apply (stratum or stratum1 or stratum2). If you want to let ethminer do the tests for you simply enter scheme as stratum:// (note +tcp is missing) or stratums:// for secure socket or stratumss:// for secure socket allowing only TLS 1.2 encryption.","title":"Only for version 0.16+ (older versions not affected)"},{"location":"OpenMEV/mining-pools/#common-samples","text":"Here you can find a collection of samples to connect to most commonly used ethash pools. (alphabetic order). Stratum connection is always to be preferred over getwork when pool offers it due to its better network latency. If possible the samples use a protocol which supports reporting of hashrate ( --report-hashrate ) if pool supports this. Check for updates in the pool connection settings visiting the pool's homepage.","title":"Common samples"},{"location":"OpenMEV/mining-pools/#variables","text":"We tried to merge the requirements of the variables so they match all pools. Variables Description Sample ETH_WALLET Replace ETH_WALLET with your Ethereum wallet number including the leading 0x . 0x1234567890ABCDEF1234567890abcdef12345678 WORKERNAME WORKERNAME may only contain letters and numbers. Some pools also only allow up to a maximum of 8 characters! pl1rig01 EMAIL EMAIL may contain letters, numbers, underscores. Please encode dashes, @-sign and other uncommon charaters using the Special characters joe1.doe_jr-ny%40acme.com USERNAME USERNAME you got from the pool (like miningpoolhub.com ) my_username WORKERPWD WORKERPWD is the password you got from the pool for the worker (like miningpoolhub.com ) - if you have no password set try using 'x' my_workerpwd BTC_WALLET As some pools honor your work in BTC (eg nicehash.com ) BTC_WALLET is your Bitcoin wallet address 1A2b3C4d5e5F6g7H8I9j0kLmNoPqRstUvW","title":"Variables"},{"location":"OpenMEV/mining-pools/#servers","text":"The servers are listed in alphabetical order. To get best results reorder them from nearest to farest distance depending on your geographic location.","title":"Servers"},{"location":"OpenMEV/mining-pools/#pools-alphabetic-order","text":"Pool Name Pool Homepage Details about connection 2miners.com https://2miners.com/ https://eth.2miners.com/en/help dwarfpool.org https://dwarfpool.com/ https://dwarfpool.com/eth ethermine.org https://ethermine.org/ https://ethermine.org/ ethpool.org https://www.ethpool.org/ https://www.ethpool.org/ f2pool.com https://www.f2pool.com/ https://www.f2pool.com/help/?#tab-content-eth flexpool.io https://flexpool.io/ https://flexpool.io/docs/getting-started/ miningpoolhub.com https://miningpoolhub.com/ https://ethereum.miningpoolhub.com/ nanopool.org https://nanopool.org/ https://eth.nanopool.org/help nicehash.com https://www.nicehash.com/ https://www.nicehash.com/help/which-stratum-servers-are-available sparkpool.com https://sparkpool.com/ https://eth.sparkpool.com/ whalesburg.com https://whalesburg.com/ https://whalesburg.com/start_mining/","title":"Pools (alphabetic order)"},{"location":"OpenMEV/mining-pools/#2minerscom","text":"-P stratum1+tcp://ETH_WALLET.WORKERNAME@eth.2miners.com:2020","title":"2miners.com"},{"location":"OpenMEV/mining-pools/#dwarfpoolorg","text":"With email -P stratum1+tcp://ETH_WALLET@eth-ar.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-asia.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-au.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-br.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-cn.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-cn2.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-eu.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-hk.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-sg.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-ru.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-ru2.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-us.dwarfpool.com:8008/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-us2.dwarfpool.com:8008/WORKERNAME/EMAIL Without email -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-ar.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-asia.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-au.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-br.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-cn.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-cn2.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-eu.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-hk.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-sg.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-ru.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-ru2.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-us.dwarfpool.com:8008 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-us2.dwarfpool.com:8008 HINTS: Use \"%40\" for the @-sign in your email address","title":"dwarfpool.org"},{"location":"OpenMEV/mining-pools/#ethermineorg","text":"Non-SSL connection: -P stratum1+tcp://ETH_WALLET.WORKERNAME@asia1.ethermine.org:4444 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eu1.ethermine.org:4444 -P stratum1+tcp://ETH_WALLET.WORKERNAME@us1.ethermine.org:4444 -P stratum1+tcp://ETH_WALLET.WORKERNAME@us2.ethermine.org:4444 SSL connection: -P stratum1+ssl://ETH_WALLET.WORKERNAME@asia1.ethermine.org:5555 -P stratum1+ssl://ETH_WALLET.WORKERNAME@eu1.ethermine.org:5555 -P stratum1+ssl://ETH_WALLET.WORKERNAME@us1.ethermine.org:5555 -P stratum1+ssl://ETH_WALLET.WORKERNAME@us2.ethermine.org:5555","title":"ethermine.org"},{"location":"OpenMEV/mining-pools/#ethpoolorg","text":"-P stratum1+tcp://ETH_WALLET.WORKERNAME@asia1.ethpool.org:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eu1.ethpool.org:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@us1.ethpool.org:3333","title":"ethpool.org"},{"location":"OpenMEV/mining-pools/#f2poolcom","text":"-P stratum1+tcp://ETH_WALLET.WORKERNAME@eth.f2pool.com:8008","title":"f2pool.com"},{"location":"OpenMEV/mining-pools/#flexpoolio","text":"Non-SSL connection: -P stratum1+tcp://ETH_WALLET.WORKERNAME@eu.flexpool.io:4444 -P stratum1+tcp://ETH_WALLET.WORKERNAME@us.flexpool.io:4444 SSL connection: -P stratum1+ssl://ETH_WALLET.WORKERNAME@eu.flexpool.io:5555 -P stratum1+ssl://ETH_WALLET.WORKERNAME@us.flexpool.io:5555","title":"flexpool.io"},{"location":"OpenMEV/mining-pools/#miningpoolhubcom","text":"-P stratum2+tcp://USERNAME%2eWORKERNAME:WORKERPWD@asia.ethash-hub.miningpoolhub.com:20535 -P stratum2+tcp://USERNAME%2eWORKERNAME:WORKERPWD@europe.ethash-hub.miningpoolhub.com:20535 -P stratum2+tcp://USERNAME%2eWORKERNAME:WORKERPWD@us-east.ethash-hub.miningpoolhub.com:20535 HINTS: miningpoolhub.com needs username.workername in the internal login process. Use \"%2e\" to join them into one parameter. It seems the password is not being verified by the pool so you can use a plain x as WORKERPWD .","title":"miningpoolhub.com"},{"location":"OpenMEV/mining-pools/#nanopoolorg","text":"Notice \u26a0 Use \"%40\" for the @-sign in your email address Use \"\\%2e\" for the .-sign on Linux in ETH_WALLET.WORKERNAME With email: -P stratum1+tcp://ETH_WALLET@eth-asia1.nanopool.org:9999/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-eu1.nanopool.org:9999/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-eu2.nanopool.org:9999/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-us-east1.nanopool.org:9999/WORKERNAME/EMAIL -P stratum1+tcp://ETH_WALLET@eth-us-west1.nanopool.org:9999/WORKERNAME/EMAIL Without email: -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-asia1.nanopool.org:9999 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-eu1.nanopool.org:9999 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-eu2.nanopool.org:9999 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-us-east1.nanopool.org:9999 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eth-us-west1.nanopool.org:9999","title":"nanopool.org"},{"location":"OpenMEV/mining-pools/#nicehashcom","text":"-P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.br.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.eu.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.hk.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.in.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.jp.nicehash.com:3353 -P stratum2+tcp://BTC_WALLET.WORKERNAME@daggerhashimoto.usa.nicehash.com:3353","title":"nicehash.com"},{"location":"OpenMEV/mining-pools/#sparkpoolcom","text":"-P stratum1+tcp://ETH_WALLET.WORKERNAME@cn.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@eu.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@jp.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@kr.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@na-east.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@na-west.sparkpool.com:3333 -P stratum1+tcp://ETH_WALLET.WORKERNAME@tw.sparkpool.com:3333","title":"sparkpool.com"},{"location":"OpenMEV/mining-pools/#whalesburgcom","text":"-P stratum1+tcp://ETH_WALLET.WORKERNAME@proxy.pool.whalesburg.com:8082","title":"whalesburg.com"},{"location":"OpenMEV/openmev-diagrams/","text":"OpenMEV Technical Overview \u00b6 Info Fork Mode \u00b6 Submit Bundle \u00b6 Submit Tx \u00b6","title":"OpenMEV Technical Overview"},{"location":"OpenMEV/openmev-diagrams/#openmev-technical-overview","text":"Info","title":"OpenMEV Technical Overview"},{"location":"OpenMEV/openmev-diagrams/#fork-mode","text":"","title":"Fork Mode"},{"location":"OpenMEV/openmev-diagrams/#submit-bundle","text":"","title":"Submit Bundle"},{"location":"OpenMEV/openmev-diagrams/#submit-tx","text":"","title":"Submit Tx"},{"location":"OpenMEV/openmev/","text":"OpenMEV \u00b6 Intro Benefits Issues/Support links OpenMEV User Example Engine Summary Application structure Endpoints v1 POST POST Sequencing Transaction Price Service Gas Pricing Service Transaction Details Canary Scanning User Example \u00b6 Info order than sent, we need a mechanism for choosing a canonical id from a list that doesn't depend on the order. This chooses the \"minimum\" id by an arbitrary ordering: the smallest string if possible, otherwise the smallest number, otherwise null. Example order = { Give : ETH , Want : DAI , SlippageLimit : 10 % , Amount : 1000 ETH , OpenMEV : 0xabc ..., FeesIn : DAI , TargetDEX : SushiSwap , Deadline : time . Now () + 1 * time . Minute Signature : sign ( order . SignBytes ()) } When we broadcast this transaction with an arbitrage order, the transaction contains 2 orders: Example transactions = [ { Give : ETH , Want : DAI , SlippageLimit : 10 % , Amount : 1000 ETH , OpenMEV : 0xabc ..., FeesIn : DAI , TargetDEX : SushiSwap , Deadline : time . Now () + 1 * time . Minute Signature : sign ( order . SignBytes ()) }, { Give : DAI , Want : ETH , SlippageLimit : 1 % , Amount : 10 ETH , OpenMEV : 0xabc ..., FeesIn : DAI , TargetDEX : SushiSwap , Deadline : time . Now () + 1 * time . Minute Signature : sign ( order . SignBytes ()), IsFlashbots OpenMEV : true , TransferProfitTo : transactions [ 0 ]. signer } ] The arbitrage profit generated by second order is sent to the msg.sender of the first order. The first order will still lose 5%(assumption) in slippage. Arbitrage profits will rarely be more than the slippage loss. If someone front runs the transaction sent by the OpenMEV: They pay for the gas while post confirmation of transaction the fees for order1 goes to the relayer in the signed order. They lose 5% in slippage as our real user does. Engine \u00b6 OpenMEV uses a batch auction-based matching engine to execute orders. All orders for the given market are collected. Orders beyond their time-in-force are canceled. Orders are placed into separate lists by market side, and aggregate supply and demand curves are calculated. The matching engine discovers the price at which the aggregate supply and demand curves cross, which yields the clearing price. If there is a horizontal cross - i.e., two prices for which aggregate supply and demand are equal - then the clearing price is the midpoint between the two prices. If both sides of the market have equal volume, then all orders are completely filled. If one side has more volume than the other, then the side with higher volume is rationed pro-rata based on how much its volume exceeds the other side. For example, if aggregate demand is 100 and aggregate supply is 90, then every order on the demand side of the market will be matched by 90%. Orders are sorted based on their price, and order ID. Order IDs are generated at post time and is the only part of the matching engine that is time-dependent. However, the oldest order IDs are matched first so there is no incentive to post an order ahead of someone else\u2019s. Summary \u00b6 Bundle the frontend transactions into blocks Finds miner extracted value (MEV), and then sends them to miners through a direct connection Redistribute the resulting value back to Manifold users who submitted trades by eliminating their transaction cost and to the greater SushiSwap community by further enriching their rewards pool Application structure \u00b6 Route paths: acceptable trading pairs/whitelisted tokens. See manifold.tokenlist.json Subroutes can be defined in separate files within the routes folder and referenced in Controllers should be used to handle HTTP/WS/RPC requests Services handle business logic Endpoints v1 \u00b6 POST \u00b6 /v1/quote A user can get a quote based on the current market conditions and potentially the other transactions that are queued. The only reason for this to be on the backend is if we find value in quoting based on the other transactions in the queue. Details of this quote calculation formula need to be researched. POST \u00b6 /v1/transact A user submits their transaction call after signing it. This is an asynchronous request that will insert the swap transaction in a queue. The call returns a TransactionId. The user can then listen for the result of their transaction via the websocket feed which will report all completed and failed transactions. Sequencing \u00b6 On any additions to the queue, the server runs a sequencing algorithm to optimize MEV, then decides if it is time to submit the transactions to a miner for the current block. !!! attention GC (Garbage Collection) is only on public submitted transactions, not SushiSwap sent transactions! Warning transactions that are not going to be successful due to timeout or slippage. On successful and failed (garbage collected) transactions, the backend will send WebSocket messages to the frontend to notify users. Transaction Price Service \u00b6 !!! tip Visit txprice.com and API The TxPrice Service is an important part of the overall system. Since Gwei pricing is the most important portion of the overall system efficacy it is decoupled from the application itself and run in a separate stack entirely. We inject the Gwei pricing service by loading at runtime via startGasWorker() . note we use the term GasWorker to draw a distinction between gwei and gas . Whereas gwei is understood as a specific SI unit, gas is more abstract. Gas Pricing Service \u00b6 Note : EIP1559 Gas Pricing Compatible For accurate pricing, we trim off the lowest price with the fastest time and highest price with the slowest times until 80% of the data is represented; these are outliers . See the API Service here: https://api.txprice.com !! warning This is for Legacy Transactions /** * * @summary filters transactions from blocks * @note transaction wait duration and gas price taken into consideration */ blocks . forEach (( block ) => { block . transactions . forEach (( tx ) => { const price = parseFloat ( ethers . utils . formatUnits ( tx . gasPrice , \"gwei\" )); const duration = tx . waitDuration ; /** * * @summary Purge anything that takes over 5 minutes * @param duration * @type {seconds} * @exports TransactionTimeDuration */ if ( duration > ( 60 * 60 )) { return ; } if ( duration < ( 1 * 60 )) { data . fast . push ( price ); } else if ( duration < ( 5 * 60 )) { data . medium . push ( price ); } else { data . slow . push ( price ); } Transaction Details \u00b6 /** * Add the transaction details * @const diff * @param waitDuration * @param dataLength * @param gasLimit * @param value */ const diff = timestamp - seenTime ; txs . push ({ w : diff , // waitDuration, not a delta but difference d : ethers . utils . hexDataLength ( tx . data ), // dataLength l : tx . gasLimit . toString (), // gasLimit p : ethers . utils . formatUnits ( tx . gasPrice , 'gwei' ), // gasPrice v : ethers . utils . formatUnits ( tx . value ), // value }); Canary Scanning \u00b6 Failsafe guard // Canary scanning (check every second) // If we go too long without a ne block or a new transaction, it indicates the // underlying connection to a backend has probably disconnected. setInterval (() => { const delta = getTime () - canaryTimer ; if ( delta > MAX_DISCONNECT ) { console . log ( `Canary: forcing restart...` ); process . exit (); } }, 1000 ). unref (); How to subscribe to gas price changes import { Container } from 'typedi' ; import EventConstants from '@constants/events' ; import EventEmitter from 'events' ; const { GAS_CHANGE } = EventConstants ; const events : EventEmitter = Container . get ( 'eventEmitter' ); events . on ( GAS_CHANGE , ( newGasPrice ) => {});","title":"OpenMEV"},{"location":"OpenMEV/openmev/#openmev","text":"Intro Benefits Issues/Support links OpenMEV User Example Engine Summary Application structure Endpoints v1 POST POST Sequencing Transaction Price Service Gas Pricing Service Transaction Details Canary Scanning","title":"OpenMEV"},{"location":"OpenMEV/openmev/#user-example","text":"Info order than sent, we need a mechanism for choosing a canonical id from a list that doesn't depend on the order. This chooses the \"minimum\" id by an arbitrary ordering: the smallest string if possible, otherwise the smallest number, otherwise null. Example order = { Give : ETH , Want : DAI , SlippageLimit : 10 % , Amount : 1000 ETH , OpenMEV : 0xabc ..., FeesIn : DAI , TargetDEX : SushiSwap , Deadline : time . Now () + 1 * time . Minute Signature : sign ( order . SignBytes ()) } When we broadcast this transaction with an arbitrage order, the transaction contains 2 orders: Example transactions = [ { Give : ETH , Want : DAI , SlippageLimit : 10 % , Amount : 1000 ETH , OpenMEV : 0xabc ..., FeesIn : DAI , TargetDEX : SushiSwap , Deadline : time . Now () + 1 * time . Minute Signature : sign ( order . SignBytes ()) }, { Give : DAI , Want : ETH , SlippageLimit : 1 % , Amount : 10 ETH , OpenMEV : 0xabc ..., FeesIn : DAI , TargetDEX : SushiSwap , Deadline : time . Now () + 1 * time . Minute Signature : sign ( order . SignBytes ()), IsFlashbots OpenMEV : true , TransferProfitTo : transactions [ 0 ]. signer } ] The arbitrage profit generated by second order is sent to the msg.sender of the first order. The first order will still lose 5%(assumption) in slippage. Arbitrage profits will rarely be more than the slippage loss. If someone front runs the transaction sent by the OpenMEV: They pay for the gas while post confirmation of transaction the fees for order1 goes to the relayer in the signed order. They lose 5% in slippage as our real user does.","title":"User Example"},{"location":"OpenMEV/openmev/#engine","text":"OpenMEV uses a batch auction-based matching engine to execute orders. All orders for the given market are collected. Orders beyond their time-in-force are canceled. Orders are placed into separate lists by market side, and aggregate supply and demand curves are calculated. The matching engine discovers the price at which the aggregate supply and demand curves cross, which yields the clearing price. If there is a horizontal cross - i.e., two prices for which aggregate supply and demand are equal - then the clearing price is the midpoint between the two prices. If both sides of the market have equal volume, then all orders are completely filled. If one side has more volume than the other, then the side with higher volume is rationed pro-rata based on how much its volume exceeds the other side. For example, if aggregate demand is 100 and aggregate supply is 90, then every order on the demand side of the market will be matched by 90%. Orders are sorted based on their price, and order ID. Order IDs are generated at post time and is the only part of the matching engine that is time-dependent. However, the oldest order IDs are matched first so there is no incentive to post an order ahead of someone else\u2019s.","title":"Engine"},{"location":"OpenMEV/openmev/#summary","text":"Bundle the frontend transactions into blocks Finds miner extracted value (MEV), and then sends them to miners through a direct connection Redistribute the resulting value back to Manifold users who submitted trades by eliminating their transaction cost and to the greater SushiSwap community by further enriching their rewards pool","title":"Summary"},{"location":"OpenMEV/openmev/#application-structure","text":"Route paths: acceptable trading pairs/whitelisted tokens. See manifold.tokenlist.json Subroutes can be defined in separate files within the routes folder and referenced in Controllers should be used to handle HTTP/WS/RPC requests Services handle business logic","title":"Application structure"},{"location":"OpenMEV/openmev/#endpoints-v1","text":"","title":"Endpoints v1"},{"location":"OpenMEV/openmev/#post","text":"/v1/quote A user can get a quote based on the current market conditions and potentially the other transactions that are queued. The only reason for this to be on the backend is if we find value in quoting based on the other transactions in the queue. Details of this quote calculation formula need to be researched.","title":"POST"},{"location":"OpenMEV/openmev/#post_1","text":"/v1/transact A user submits their transaction call after signing it. This is an asynchronous request that will insert the swap transaction in a queue. The call returns a TransactionId. The user can then listen for the result of their transaction via the websocket feed which will report all completed and failed transactions.","title":"POST"},{"location":"OpenMEV/openmev/#sequencing","text":"On any additions to the queue, the server runs a sequencing algorithm to optimize MEV, then decides if it is time to submit the transactions to a miner for the current block. !!! attention GC (Garbage Collection) is only on public submitted transactions, not SushiSwap sent transactions! Warning transactions that are not going to be successful due to timeout or slippage. On successful and failed (garbage collected) transactions, the backend will send WebSocket messages to the frontend to notify users.","title":"Sequencing"},{"location":"OpenMEV/openmev/#transaction-price-service","text":"!!! tip Visit txprice.com and API The TxPrice Service is an important part of the overall system. Since Gwei pricing is the most important portion of the overall system efficacy it is decoupled from the application itself and run in a separate stack entirely. We inject the Gwei pricing service by loading at runtime via startGasWorker() . note we use the term GasWorker to draw a distinction between gwei and gas . Whereas gwei is understood as a specific SI unit, gas is more abstract.","title":"Transaction Price Service"},{"location":"OpenMEV/openmev/#gas-pricing-service","text":"Note : EIP1559 Gas Pricing Compatible For accurate pricing, we trim off the lowest price with the fastest time and highest price with the slowest times until 80% of the data is represented; these are outliers . See the API Service here: https://api.txprice.com !! warning This is for Legacy Transactions /** * * @summary filters transactions from blocks * @note transaction wait duration and gas price taken into consideration */ blocks . forEach (( block ) => { block . transactions . forEach (( tx ) => { const price = parseFloat ( ethers . utils . formatUnits ( tx . gasPrice , \"gwei\" )); const duration = tx . waitDuration ; /** * * @summary Purge anything that takes over 5 minutes * @param duration * @type {seconds} * @exports TransactionTimeDuration */ if ( duration > ( 60 * 60 )) { return ; } if ( duration < ( 1 * 60 )) { data . fast . push ( price ); } else if ( duration < ( 5 * 60 )) { data . medium . push ( price ); } else { data . slow . push ( price ); }","title":"Gas Pricing Service"},{"location":"OpenMEV/openmev/#transaction-details","text":"/** * Add the transaction details * @const diff * @param waitDuration * @param dataLength * @param gasLimit * @param value */ const diff = timestamp - seenTime ; txs . push ({ w : diff , // waitDuration, not a delta but difference d : ethers . utils . hexDataLength ( tx . data ), // dataLength l : tx . gasLimit . toString (), // gasLimit p : ethers . utils . formatUnits ( tx . gasPrice , 'gwei' ), // gasPrice v : ethers . utils . formatUnits ( tx . value ), // value });","title":"Transaction Details"},{"location":"OpenMEV/openmev/#canary-scanning","text":"Failsafe guard // Canary scanning (check every second) // If we go too long without a ne block or a new transaction, it indicates the // underlying connection to a backend has probably disconnected. setInterval (() => { const delta = getTime () - canaryTimer ; if ( delta > MAX_DISCONNECT ) { console . log ( `Canary: forcing restart...` ); process . exit (); } }, 1000 ). unref (); How to subscribe to gas price changes import { Container } from 'typedi' ; import EventConstants from '@constants/events' ; import EventEmitter from 'events' ; const { GAS_CHANGE } = EventConstants ; const events : EventEmitter = Container . get ( 'eventEmitter' ); events . on ( GAS_CHANGE , ( newGasPrice ) => {});","title":"Canary Scanning"},{"location":"OpenMEV/searchers/","text":"Searchers \u00b6 Searcher Information SDK \u00b6 See @openmev/sdk transaction.proto \u00b6 transaction.proto message FrontierTransaction { string value = 1; // hex encoded big integer string input = 2; // hex bytes int64 nonce = 3; // string gasPrice = 4; // hex encoded big integer int64 gasLimit = 5; optional string v = 6; // hex encoded big integer optional string r = 7; // hex encoded big integer optional string s = 8; // hex encoded big integer optional string to = 9; // optional string chain_id = 10; // hex encoded big integer optional string sender = 11; } message AccessListEntry { string address = 1; repeated string storageKeys = 2; } message EIP2930Transaction { string chain_id = 1; // hex encoded big integer string value = 2; // hex encoded big integer string input = 3; // hex bytes int64 nonce = 4; // string gasPrice = 5; // hex encoded big integer int64 gasLimit = 6; repeated AccessListEntry accessList = 7; optional int32 v = 8; // byte value optional string r = 9; // hex encoded big integer optional string s = 10; // hex encoded big integer optional string to = 11; optional string sender = 12; } message EIP1559Transaction { string chain_id = 1; // hex encoded big integer string value = 2; // hex encoded big integer string input = 3; // hex bytes int64 nonce = 4; // string maxPriorityFeePerGas = 5; // hex encoded big integer string maxFeePerGas = 6; // hex encoded big integer int64 gasLimit = 7; repeated AccessListEntry accessList = 8; optional int32 v = 9; // byte value optional string r = 10; // hex encoded big integer optional string s = 11; // hex encoded big integer optional string to = 12; optional string sender = 13; } enum TransactionType { FRONTIER = 0; EIP2930 = 1; EIP1559 = 2; } message Transaction { TransactionType type = 1; optional string signed = 2; optional int64 deadline_at = 3; optional string transaction_hash = 16; optional int32 transaction_index = 17; optional string block_hash = 18; optional string block_number = 19; optional string gas_price = 20; optional TransactionReceipt receipt = 21; oneof payload { FrontierTransaction transaction_frontier = 22; EIP2930Transaction transaction_eip2930 = 23; EIP1559Transaction transaction_eip1559 = 24; } oneof action { org.openmev.protobuf.action.SwapExactTokensForTokens swap_exact_tokens_for_tokens = 33; org.openmev.protobuf.action.SwapTokensForExactTokens swap_tokens_for_exact_tokens = 34; org.openmev.protobuf.action.SwapExactETHForTokens swap_exact_eth_for_tokens = 35; org.openmev.protobuf.action.SwapTokensForExactETH swap_tokens_for_exact_ETH = 36; org.openmev.protobuf.action.SwapExactTokensForETH swap_exact_tokens_for_ETH = 37; org.openmev.protobuf.action.SwapETHForExactTokens swap_eth_for_exact_tokens = 38; org.openmev.protobuf.action.SwapExactTokensForTokensSupportingFeeOnTransferTokens swap_exact_tokens_for_tokens_supporting_fee_on_transfer_tokens = 39; org.openmev.protobuf.action.SwapExactETHForTokensSupportingFeeOnTransferTokens swap_exact_eth_for_tokens_supporting_fee_on_transfer_tokens = 40; org.openmev.protobuf.action.SwapExactTokensForETHSupportingFeeOnTransferTokens swap_exact_tokens_for_eth_supporting_fee_on_transfer_tokens = 41; } }","title":"Searchers"},{"location":"OpenMEV/searchers/#searchers","text":"Searcher Information","title":"Searchers"},{"location":"OpenMEV/searchers/#sdk","text":"See @openmev/sdk","title":"SDK"},{"location":"OpenMEV/searchers/#transactionproto","text":"transaction.proto message FrontierTransaction { string value = 1; // hex encoded big integer string input = 2; // hex bytes int64 nonce = 3; // string gasPrice = 4; // hex encoded big integer int64 gasLimit = 5; optional string v = 6; // hex encoded big integer optional string r = 7; // hex encoded big integer optional string s = 8; // hex encoded big integer optional string to = 9; // optional string chain_id = 10; // hex encoded big integer optional string sender = 11; } message AccessListEntry { string address = 1; repeated string storageKeys = 2; } message EIP2930Transaction { string chain_id = 1; // hex encoded big integer string value = 2; // hex encoded big integer string input = 3; // hex bytes int64 nonce = 4; // string gasPrice = 5; // hex encoded big integer int64 gasLimit = 6; repeated AccessListEntry accessList = 7; optional int32 v = 8; // byte value optional string r = 9; // hex encoded big integer optional string s = 10; // hex encoded big integer optional string to = 11; optional string sender = 12; } message EIP1559Transaction { string chain_id = 1; // hex encoded big integer string value = 2; // hex encoded big integer string input = 3; // hex bytes int64 nonce = 4; // string maxPriorityFeePerGas = 5; // hex encoded big integer string maxFeePerGas = 6; // hex encoded big integer int64 gasLimit = 7; repeated AccessListEntry accessList = 8; optional int32 v = 9; // byte value optional string r = 10; // hex encoded big integer optional string s = 11; // hex encoded big integer optional string to = 12; optional string sender = 13; } enum TransactionType { FRONTIER = 0; EIP2930 = 1; EIP1559 = 2; } message Transaction { TransactionType type = 1; optional string signed = 2; optional int64 deadline_at = 3; optional string transaction_hash = 16; optional int32 transaction_index = 17; optional string block_hash = 18; optional string block_number = 19; optional string gas_price = 20; optional TransactionReceipt receipt = 21; oneof payload { FrontierTransaction transaction_frontier = 22; EIP2930Transaction transaction_eip2930 = 23; EIP1559Transaction transaction_eip1559 = 24; } oneof action { org.openmev.protobuf.action.SwapExactTokensForTokens swap_exact_tokens_for_tokens = 33; org.openmev.protobuf.action.SwapTokensForExactTokens swap_tokens_for_exact_tokens = 34; org.openmev.protobuf.action.SwapExactETHForTokens swap_exact_eth_for_tokens = 35; org.openmev.protobuf.action.SwapTokensForExactETH swap_tokens_for_exact_ETH = 36; org.openmev.protobuf.action.SwapExactTokensForETH swap_exact_tokens_for_ETH = 37; org.openmev.protobuf.action.SwapETHForExactTokens swap_eth_for_exact_tokens = 38; org.openmev.protobuf.action.SwapExactTokensForTokensSupportingFeeOnTransferTokens swap_exact_tokens_for_tokens_supporting_fee_on_transfer_tokens = 39; org.openmev.protobuf.action.SwapExactETHForTokensSupportingFeeOnTransferTokens swap_exact_eth_for_tokens_supporting_fee_on_transfer_tokens = 40; org.openmev.protobuf.action.SwapExactTokensForETHSupportingFeeOnTransferTokens swap_exact_tokens_for_eth_supporting_fee_on_transfer_tokens = 41; } }","title":"transaction.proto"},{"location":"SushiSwap/","text":"SushiSwap User API \u00b6 Documentation for Order Book API Endpoints \u00b6 /swap/summary \u00b6 Returns data for the top ~1000 SushiSwap pairs, sorted by reserves. Results are edge cached for 15 minutes. Request \u00b6 GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev//swap/summary Response \u00b6 { '0x..._0x...': { // the asset ids of the ERC20 tokens (i.e. token addresses), joined by an underscore last_price: '1.234', // denominated in token0/token1 base_volume: '123.456', // last 24h volume denominated in token0 quote_volume: '1234.56', // last 24h volume denominated in token1 }, // ... } /swap/assets \u00b6 Returns the tokens in the top ~1000 pairs on SushiSwap, sorted by reserves. Results are edge cached for 24 hours. Request \u00b6 GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev/swap/assets Response \u00b6 { // ..., '0x...': { // the address of the ERC20 token name: '...', // not necessarily included for ERC20 tokens symbol: '...', // not necessarily included for ERC20 tokens id: '0x...', // the address of the ERC20 token maker_fee: '0', // always 0 taker_fee: '0.003', // always 0.003 i.e. .3% }, // ... } /swap/tickers \u00b6 Returns data for the top ~1000 SushiSwap pairs, sorted by reserves. Results are edge cached for 1 minute. Request \u00b6 GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev/swap/tickers Response \u00b6 { '0x..._0x...': { // the asset ids of ETH and ERC20 tokens, joined by an underscore base_name: '...', // token0 name base_symbol: '...', // token0 symbol base_id: '0x...', // token0 address quote_name: '...', // token1 name quote_symbol: '...', // token1 symbol quote_id: '0x...', // token1 address last_price: '1.234', // the mid price as token1/token0 base_volume: '123.456', // denominated in token0 quote_volume: '1234.56', // denominated in token1 }, // ... } /swap/orderbook/:pair \u00b6 Returns simulated orderbook data for the given SushiSwap pair. Since Uniswap has a continuous orderbook, fixed amounts in an interval are chosen for bids and asks, and prices are derived from the SushiSwap formula (accounting for both slippage and fees paid to LPs). Results are edge cached for 240 minutes. Request \u00b6 GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev/swap/orderbook/:pair URL Parameters \u00b6 pair : The asset ids of two ERC20 tokens, joined by an underscore, e.g. 0x..._0x... . The first token address is considered the base in the response. Response \u00b6 { timestamp: 1234567, // UNIX timestamp of the response bids: [ ['12', '1.2'], // denominated in base token, quote token/base token ['12', '1.1'], // denominated in base token, quote token/base token // ... ], asks: [ ['12', '1.3'], // denominated in base token, quote token/base token ['12', '1.4'], // denominated in base token, quote token/base token // ... ], } /swap/trades/:pair \u00b6 Returns all swaps in the last 24 hours for the given SushiSwap pair. Results are edge cached for 15 minutes. The pair address is the address of the two tokens in either order. The first address is considered the base in the response. URL Parameters \u00b6 pair : The asset ids of two ERC20 tokens, joined by an underscore, e.g. 0x..._0x... . The first token address is considered the base in the response. Request \u00b6 GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev/swap/trades/:pair Response \u00b6 [ { trade_id: '...', price: '1.234', // denominated in quote token/base token base_volume: '123.456', // denominated in base token quote_volume: '1234.56', // denominated in quote token trade_timestamp: 1234567, // UNIX timestamp type: 'buy', // \"buy\"/\"sell\"/\"borrow-both\"/\"???\" }, // ... ] Documentation for API Endpoints \u00b6 All URIs are relative to https://api.sushirelay.com Class Method HTTP request Description DefaultApi apiV1OrdersGet GET /api/v1/orders Get existing orders. DefaultApi apiV1OrdersPost POST /api/v1/orders Create a new order. DefaultApi apiV1OrdersUIDDelete DELETE /api/v1/orders/{UID} Cancels order by marking it invalid with a timestamp. DefaultApi apiV1OrdersUIDGet GET /api/v1/orders/{UID} Get existing order from UID. DefaultApi apiV1SolvableOrdersGet GET /api/v1/solvable_orders Get solvable orders. DefaultApi apiV1TokensSellTokenFeeGet GET /api/v1/tokens/{sellToken}/fee The fee that is charged for placing an order. The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service. DefaultApi apiV1TradesGet GET /api/v1/trades Get existing Trades. Documentation for Models \u00b6 FeeInformation Order OrderCancellation OrderCancellationError OrderCreation OrderMetaData OrderPostError OrderType Trade Documentation for Authorization \u00b6 All endpoints do not require authorization.","title":"SushiSwap User API"},{"location":"SushiSwap/#sushiswap-user-api","text":"Documentation for Order Book API","title":"SushiSwap User API"},{"location":"SushiSwap/#endpoints","text":"","title":"Endpoints"},{"location":"SushiSwap/#swapsummary","text":"Returns data for the top ~1000 SushiSwap pairs, sorted by reserves. Results are edge cached for 15 minutes.","title":"/swap/summary"},{"location":"SushiSwap/#request","text":"GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev//swap/summary","title":"Request"},{"location":"SushiSwap/#response","text":"{ '0x..._0x...': { // the asset ids of the ERC20 tokens (i.e. token addresses), joined by an underscore last_price: '1.234', // denominated in token0/token1 base_volume: '123.456', // last 24h volume denominated in token0 quote_volume: '1234.56', // last 24h volume denominated in token1 }, // ... }","title":"Response"},{"location":"SushiSwap/#swapassets","text":"Returns the tokens in the top ~1000 pairs on SushiSwap, sorted by reserves. Results are edge cached for 24 hours.","title":"/swap/assets"},{"location":"SushiSwap/#request_1","text":"GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev/swap/assets","title":"Request"},{"location":"SushiSwap/#response_1","text":"{ // ..., '0x...': { // the address of the ERC20 token name: '...', // not necessarily included for ERC20 tokens symbol: '...', // not necessarily included for ERC20 tokens id: '0x...', // the address of the ERC20 token maker_fee: '0', // always 0 taker_fee: '0.003', // always 0.003 i.e. .3% }, // ... }","title":"Response"},{"location":"SushiSwap/#swaptickers","text":"Returns data for the top ~1000 SushiSwap pairs, sorted by reserves. Results are edge cached for 1 minute.","title":"/swap/tickers"},{"location":"SushiSwap/#request_2","text":"GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev/swap/tickers","title":"Request"},{"location":"SushiSwap/#response_2","text":"{ '0x..._0x...': { // the asset ids of ETH and ERC20 tokens, joined by an underscore base_name: '...', // token0 name base_symbol: '...', // token0 symbol base_id: '0x...', // token0 address quote_name: '...', // token1 name quote_symbol: '...', // token1 symbol quote_id: '0x...', // token1 address last_price: '1.234', // the mid price as token1/token0 base_volume: '123.456', // denominated in token0 quote_volume: '1234.56', // denominated in token1 }, // ... }","title":"Response"},{"location":"SushiSwap/#swaporderbookpair","text":"Returns simulated orderbook data for the given SushiSwap pair. Since Uniswap has a continuous orderbook, fixed amounts in an interval are chosen for bids and asks, and prices are derived from the SushiSwap formula (accounting for both slippage and fees paid to LPs). Results are edge cached for 240 minutes.","title":"/swap/orderbook/:pair"},{"location":"SushiSwap/#request_3","text":"GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev/swap/orderbook/:pair","title":"Request"},{"location":"SushiSwap/#url-parameters","text":"pair : The asset ids of two ERC20 tokens, joined by an underscore, e.g. 0x..._0x... . The first token address is considered the base in the response.","title":"URL Parameters"},{"location":"SushiSwap/#response_3","text":"{ timestamp: 1234567, // UNIX timestamp of the response bids: [ ['12', '1.2'], // denominated in base token, quote token/base token ['12', '1.1'], // denominated in base token, quote token/base token // ... ], asks: [ ['12', '1.3'], // denominated in base token, quote token/base token ['12', '1.4'], // denominated in base token, quote token/base token // ... ], }","title":"Response"},{"location":"SushiSwap/#swaptradespair","text":"Returns all swaps in the last 24 hours for the given SushiSwap pair. Results are edge cached for 15 minutes. The pair address is the address of the two tokens in either order. The first address is considered the base in the response.","title":"/swap/trades/:pair"},{"location":"SushiSwap/#url-parameters_1","text":"pair : The asset ids of two ERC20 tokens, joined by an underscore, e.g. 0x..._0x... . The first token address is considered the base in the response.","title":"URL Parameters"},{"location":"SushiSwap/#request_4","text":"GET https://7ob2ikxqn7.execute-api.us-east-1.amazonaws.com/dev/swap/trades/:pair","title":"Request"},{"location":"SushiSwap/#response_4","text":"[ { trade_id: '...', price: '1.234', // denominated in quote token/base token base_volume: '123.456', // denominated in base token quote_volume: '1234.56', // denominated in quote token trade_timestamp: 1234567, // UNIX timestamp type: 'buy', // \"buy\"/\"sell\"/\"borrow-both\"/\"???\" }, // ... ]","title":"Response"},{"location":"SushiSwap/#documentation-for-api-endpoints","text":"All URIs are relative to https://api.sushirelay.com Class Method HTTP request Description DefaultApi apiV1OrdersGet GET /api/v1/orders Get existing orders. DefaultApi apiV1OrdersPost POST /api/v1/orders Create a new order. DefaultApi apiV1OrdersUIDDelete DELETE /api/v1/orders/{UID} Cancels order by marking it invalid with a timestamp. DefaultApi apiV1OrdersUIDGet GET /api/v1/orders/{UID} Get existing order from UID. DefaultApi apiV1SolvableOrdersGet GET /api/v1/solvable_orders Get solvable orders. DefaultApi apiV1TokensSellTokenFeeGet GET /api/v1/tokens/{sellToken}/fee The fee that is charged for placing an order. The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service. DefaultApi apiV1TradesGet GET /api/v1/trades Get existing Trades.","title":"Documentation for API Endpoints"},{"location":"SushiSwap/#documentation-for-models","text":"FeeInformation Order OrderCancellation OrderCancellationError OrderCreation OrderMetaData OrderPostError OrderType Trade","title":"Documentation for Models"},{"location":"SushiSwap/#documentation-for-authorization","text":"All endpoints do not require authorization.","title":"Documentation for Authorization"},{"location":"SushiSwap/FeeInformation/","text":"FeeInformation \u00b6 Properties \u00b6 Name Type Description Notes expirationDate String Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. [optional] [default to null] minimalFee String Amount of a token. uint256 encoded in decimal. [optional] [default to null] feeRatio BigDecimal The fee ratio charged on a sellAmount. Denoted in basis points [optional] [default to null]","title":"FeeInformation"},{"location":"SushiSwap/FeeInformation/#feeinformation","text":"","title":"FeeInformation"},{"location":"SushiSwap/FeeInformation/#properties","text":"Name Type Description Notes expirationDate String Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. [optional] [default to null] minimalFee String Amount of a token. uint256 encoded in decimal. [optional] [default to null] feeRatio BigDecimal The fee ratio charged on a sellAmount. Denoted in basis points [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Order/","text":"Order \u00b6 Properties \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null] creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 5256 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Order"},{"location":"SushiSwap/Order/#order","text":"","title":"Order"},{"location":"SushiSwap/Order/#properties","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null] creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 5256 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderCancellation/","text":"OrderCancellation \u00b6 Properties \u00b6 Name Type Description Notes signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"OrderCancellation"},{"location":"SushiSwap/OrderCancellation/#ordercancellation","text":"","title":"OrderCancellation"},{"location":"SushiSwap/OrderCancellation/#properties","text":"Name Type Description Notes signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderCreation/","text":"OrderCreation \u00b6 Properties \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"OrderCreation"},{"location":"SushiSwap/OrderCreation/#ordercreation","text":"","title":"OrderCreation"},{"location":"SushiSwap/OrderCreation/#properties","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderMetaData/","text":"OrderMetaData \u00b6 Properties \u00b6 Name Type Description Notes creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"OrderMetaData"},{"location":"SushiSwap/OrderMetaData/#ordermetadata","text":"","title":"OrderMetaData"},{"location":"SushiSwap/OrderMetaData/#properties","text":"Name Type Description Notes creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderPostError/","text":"OrderPostError \u00b6 Properties \u00b6 Name Type Description Notes errorType String [optional] [default to null] description String [optional] [default to null]","title":"OrderPostError"},{"location":"SushiSwap/OrderPostError/#orderposterror","text":"","title":"OrderPostError"},{"location":"SushiSwap/OrderPostError/#properties","text":"Name Type Description Notes errorType String [optional] [default to null] description String [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderType/","text":"OrderType \u00b6 Properties \u00b6 Name Type Description Notes","title":"OrderType"},{"location":"SushiSwap/OrderType/#ordertype","text":"","title":"OrderType"},{"location":"SushiSwap/OrderType/#properties","text":"Name Type Description Notes","title":"Properties"},{"location":"SushiSwap/Trade/","text":"Trade \u00b6 Properties \u00b6 Name Type Description Notes blockNumber Integer Block in which trade occurred. [optional] [default to null] logIndex Integer Index in which transaction was included in block. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] sellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null]","title":"Trade"},{"location":"SushiSwap/Trade/#trade","text":"","title":"Trade"},{"location":"SushiSwap/Trade/#properties","text":"Name Type Description Notes blockNumber Integer Block in which trade occurred. [optional] [default to null] logIndex Integer Index in which transaction was included in block. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] sellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Apis/","text":"SushiSwap API Overview \u00b6 All URIs are relative to https://api.sushirelay.com Method HTTP request Description apiV1OrdersGet GET /api/v1/orders Get existing orders. apiV1OrdersPost POST /api/v1/orders Create a new order. apiV1OrdersUIDDelete DELETE /api/v1/orders/{UID} Cancels order by marking it invalid with a timestamp. apiV1OrdersUIDGet GET /api/v1/orders/{UID} Get existing order from UID. apiV1SolvableOrdersGet GET /api/v1/solvable_orders Get solvable orders. apiV1TokensSellTokenFeeGet GET /api/v1/tokens/{sellToken}/fee apiV1TradesGet GET /api/v1/trades Get existing Trades. apiV1OrdersGet \u00b6 List apiV1OrdersGet(owner, sellToken, buyToken, includeFullyExecuted, includeInvalidated, includeInsufficientBalance, minValidTo) Get existing orders. By default all currently valid orders are returned. The set of returned orders can be reduced by setting owner, sell token, buy token filters. It can be increased by disabling different order validity exclusion criteria. Parameters \u00b6 Name Type Description Notes owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] includeFullyExecuted Boolean Should fully executed orders be returned? [optional] [default to false] includeInvalidated Boolean Should orders that have been invalidated in the smart contract be returned? [optional] [default to false] includeInsufficientBalance Boolean Should fill or kill orders that are not sufficiently funded be included? [optional] [default to false] minValidTo Integer Minimum valid_to timestamp for included orders. The default is the current time. [optional] [default to null] Return type \u00b6 List Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json apiV1OrdersPost \u00b6 String apiV1OrdersPost(body) Create a new order. Parameters \u00b6 Name Type Description Notes body OrderCreation The order to create. Return type \u00b6 String Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json apiV1OrdersUIDDelete \u00b6 apiV1OrdersUIDDelete(uID, body) Cancels order by marking it invalid with a timestamp. The successful deletion might not prevent solvers from settling the order Authentication must be provided by signing the following message: Parameters \u00b6 Name Type Description Notes uID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [default to null] body OrderCancellation Signed OrderCancellation Return type \u00b6 null (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined apiV1OrdersUIDGet \u00b6 List apiV1OrdersUIDGet(uID) Get existing order from UID. Parameters \u00b6 Name Type Description Notes uID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [default to null] Return type \u00b6 List Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json apiV1SolvableOrdersGet \u00b6 List apiV1SolvableOrdersGet() Get solvable orders. The set of orders that solvers should be solving right now. These orders are determined to be valid at the time of the request. Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 List Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json apiV1TokensSellTokenFeeGet \u00b6 FeeInformation apiV1TokensSellTokenFeeGet(sellToken) The fee that is charged for placing an order . The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service . Parameters \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [default to null] Return type \u00b6 FeeInformation Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json apiV1TradesGet \u00b6 List apiV1TradesGet(owner, orderUid) Get existing Trades. By default all trades are returned. Queries can be refined by specifiying owner or order_uid. Parameters \u00b6 Name Type Description Notes owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] Return type \u00b6 List Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json","title":"SushiSwap API Overview"},{"location":"SushiSwap/Apis/#sushiswap-api-overview","text":"All URIs are relative to https://api.sushirelay.com Method HTTP request Description apiV1OrdersGet GET /api/v1/orders Get existing orders. apiV1OrdersPost POST /api/v1/orders Create a new order. apiV1OrdersUIDDelete DELETE /api/v1/orders/{UID} Cancels order by marking it invalid with a timestamp. apiV1OrdersUIDGet GET /api/v1/orders/{UID} Get existing order from UID. apiV1SolvableOrdersGet GET /api/v1/solvable_orders Get solvable orders. apiV1TokensSellTokenFeeGet GET /api/v1/tokens/{sellToken}/fee apiV1TradesGet GET /api/v1/trades Get existing Trades.","title":"SushiSwap API Overview"},{"location":"SushiSwap/Apis/#apiv1ordersget","text":"List apiV1OrdersGet(owner, sellToken, buyToken, includeFullyExecuted, includeInvalidated, includeInsufficientBalance, minValidTo) Get existing orders. By default all currently valid orders are returned. The set of returned orders can be reduced by setting owner, sell token, buy token filters. It can be increased by disabling different order validity exclusion criteria.","title":"apiV1OrdersGet"},{"location":"SushiSwap/Apis/#parameters","text":"Name Type Description Notes owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] includeFullyExecuted Boolean Should fully executed orders be returned? [optional] [default to false] includeInvalidated Boolean Should orders that have been invalidated in the smart contract be returned? [optional] [default to false] includeInsufficientBalance Boolean Should fill or kill orders that are not sufficiently funded be included? [optional] [default to false] minValidTo Integer Minimum valid_to timestamp for included orders. The default is the current time. [optional] [default to null]","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type","text":"List","title":"Return type"},{"location":"SushiSwap/Apis/#authorization","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1orderspost","text":"String apiV1OrdersPost(body) Create a new order.","title":"apiV1OrdersPost"},{"location":"SushiSwap/Apis/#parameters_1","text":"Name Type Description Notes body OrderCreation The order to create.","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_1","text":"String","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_1","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1ordersuiddelete","text":"apiV1OrdersUIDDelete(uID, body) Cancels order by marking it invalid with a timestamp. The successful deletion might not prevent solvers from settling the order Authentication must be provided by signing the following message:","title":"apiV1OrdersUIDDelete"},{"location":"SushiSwap/Apis/#parameters_2","text":"Name Type Description Notes uID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [default to null] body OrderCancellation Signed OrderCancellation","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_2","text":"null (empty response body)","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_2","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_2","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1ordersuidget","text":"List apiV1OrdersUIDGet(uID) Get existing order from UID.","title":"apiV1OrdersUIDGet"},{"location":"SushiSwap/Apis/#parameters_3","text":"Name Type Description Notes uID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [default to null]","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_3","text":"List","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_3","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1solvableordersget","text":"List apiV1SolvableOrdersGet() Get solvable orders. The set of orders that solvers should be solving right now. These orders are determined to be valid at the time of the request.","title":"apiV1SolvableOrdersGet"},{"location":"SushiSwap/Apis/#parameters_4","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_4","text":"List","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_4","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1tokensselltokenfeeget","text":"FeeInformation apiV1TokensSellTokenFeeGet(sellToken) The fee that is charged for placing an order . The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service .","title":"apiV1TokensSellTokenFeeGet"},{"location":"SushiSwap/Apis/#parameters_5","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [default to null]","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_5","text":"FeeInformation","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_5","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1tradesget","text":"List apiV1TradesGet(owner, orderUid) Get existing Trades. By default all trades are returned. Queries can be refined by specifiying owner or order_uid.","title":"apiV1TradesGet"},{"location":"SushiSwap/Apis/#parameters_6","text":"Name Type Description Notes owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null]","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_6","text":"List","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_6","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Models/FeeInformation/","text":"FeeInformation \u00b6 Properties \u00b6 Name Type Description Notes expirationDate String Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. [optional] [default to null] minimalFee String Amount of a token. uint256 encoded in decimal. [optional] [default to null] feeRatio BigDecimal The fee ratio charged on a sellAmount. Denoted in basis points [optional] [default to null]","title":"FeeInformation"},{"location":"SushiSwap/Models/FeeInformation/#feeinformation","text":"","title":"FeeInformation"},{"location":"SushiSwap/Models/FeeInformation/#properties","text":"Name Type Description Notes expirationDate String Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. [optional] [default to null] minimalFee String Amount of a token. uint256 encoded in decimal. [optional] [default to null] feeRatio BigDecimal The fee ratio charged on a sellAmount. Denoted in basis points [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/Order/","text":"Order \u00b6 Properties \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null] creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Order"},{"location":"SushiSwap/Models/Order/#order","text":"","title":"Order"},{"location":"SushiSwap/Models/Order/#properties","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null] creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderCancellation/","text":"OrderCancellation \u00b6 Properties \u00b6 Name Type Description Notes signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"OrderCancellation"},{"location":"SushiSwap/Models/OrderCancellation/#ordercancellation","text":"","title":"OrderCancellation"},{"location":"SushiSwap/Models/OrderCancellation/#properties","text":"Name Type Description Notes signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderCreation/","text":"OrderCreation \u00b6 Properties \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"OrderCreation"},{"location":"SushiSwap/Models/OrderCreation/#ordercreation","text":"","title":"OrderCreation"},{"location":"SushiSwap/Models/OrderCreation/#properties","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderMetaData/","text":"OrderMetaData \u00b6 Properties \u00b6 Name Type Description Notes creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"OrderMetaData"},{"location":"SushiSwap/Models/OrderMetaData/#ordermetadata","text":"","title":"OrderMetaData"},{"location":"SushiSwap/Models/OrderMetaData/#properties","text":"Name Type Description Notes creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderPostError/","text":"OrderPostError \u00b6 Properties \u00b6 Name Type Description Notes errorType String [optional] [default to null] description String [optional] [default to null]","title":"OrderPostError"},{"location":"SushiSwap/Models/OrderPostError/#orderposterror","text":"","title":"OrderPostError"},{"location":"SushiSwap/Models/OrderPostError/#properties","text":"Name Type Description Notes errorType String [optional] [default to null] description String [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderType/","text":"OrderType \u00b6 Properties \u00b6 Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"OrderType"},{"location":"SushiSwap/Models/OrderType/#ordertype","text":"","title":"OrderType"},{"location":"SushiSwap/Models/OrderType/#properties","text":"Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"SushiSwap/Models/Trade/","text":"Trade \u00b6 Properties \u00b6 Name Type Description Notes blockNumber Integer Block in which trade occurred. [optional] [default to null] logIndex Integer Index in which transaction was included in block. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] sellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null]","title":"Trade"},{"location":"SushiSwap/Models/Trade/#trade","text":"","title":"Trade"},{"location":"SushiSwap/Models/Trade/#properties","text":"Name Type Description Notes blockNumber Integer Block in which trade occurred. [optional] [default to null] logIndex Integer Index in which transaction was included in block. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] sellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/gettingStarted/makeRequests/","text":"Make Requests \u00b6 JSON-RPC Methods \u00b6 Below is a quick command line example using CURL: $ curl -X POST -H \"Content-Type: application/json\" --data '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"eth_blockNumber\", \"params\": []}' \"https://mainnet.backbonecabal.xyz/YOUR-API-KEY\" The result should look something like this: $ {\"jsonrpc\": \"2.0\",\"result\": \"0x3ccb11\", \"id\":1} NOTE: \"0x3ccb11\" will be replaced with the block number of the most recent block on that network Read more about JSON RPC Important to note that JSON-RPC is transport agnostic, meaning same concepts can be used over HTTP, WebSockets or other message passing environments. All JSON_RPC methods listed in 'Ethereum API' are also supported over websockets. Rest-like Backbone API \u00b6 https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber?token=YOUR-API-KEY Subscriptions and Filters \u00b6 TODO","title":"Make Requests"},{"location":"SushiSwap/gettingStarted/makeRequests/#make-requests","text":"","title":"Make Requests"},{"location":"SushiSwap/gettingStarted/makeRequests/#json-rpc-methods","text":"Below is a quick command line example using CURL: $ curl -X POST -H \"Content-Type: application/json\" --data '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"eth_blockNumber\", \"params\": []}' \"https://mainnet.backbonecabal.xyz/YOUR-API-KEY\" The result should look something like this: $ {\"jsonrpc\": \"2.0\",\"result\": \"0x3ccb11\", \"id\":1} NOTE: \"0x3ccb11\" will be replaced with the block number of the most recent block on that network Read more about JSON RPC Important to note that JSON-RPC is transport agnostic, meaning same concepts can be used over HTTP, WebSockets or other message passing environments. All JSON_RPC methods listed in 'Ethereum API' are also supported over websockets.","title":"JSON-RPC Methods"},{"location":"SushiSwap/gettingStarted/makeRequests/#rest-like-backbone-api","text":"https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber?token=YOUR-API-KEY","title":"Rest-like Backbone API"},{"location":"SushiSwap/gettingStarted/makeRequests/#subscriptions-and-filters","text":"TODO","title":"Subscriptions and Filters"},{"location":"SushiSwap/gettingStarted/usefulLinks/","text":"Useful Links \u00b6 Smart Contract API Design","title":"Useful Links"},{"location":"SushiSwap/gettingStarted/usefulLinks/#useful-links","text":"Smart Contract API Design","title":"Useful Links"},{"location":"Technical/spec/","text":"Platform Specification and Diagrams \u00b6 Note document $ . subscribe ( function () { // (1) var tables = document . querySelectorAll ( /* (2) */ \"article table\" ) tables . forEach ( function ( table ) { new Tablesort ( table ) }) }) ... ...","title":"Platform Specification and Diagrams"},{"location":"Technical/spec/#platform-specification-and-diagrams","text":"Note document $ . subscribe ( function () { // (1) var tables = document . querySelectorAll ( /* (2) */ \"article table\" ) tables . forEach ( function ( table ) { new Tablesort ( table ) }) }) ... ...","title":"Platform Specification and Diagrams"},{"location":"Technical/workflow/","text":"Generalized Workflows and Strategies \u00b6 Sandwiching transactions is one of our preferred methods to extract MEV value. Sandwiching transactions provides some of the simplest logic necessary to extract value from a flow of transactions, and therefore, our initial implementation will rely on this strategy. We intend to expand to other strategies in the future . The general flow for our model will be accepting new transactions through a front end on supported pairs. Users query their specific transaction and we estimate a quote on how much it will cost them to perform their transaction, along with a wait time. If the user chooses to commit their transaction, they agree to a transaction to be performed no worse than the quote by the timeout given; We then add the new transaction request into our backend to be bundled. Ideal Workflow \u00b6 If we can find a bundle that is worth being minted before the transactions timeout period, we will submit the bundle to the miners, and then wait for the next block minted to acknowledge our bundle. If our bundle is in the next block, we send an acknowledgement back to the front end. Ideal Success \u00b6 If we cannot find a bundle that includes transaction T before their timeout, we will report back to the front end, acknowledging that their transaction has timed out. Ideal Failure \u00b6 'BLT' Sandwiching \u00b6 Before flashbots, sandwich attacking involved finding a sequence of transaction to be able to back run, meaning to put a desired transaction behind a large transaction experiencing high slippage, to experience positive slippage caused by the large transaction before hand. In our case, we're working with a private transaction flow where we can sequence them however we choose, meaning we can produce and capture MEV opportunities that would typically be exploited by a third party. the key to sandwiching with a reliable benefit to our users is to sequence transaction flow such that the cost that each transaction would experience is less than if they had all placed their orders individually. Ideally we should look to sequence the opposite transaction behind significant transactions in one direction to capture this MEV potential. Miner bidding \u00b6 A factor to be considered by our system for producing possible bundles is to ask if the bundle is profitable enough to cover the bid require to be minted, while still having left over value to redistribute to the front end users, and the community as a whole. What a miner will accept can be approximated by viewing the previous minted blocks transactions, and looking at the bottom N transactions within that block. Those bottom N transactions are the transactions with the cheapest gas prices that were still minted into the block; in order to have our bundle minted into a block, we must be able to beat or match the last N transactions within a block's gas prices. If we assume that we will always sandwich 3 transactions together into 1 bundle, we can approximate that we must beat whatever the last 3 transactions in the last minted blocks' gas prices were. Given minted transactions $ \\(T={t_1,\u2026,t_k}\\) in previous block, we know we must provide a higher payout than \\(T_{min}=[t_{k-n},t_k]\\) , where \\(N\\) is the number of transactions within bundle \\(B\\) , and payouts are determined by the gas price \\(t^g_n\\) and gas limit \\(t^l_n\\) , we know our bid \\(B_{bid}\\) must be: \\(B_{b i d}>=\\sum_{n=0}^{B_{n}-1} t_{k-n}^{g} * t_{k-n}^{l}\\) Quote pricing \u00b6 Giving a reasonable quote to the front end user will depend on that inherent value of the transaction being posted in relation to what transactions we currently have pending to be minted, namely its volume of tokens being swapped. Fee estimation algorithm \u00b6 Estimate gas based on historical data and set it as Gas_Limit Take a margin of L>1 and set Limit_used = Gas_Limit * L For each executed transaction(With Limit_Used), read the actual gas used: Gas_used If Gas_used > Gas_Limit, set Gas_Limit = Gas_used, Limit_used = Gas_used * L If a transaction fails for insufficient gas: Run estimateGas () on the failed transaction and obtain Failed_Limit < br > Create and sign a new transaction < br > Retransmit transaction with new estimation < br > Update Gas_Limit = Failed_Limit < br > Raise error for investigation < br >","title":"Generalized Workflows and Strategies"},{"location":"Technical/workflow/#generalized-workflows-and-strategies","text":"Sandwiching transactions is one of our preferred methods to extract MEV value. Sandwiching transactions provides some of the simplest logic necessary to extract value from a flow of transactions, and therefore, our initial implementation will rely on this strategy. We intend to expand to other strategies in the future . The general flow for our model will be accepting new transactions through a front end on supported pairs. Users query their specific transaction and we estimate a quote on how much it will cost them to perform their transaction, along with a wait time. If the user chooses to commit their transaction, they agree to a transaction to be performed no worse than the quote by the timeout given; We then add the new transaction request into our backend to be bundled.","title":"Generalized Workflows and Strategies"},{"location":"Technical/workflow/#ideal-workflow","text":"If we can find a bundle that is worth being minted before the transactions timeout period, we will submit the bundle to the miners, and then wait for the next block minted to acknowledge our bundle. If our bundle is in the next block, we send an acknowledgement back to the front end.","title":"Ideal Workflow"},{"location":"Technical/workflow/#ideal-success","text":"If we cannot find a bundle that includes transaction T before their timeout, we will report back to the front end, acknowledging that their transaction has timed out.","title":"Ideal Success"},{"location":"Technical/workflow/#ideal-failure","text":"","title":"Ideal Failure"},{"location":"Technical/workflow/#blt-sandwiching","text":"Before flashbots, sandwich attacking involved finding a sequence of transaction to be able to back run, meaning to put a desired transaction behind a large transaction experiencing high slippage, to experience positive slippage caused by the large transaction before hand. In our case, we're working with a private transaction flow where we can sequence them however we choose, meaning we can produce and capture MEV opportunities that would typically be exploited by a third party. the key to sandwiching with a reliable benefit to our users is to sequence transaction flow such that the cost that each transaction would experience is less than if they had all placed their orders individually. Ideally we should look to sequence the opposite transaction behind significant transactions in one direction to capture this MEV potential.","title":"'BLT' Sandwiching"},{"location":"Technical/workflow/#miner-bidding","text":"A factor to be considered by our system for producing possible bundles is to ask if the bundle is profitable enough to cover the bid require to be minted, while still having left over value to redistribute to the front end users, and the community as a whole. What a miner will accept can be approximated by viewing the previous minted blocks transactions, and looking at the bottom N transactions within that block. Those bottom N transactions are the transactions with the cheapest gas prices that were still minted into the block; in order to have our bundle minted into a block, we must be able to beat or match the last N transactions within a block's gas prices. If we assume that we will always sandwich 3 transactions together into 1 bundle, we can approximate that we must beat whatever the last 3 transactions in the last minted blocks' gas prices were. Given minted transactions $ \\(T={t_1,\u2026,t_k}\\) in previous block, we know we must provide a higher payout than \\(T_{min}=[t_{k-n},t_k]\\) , where \\(N\\) is the number of transactions within bundle \\(B\\) , and payouts are determined by the gas price \\(t^g_n\\) and gas limit \\(t^l_n\\) , we know our bid \\(B_{bid}\\) must be: \\(B_{b i d}>=\\sum_{n=0}^{B_{n}-1} t_{k-n}^{g} * t_{k-n}^{l}\\)","title":"Miner bidding"},{"location":"Technical/workflow/#quote-pricing","text":"Giving a reasonable quote to the front end user will depend on that inherent value of the transaction being posted in relation to what transactions we currently have pending to be minted, namely its volume of tokens being swapped.","title":"Quote pricing"},{"location":"Technical/workflow/#fee-estimation-algorithm","text":"Estimate gas based on historical data and set it as Gas_Limit Take a margin of L>1 and set Limit_used = Gas_Limit * L For each executed transaction(With Limit_Used), read the actual gas used: Gas_used If Gas_used > Gas_Limit, set Gas_Limit = Gas_used, Limit_used = Gas_used * L If a transaction fails for insufficient gas: Run estimateGas () on the failed transaction and obtain Failed_Limit < br > Create and sign a new transaction < br > Retransmit transaction with new estimation < br > Update Gas_Limit = Failed_Limit < br > Raise error for investigation < br >","title":"Fee estimation algorithm"},{"location":"Technical/workflow/EVENT_TRACING/","text":"Event Tracing \u00b6 Waffle \u00b6 https://ethereum-waffle.readthedocs.io/en/latest/matchers.html#emitting-events","title":"Event Tracing"},{"location":"Technical/workflow/EVENT_TRACING/#event-tracing","text":"","title":"Event Tracing"},{"location":"Technical/workflow/EVENT_TRACING/#waffle","text":"https://ethereum-waffle.readthedocs.io/en/latest/matchers.html#emitting-events","title":"Waffle"}]}