{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Technical Overview \u00b6 User Example \u00b6 Proposed end-user transaction example for interacting with the YCabal NOTE: Since the JSON-RPC spec allows responses to be returned in a different order than sent, we need a mechanism for choosing a canonical id from a list that doesn't depend on the order. This chooses the \"minimum\" id by an arbitrary ordering: the smallest string if possible, otherwise the smallest number, otherwise null. order = { Give: ETH, Want: DAI, SlippageLimit: 10%, Amount: 1000ETH, Cabal: 0xabc..., FeesIn: DAI, TargetDEX: SushiSwap, Deadline: time.Now() + 1*time.Minute Signature: sign(order.SignBytes()) } Now if the Cabal broadcasts this transaction with an arbitrage order, the transaction contains 2 orders: Note: the transaction below is a mock-up for the proposed data fields transactions = [ { Give: ETH, Want: DAI, SlippageLimit: 10%, Amount: 1000ETH, Cabal: 0xabc..., FeesIn: DAI, TargetDEX: SushiSwap, Deadline: time.Now() + 1*time.Minute Signature: sign(order.SignBytes()) }, { Give: DAI, Want: ETH, SlippageLimit: 1%, Amount: 10ETH, Cabal: 0xabc..., FeesIn: DAI, TargetDEX: SushiSwap, Deadline: time.Now() + 1*time.Minute Signature: sign(order.SignBytes()), IsBackbone Cabal: true, TransferProfitTo: transactions[0].signer } ] The arbitrage profit generated by second order is sent to the msg.sender of the first order. The first order will still lose 5%(assumption) in slippage. Arbitrage profits will rarely be more than the slippage loss. If someone front runs the transaction sent by the Cabal: They pay for the gas while post confirmation of transaction the fees for order1 goes to the relayer in the signed order. They lose 5% in slippage as our real user does. Engine \u00b6 YCabal uses a batch auction-based matching engine to execute orders. Batch auctions were chosen to reduce the impact of frontrunning on the exchange. All orders for the given market are collected. Orders beyond their time-in-force are canceled. Orders are placed into separate lists by market side, and aggregate supply and demand curves are calculated. The matching engine discovers the price at which the aggregate supply and demand curves cross, which yields the clearing price. If there is a horizontal cross - i.e., two prices for which aggregate supply and demand are equal - then the clearing price is the midpoint between the two prices. If both sides of the market have equal volume, then all orders are completely filled. If one side has more volume than the other, then the side with higher volume is rationed pro-rata based on how much its volume exceeds the other side. For example, if aggregate demand is 100 and aggregate supply is 90, then every order on the demand side of the market will be matched by 90%. Orders are sorted based on their price, and order ID. Order IDs are generated at post time and is the only part of the matching engine that is time-dependent. However, the oldest order IDs are matched first so there is no incentive to post an order ahead of someone else\u2019s.","title":"Home"},{"location":"#technical-overview","text":"","title":"Technical Overview"},{"location":"#user-example","text":"Proposed end-user transaction example for interacting with the YCabal NOTE: Since the JSON-RPC spec allows responses to be returned in a different order than sent, we need a mechanism for choosing a canonical id from a list that doesn't depend on the order. This chooses the \"minimum\" id by an arbitrary ordering: the smallest string if possible, otherwise the smallest number, otherwise null. order = { Give: ETH, Want: DAI, SlippageLimit: 10%, Amount: 1000ETH, Cabal: 0xabc..., FeesIn: DAI, TargetDEX: SushiSwap, Deadline: time.Now() + 1*time.Minute Signature: sign(order.SignBytes()) } Now if the Cabal broadcasts this transaction with an arbitrage order, the transaction contains 2 orders: Note: the transaction below is a mock-up for the proposed data fields transactions = [ { Give: ETH, Want: DAI, SlippageLimit: 10%, Amount: 1000ETH, Cabal: 0xabc..., FeesIn: DAI, TargetDEX: SushiSwap, Deadline: time.Now() + 1*time.Minute Signature: sign(order.SignBytes()) }, { Give: DAI, Want: ETH, SlippageLimit: 1%, Amount: 10ETH, Cabal: 0xabc..., FeesIn: DAI, TargetDEX: SushiSwap, Deadline: time.Now() + 1*time.Minute Signature: sign(order.SignBytes()), IsBackbone Cabal: true, TransferProfitTo: transactions[0].signer } ] The arbitrage profit generated by second order is sent to the msg.sender of the first order. The first order will still lose 5%(assumption) in slippage. Arbitrage profits will rarely be more than the slippage loss. If someone front runs the transaction sent by the Cabal: They pay for the gas while post confirmation of transaction the fees for order1 goes to the relayer in the signed order. They lose 5% in slippage as our real user does.","title":"User Example"},{"location":"#engine","text":"YCabal uses a batch auction-based matching engine to execute orders. Batch auctions were chosen to reduce the impact of frontrunning on the exchange. All orders for the given market are collected. Orders beyond their time-in-force are canceled. Orders are placed into separate lists by market side, and aggregate supply and demand curves are calculated. The matching engine discovers the price at which the aggregate supply and demand curves cross, which yields the clearing price. If there is a horizontal cross - i.e., two prices for which aggregate supply and demand are equal - then the clearing price is the midpoint between the two prices. If both sides of the market have equal volume, then all orders are completely filled. If one side has more volume than the other, then the side with higher volume is rationed pro-rata based on how much its volume exceeds the other side. For example, if aggregate demand is 100 and aggregate supply is 90, then every order on the demand side of the market will be matched by 90%. Orders are sorted based on their price, and order ID. Order IDs are generated at post time and is the only part of the matching engine that is time-dependent. However, the oldest order IDs are matched first so there is no incentive to post an order ahead of someone else\u2019s.","title":"Engine"},{"location":"changelog/","text":"Changelog \u00b6 - \u00b6 -","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#-","text":"-","title":"-"},{"location":"limit_order_books/","text":"Limit Order Books \u00b6 Exchanges \u00b6 Most electronic Exchanges use LOBs to match orders placed by buyers and sellers. LOBs have entered the mainstream in recent years with the popularisation of Cryptocurrency Exchanges. Understanding how a LOB works is essential for understanding the market-data published by these Exchanges. An Exchange is a place where traders come together to exchange goods or services. Sellers offer their goods or services to buyers that bid for them. The Exchange accepts bids and offers in the form of orders and attempts to match them: bids are submitted as buy orders; offers are submitted as sell orders. Exchanges are also known as \"venues\", although Exchanges are not the only kind of trading venue. Level 2 Order Books \u00b6 The \"liquidity\" available in the LOB can be viewed in multiple ways. In this article, we present the liquidity in the LOB as a stack of \"price levels\", where each price level comprises one or more orders with the same price and side. This representation is known as a level 2 order book aggregated by price. Consider the following LOB with two price levels: Level Bid Qty Bid Price Spread Offer Price Offer Qty 1 1 9649 2 9651 1 2 5 9648 5 9653 3 For each given price level: the quantity is the sum of all order quantities at that level; the \"spread\" is the difference between the bid and offer price. The first level, or Top Of Book (TOB), shows the best bid and offer available in the order book: the bids are arranged in descending order with the best bid at the top; the offers are arranged in ascending order with the best offer at the top. Limit Orders \u00b6 The LOB gets its name from a standard order type known as a \"limit\" order; a LOB is essentially a book of limit orders. The price on a limit order is known as the limit price. The limit price specifies the worst price at which the trader is willing to trade (highest for bids and lowest for offers). This article deals exclusively with limit orders, so the limit price is subsequently referred to simply as the price. Resting Orders \u00b6 A trade happens when a buy or sell order is matched with one or more pre-existing orders in the LOB. How an order behaves when it is not immediately filled varies between order types. Limit orders may also specify how long they are \"good for\". If a limit order is good for a period of time, and it is not immediately filled, then it is placed in the LOB according to its side (buy or sell) and price. An unmatched limit order that is live or \"working\" in the LOB is known as a \"resting\" order. Order types that cannot rest in the order book are either immediately filled or cancelled. The short-hand notation below will be used in proceeding examples to describe a limit order: BUY 2 @9650 : a buy order where 2 is the order quantity and 9650 is the price. If this limit order is applied to our earlier example, then it will rest at the TOB on the bid side, because its price is better than the current TOB: Level Bid Qty Bid Price Spread Offer Price Offer Qty 1 2 9650 1 9651 1 2 1 9649 4 9653 3 3 5 9648 Similarly, a limit order to \"SELL 3 @9653 \" will \"join\" the second level on the offer side: Level Bid Qty Bid Price Spread Offer Price Offer Qty 1 2 9650 1 9651 1 2 1 9649 4 9653 6 3 5 9648 Note that the number of orders at each price level cannot be derived from the aggregate quantity. The order count is often shown as a separate \"count\" field. Order Matching \u00b6 In a classic LOB, Matching happens by price/time priority. This means that orders are matched first by price, and then by time (order age). If multiple orders exist at the same price level, for example, then the oldest order will be matched first. Consider the effect of a limit order to \"BUY 2 @9652 \" that crosses the spread: Level Bid Qty Bid Price Spread Offer Price Offer Qty 1 1 9652 2 9653 6 2 2 9650 3 1 9649 4 5 9648 In this example, the limit order to \"BUY 2 @9652 \" crossed with the first level on the offer side (\"OFFER 1 @9651 \"). The price on the order was higher than the level it crossed, so the resulting trade will have an improved price of 9651. The limit order was not completely filled, because there was insufficient quantity on the offer side. And assuming this order is good for some time, any quantity remaining after the matching phase is complete will rest on the bid side, hence the new price level on the bid side at TOB. Orders that cross the spread and \"take\" liquidity from the order book are known as an \"aggressive\" orders. By contrast, orders that do not cross the spread are known as \"passive\" orders. Aggressive orders may \"sweep\" through multiple price levels, as demonstrated in the following example, where an aggressive order to \"SELL 4 @9649 \" sweeps through the top three levels of the bid side: Level Bid Qty Bid Price Spread Offer Price Offer Qty 4 5 9648 5 9653 6 This aggressive order will result in the following trades: 1 @9652 2 @9650 1 @9649 Makers and Takers \u00b6 Traders that submit aggressive orders are known as \"takers\". Traders that submit passive orders are known as \"makers\". Market-makers play an important role in providing liquidity to the market, because, under normal market conditions, they are willing to quote two-way prices on a continual basis, thus ensuring that there is always a maker available to take the opposing side of a taker's trade. Each trade transaction comprises two matched orders. These orders can be classified both in terms of a buyer and a seller or a maker and a taker. To avoid confusion, trades are often referred to from the taker's perspective as \"paid\" or \"given\": Paid: taker bought or \"lifted the offer\". Given: taker sold or \"hit the bid\". This terminology is particular relevant for public trade feeds, where an Exchange may publicise anonymised trade information from the taker's perspective.","title":"Limit Order Book"},{"location":"limit_order_books/#limit-order-books","text":"","title":"Limit Order Books"},{"location":"limit_order_books/#exchanges","text":"Most electronic Exchanges use LOBs to match orders placed by buyers and sellers. LOBs have entered the mainstream in recent years with the popularisation of Cryptocurrency Exchanges. Understanding how a LOB works is essential for understanding the market-data published by these Exchanges. An Exchange is a place where traders come together to exchange goods or services. Sellers offer their goods or services to buyers that bid for them. The Exchange accepts bids and offers in the form of orders and attempts to match them: bids are submitted as buy orders; offers are submitted as sell orders. Exchanges are also known as \"venues\", although Exchanges are not the only kind of trading venue.","title":"Exchanges"},{"location":"limit_order_books/#level-2-order-books","text":"The \"liquidity\" available in the LOB can be viewed in multiple ways. In this article, we present the liquidity in the LOB as a stack of \"price levels\", where each price level comprises one or more orders with the same price and side. This representation is known as a level 2 order book aggregated by price. Consider the following LOB with two price levels: Level Bid Qty Bid Price Spread Offer Price Offer Qty 1 1 9649 2 9651 1 2 5 9648 5 9653 3 For each given price level: the quantity is the sum of all order quantities at that level; the \"spread\" is the difference between the bid and offer price. The first level, or Top Of Book (TOB), shows the best bid and offer available in the order book: the bids are arranged in descending order with the best bid at the top; the offers are arranged in ascending order with the best offer at the top.","title":"Level 2 Order Books"},{"location":"limit_order_books/#limit-orders","text":"The LOB gets its name from a standard order type known as a \"limit\" order; a LOB is essentially a book of limit orders. The price on a limit order is known as the limit price. The limit price specifies the worst price at which the trader is willing to trade (highest for bids and lowest for offers). This article deals exclusively with limit orders, so the limit price is subsequently referred to simply as the price.","title":"Limit Orders"},{"location":"limit_order_books/#resting-orders","text":"A trade happens when a buy or sell order is matched with one or more pre-existing orders in the LOB. How an order behaves when it is not immediately filled varies between order types. Limit orders may also specify how long they are \"good for\". If a limit order is good for a period of time, and it is not immediately filled, then it is placed in the LOB according to its side (buy or sell) and price. An unmatched limit order that is live or \"working\" in the LOB is known as a \"resting\" order. Order types that cannot rest in the order book are either immediately filled or cancelled. The short-hand notation below will be used in proceeding examples to describe a limit order: BUY 2 @9650 : a buy order where 2 is the order quantity and 9650 is the price. If this limit order is applied to our earlier example, then it will rest at the TOB on the bid side, because its price is better than the current TOB: Level Bid Qty Bid Price Spread Offer Price Offer Qty 1 2 9650 1 9651 1 2 1 9649 4 9653 3 3 5 9648 Similarly, a limit order to \"SELL 3 @9653 \" will \"join\" the second level on the offer side: Level Bid Qty Bid Price Spread Offer Price Offer Qty 1 2 9650 1 9651 1 2 1 9649 4 9653 6 3 5 9648 Note that the number of orders at each price level cannot be derived from the aggregate quantity. The order count is often shown as a separate \"count\" field.","title":"Resting Orders"},{"location":"limit_order_books/#order-matching","text":"In a classic LOB, Matching happens by price/time priority. This means that orders are matched first by price, and then by time (order age). If multiple orders exist at the same price level, for example, then the oldest order will be matched first. Consider the effect of a limit order to \"BUY 2 @9652 \" that crosses the spread: Level Bid Qty Bid Price Spread Offer Price Offer Qty 1 1 9652 2 9653 6 2 2 9650 3 1 9649 4 5 9648 In this example, the limit order to \"BUY 2 @9652 \" crossed with the first level on the offer side (\"OFFER 1 @9651 \"). The price on the order was higher than the level it crossed, so the resulting trade will have an improved price of 9651. The limit order was not completely filled, because there was insufficient quantity on the offer side. And assuming this order is good for some time, any quantity remaining after the matching phase is complete will rest on the bid side, hence the new price level on the bid side at TOB. Orders that cross the spread and \"take\" liquidity from the order book are known as an \"aggressive\" orders. By contrast, orders that do not cross the spread are known as \"passive\" orders. Aggressive orders may \"sweep\" through multiple price levels, as demonstrated in the following example, where an aggressive order to \"SELL 4 @9649 \" sweeps through the top three levels of the bid side: Level Bid Qty Bid Price Spread Offer Price Offer Qty 4 5 9648 5 9653 6 This aggressive order will result in the following trades: 1 @9652 2 @9650 1 @9649","title":"Order Matching"},{"location":"limit_order_books/#makers-and-takers","text":"Traders that submit aggressive orders are known as \"takers\". Traders that submit passive orders are known as \"makers\". Market-makers play an important role in providing liquidity to the market, because, under normal market conditions, they are willing to quote two-way prices on a continual basis, thus ensuring that there is always a maker available to take the opposing side of a taker's trade. Each trade transaction comprises two matched orders. These orders can be classified both in terms of a buyer and a seller or a maker and a taker. To avoid confusion, trades are often referred to from the taker's perspective as \"paid\" or \"given\": Paid: taker bought or \"lifted the offer\". Given: taker sold or \"hit the bid\". This terminology is particular relevant for public trade feeds, where an Exchange may publicise anonymised trade information from the taker's perspective.","title":"Makers and Takers"},{"location":"obligations/","text":"Obligations \u00b6 501. Limitation of Liability \u00b6 (A). THE LIABILITY OF Commodity Stream, LLC CLEARING RELATING TO OR ARISING OUT OF CONTRACTS SHALL BE LIMITED TO LOSSES RESULTING FROM THE NOVATION OF THE CONTRACTS IN ACCORDANCE WITH THE RULES. SUBJECT TO THE FOREGOING, NEITHER THE CLEARINGHOUSE, NOR ANY AFFILIATE OF THE CLEARINGHOUSE, NOR ANY OF THEIR RESPECTIVE MANAGERS, OFFICERS, DIRECTORS, EMPLOYEES, EQUITYHOLDERS, AGENTS, CONSULTANTS OR SERVICE PROVIDERS (INCLUDING, WITHOUT LIMITATION, ANY REGULATORY SERVICES PROVIDER), NOR ANY MEMBER OF ANY COMMITTEE OR OTHER GOVERNING BODY OF ANY AFFILIATE OF THE CLEARINGHOUSE (EACH OF THE FOREGOING, AS APPLICABLE, THE \u201cDISCLAIMING PARTY\u201d AND, COLLECTIVELY, \u201cDISCLAIMING PARTIES\u201d) SHALL BE RESPONSIBLE FOR ANY ACTION TAKEN, OR ANY DELAY OR FAILURE TO TAKE ANY ACTION, HEREUNDER OR OTHERWISE TO FULFILL A DISCLAIMING PARTY\u2019S OBLIGATIONS TO CLEARING PARTICIPANTS, OTHER THAN FOR LOSSES CAUSED DIRECTLY BY A DISCLAIMING PARTY\u2019S GROSS NEGLIGENCE OR WILLFUL MISCONDUCT AND SHALL NOT BE LIABLE FOR ANY OTHER OBLIGATIONS, INCLUDING BUT NOT LIMITED TO OBLIGATIONS OF A CLEARING PARTICIPANT, OBLIGATIONS OF A CLEARING PARTICIPANT TO A CUSTOMER OR OTHER NON-CLEARING PARTICIPANT OR OBLIGATIONS OF A CLEARING PARTICIPANT TO ANOTHER CLEARING PARTICIPANT THAT IS ACTING FOR IT AS BROKER; NOR SHALL A DISCLAIMING PARTY BECOME LIABLE TO MAKE DELIVERIES TO OR ACCEPT DELIVERIES FROM CLEARING PARTICIPANTS OR CUSTOMERS. UNDER NO CIRCUMSTANCES WILL A DISCLAIMING PARTY BE LIABLE FOR (1) THE ACTS, DELAYS, OMISSIONS, BANKRUPTCY, OR INSOLVENCY, OF ANY THIRD PARTY, INCLUDING, WITHOUT LIMITATION, ANY DEPOSITORY, CUSTODIAN, SUBCUSTODIAN, CLEARING OR SETTLEMENT SYSTEM UNLESS THE DISCLAIMING PARTY WAS GROSSLY NEGLIGENT OR ENGAGED IN WILLFUL MISCONDUCT OR (2) THE PERFORMANCE OR OPERATION (OR NON- PERFORMANCE OR NON-OPERATION) OF ANY DIGITAL ASSET OR RELATED DISTRIBUTED LEDGER (\u201cANCILLARY DL\u201d) ATTRIBUTABLE DIRECTLY OR INDIRECTLY TO THE DESIGN OF THE DIGITAL ASSET OR ANCILLARY DL. UNDER NO CIRCUMSTANCES WILL A DISCLAIMING PARTY BE LIABLE FOR ANY INDIRECT, CONSEQUENTIAL, INCIDENTAL, SPECIAL, PUNITIVE OR EXEMPLARY LOSS OR DAMAGE (INCLUDING, BUT NOT LIMITED TO, LOSS OF BUSINESS, LOSS OF PROFITS, TRADING LOSSES, LOSS OF OPPORTUNITY AND LOSS OF USE) HOWSOEVER SUFFERED OR INCURRED, REGARDLESS OF WHETHER THE DISCLAIMING PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES OR WHETHER SUCH DAMAGES OTHERWISE COULD HAVE BEEN FORESEEN OR PREVENTED. THE FOREGOING LIMITATIONS OF LIABILITY SHALL APPLY REGARDLESS OF WHETHER A CLAIM IS BASED ON BREACH OF CONTRACT, TORT, INCLUDING, WITHOUT LIMITATION, NEGLIGENCE (OTHER THAN GROSS NEGLIGENCE), STRICT LIABILITY, NEGLIGENT MISREPRESENTATION, RESTITUTION, BREACH OF STATUTORY DUTY, BREACH OF WARRANTY OR OTHERWISE, AND WHETHER THE CLAIM IS BROUGHT DIRECTLY OR AS A THIRD-PARTY CLAIM. (B). THERE ARE NO EXPRESS OR IMPLIED WARRANTIES OR REPRESENTATIONS PROVIDED BY THE CLEARINGHOUSE OR ANY OTHER DISCLAIMING PARTY RELATING TO ANY SYSTEMS OR SERVICES OF THE CLEARINGHOUSE OR SERVICES, EQUIPMENT OR FACILITIES USED TO SUPPORT SUCH SYSTEMS OR SERVICES, AND THE CLEARINGHOUSE HEREBY SPECIFICALLY DISCLAIMS, OVERRIDES AND EXCLUDES, TO THE FULLEST EXTENT PERMITTED BY LAW, ALL IMPLIED WARRANTIES OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A PARTICULAR PURPOSE AND ALL OTHER WARRANTIES, CONDITIONS, OTHER CONTRACTUAL TERMS, REPRESENTATIONS, INDEMNITIES AND GUARANTEES WITH RESPECT TO THE SERVICES, WHETHER EXPRESS, IMPLIED OR STATUTORY, ARISING BY LAW, CUSTOM, PRIOR ORAL OR WRITTEN STATEMENTS BY THE CLEARINGHOUSE OR ANY OTHER DISCLAIMING PARTY OR OTHERWISE (INCLUDING BUT NOT LIMITED TO, AS TO TITLE, SATISFACTORY QUALITY, ACCURACY, COMPLETENESS, UNINTERRUPTED USE, NON-INFRINGEMENT, TIMELINESS, TRUTHFULNESS, SEQUENCE AND ANY IMPLIED WARRANTIES, CONDITIONS AND OTHER CONTRACTUAL TERMS ARISING FROM TRANSACTION USAGE, COURSE OF DEALING OR COURSE OF PERFORMANCE) RELATING TO ANY SYSTEMS OR SERVICES OF THE CLEARINGHOUSE OR SERVICES, EQUIPMENT OR FACILITIES USED TO SUPPORT SUCH SYSTEMS OR SERVICES. (C). Commodity Stream, LLC CLEARING MAY ACCEPT AND RELY UPON ANY INFORMATION OR INSTRUCTION GIVEN TO Commodity Stream, LLC CLEARING BY A CLEARING PARTICIPANT OR ITS OFFICERS OR AUTHORIZED REPRESENTATIVES, WHICH REASONABLY IS UNDERSTOOD BY Commodity Stream, LLC CLEARING TO HAVE BEEN DELIVERED TO Commodity Stream, LLC CLEARING BY THE CLEARING PARTICIPANT AND SUCH CLEARING PARTICIPANT SHALL INDEMNIFY THE DISCLAIMING PARTIES AND CLEARING PARTICIPANTS AGAINST ANY LOSS, LIABILITY OR EXPENSE AS A RESULT OF ANY ACT DONE IN RELIANCE UPON THE AUTHENTICITY OF ANY INFORMATION OR INSTRUCTION RECEIVED BY Commodity Stream, LLC CLEARING, THE INACCURACY OF THE INFORMATION CONTAINED THEREIN OR EFFECTING TRANSACTIONS IN RELIANCE UPON SUCH INFORMATION OR INSTRUCTION. (D). A CLEARING PARTICIPANT SHALL REIMBURSE Commodity Stream, LLC CLEARING FOR ALL FEES, EXPENSES, CHARGES AND COSTS ASSESSED BY A DEPOSITORY AGAINST Commodity Stream, LLC CLEARING WITH RESPECT TO MARGIN MAINTAINED IN SUCH CLEARING PARTICIPANT\u2019S ACCOUNT, AND Commodity Stream, LLC CLEARING SHALL NOT HAVE ANY OBLIGATION OR RESPONSIBILITY TO PRESERVE, PROTECT, COLLECT OR REALIZE UPON, AND EXCEPT AS PROVIDED IN RULE 403(D), Commodity Stream, LLC CLEARING SHALL NOT BE LIABLE FOR, ANY LOSS OR DIMINUTION IN VALUE OR DEPRECIATION IN MARGIN DEPOSITED BY CLEARING PARTICIPANTS. CLEARING PARTICIPANTS THAT DEPOSIT MARGIN WITH AN APPROVED DEPOSITORY INSTITUTION PURSUANT TO THE RULES SHALL HOLD Commodity Stream, LLC CLEARING HARMLESS FROM ALL LIABILITY, LOSSES AND DAMAGES WHICH MAY RESULT FROM OR ARISE WITH RESPECT TO THE CARE AND SALE OF SUCH MARGIN. (E). ANY OBLIGATION OF Commodity Stream, LLC CLEARING TO A CLEARING PARTICIPANT ARISING FROM A CONTRACT OR FROM ANY PROVISION OF THE RULES SHALL BE SUBJECT TO ALL THE TERMS OF THE RULES, INCLUDING THE SETOFF AND OTHER RIGHTS SET FORTH HEREIN. (F). EXCEPT IN ANY CASE WHERE A DISCLAIMING PARTY HAS BEEN FINALLY ADJUDICATED TO HAVE ENGAGED IN FRAUD OR WILLFUL OR WANTON MISCONDUCT, IN NO EVENT SHALL THE DISCLAIMING PARTIES\u2019 TOTAL COMBINED AGGREGATE LIABILITY FOR ALL CLAIMS, OTHER THAN THOSE ARISING UNDER RULE 501(F), EXCEED $100,000 FOR ALL LOSSES SUFFERED FROM ALL CAUSES ON A SINGLE CALENDAR DAY; $200,000 FOR ALL LOSSES SUFFERED FROM ALL CAUSES IN A SINGLE CALENDAR MONTH; AND $1,000,000 FOR ALL LOSSES SUFFERED FROM ALL CAUSES IN A SINGLE CALENDAR YEAR. IF THE NUMBER OF ALLOWED CLAIMS ARISING OUT OF ANY FAILURES OR MALFUNCTIONS ON A SINGLE DAY, SINGLE MONTH OR SINGLE YEAR CANNOT BE FULLY SATISFIED BECAUSE OF THE ABOVE DOLLAR LIMITATIONS, ALL SUCH CLAIMS SHALL BE LIMITED TO A PRO RATA SHARE OF THE MAXIMUM AMOUNT FOR THE RESPECTIVE PERIOD. (G). THE RIGHTS OF Commodity Stream, LLC CLEARING SET FORTH HEREIN SHALL BE IN ADDITION TO OTHER RIGHTS THAT Commodity Stream, LLC CLEARING MAY HAVE UNDER APPLICABLE LAW AND GOVERNMENTAL REGULATIONS, OTHER PROVISIONS OF THE RULES, ADDITIONAL AGREEMENTS WITH THE CLEARING PARTICIPANT OR ANY OTHER SOURCE. 502. Clearing Participant Default \u00b6 (A). If a Clearing Participant is in Default, Margin held with respect to such Clearing Participant\u2019s Member Property Accounts, and any other of such Clearing Participant\u2019s assets held by, pledged to or otherwise available to Commodity Stream, LLC, may be applied by Commodity Stream, LLC to discharge the Obligations of such Clearing Participant to Commodity Stream, LLC (including any costs and expenses associated with the liquidation, transfer or management of Contracts held in or for the Member Property Accounts of such Clearing Participant, and any fees, assessments or fines imposed by Commodity Stream, LLC on such Clearing Participant), and Commodity Stream, LLC may cause all Contracts of such Clearing Participant (whether or not carried in a Customer Account) to be closed or offset, transferred to any other Clearing Participant, or otherwise resolved as provided in these Rules. (B). If the Margin held with respect to such Clearing Participant\u2019s Member Property Accounts, and other of such Clearing Participant\u2019s assets held by, pledged to or otherwise available to Commodity Stream, LLC, including any guarantee issued pursuant to these Rules, are insufficient to satisfy the defaulting Clearing Participant\u2019s Obligations to Commodity Stream, LLC after giving effect to the application of such amounts pursuant to paragraph (a), such defaulting Clearing Participant shall continue to be liable therefor. (C). In closing, offsetting, transferring or otherwise resolving the Contracts of a Clearing Participant as provided herein and in Rule 601, Commodity Stream, LLC shall have the right: (i) With respect to Contracts in a Customer Account of such Commodity Stream, LLC Clearing Participant, to set off [x] any proceeds received by Commodity Stream, LLC from the disposition of such Contracts and any property or proceeds thereof deposited with or held by Commodity Stream, LLC as Margin for such account against [y] any amounts paid by Commodity Stream, LLC in the disposition of such Contracts, including any commissions or other losses or expenses incurred in connection therewith or in connection with the liquidation of Margin deposits in such Customer Account and any other amounts owed to Commodity Stream, LLC as a result of transactions in the Customer Account or otherwise lawfully chargeable against such Customer Account; (ii) With respect to the Contracts in any Member Property Accounts of such Clearing Participant, to set off (x) any proceeds received by Commodity Stream, LLC from the disposition of such Contracts, any property or proceeds thereof deposited with or held by Commodity Stream, LLC as Margin for such Member Property Accounts and any other property of the Clearing Participant within the possession or control of Commodity Stream, LLC other than property that has been identified by such Clearing Participant as required to be segregated pursuant to the CEA and CFTC Regulations, against (y) any amounts paid by Commodity Stream, LLC in the disposition of such Contracts, including any commissions or other losses or expenses incurred in connection therewith or in connection with the liquidation of Margin deposits in such Member Property Accounts, and any other Obligations of the Clearing Participant to Commodity Stream, LLC, including Obligations of the Clearing Participant to Commodity Stream, LLC remaining after the setoffs referred to in paragraph (i) above, and any Obligations arising from any other Member Property Accounts maintained by the Clearing Participant with Commodity Stream, LLC; and (iii) To defer closing or otherwise settling such trades and Contracts if, in its discretion, it determines that the closing out of some or all of the suspended Clearing Participant\u2019s trades or Contracts would not be in the best interests of Commodity Stream, LLC or other Clearing Participants, taking into account the size and nature of the positions in question, market conditions prevailing at the time, the potential market effects of such liquidating transactions as might be directed by Commodity Stream, LLC, and such other circumstances as it deems relevant; (iv) Or take any action the Clearinghouse deems proper or in the best interest of the Clearinghouse or its Clearing Participants. (D). For purposes of this Rule, each Default by a Network and/or Clearing Participant will be considered a separate Default. (E). A Network and/or Clearing Participant shall take no action, including but not limited to attempting to obtain a court order, that would interfere with the ability of Commodity Stream, LLC to exercise its rights under the Rules and its agreements with such Network or Clearing Participant. 503. Investment of Customer Funds \u00b6 Funds and assets belonging to Customers that are invested by Commodity Stream, LLC Clearing shall be held in instruments that comply with CFTC Regulations 1.25 and 39.15(e). Non-Customer funds and assets belonging to Clearing Participants that are invested by Commodity Stream, LLC shall be held in instruments that comply with CFTC Regulation 39.15(e).","title":"Obligations"},{"location":"obligations/#obligations","text":"","title":"Obligations"},{"location":"obligations/#501-limitation-of-liability","text":"(A). THE LIABILITY OF Commodity Stream, LLC CLEARING RELATING TO OR ARISING OUT OF CONTRACTS SHALL BE LIMITED TO LOSSES RESULTING FROM THE NOVATION OF THE CONTRACTS IN ACCORDANCE WITH THE RULES. SUBJECT TO THE FOREGOING, NEITHER THE CLEARINGHOUSE, NOR ANY AFFILIATE OF THE CLEARINGHOUSE, NOR ANY OF THEIR RESPECTIVE MANAGERS, OFFICERS, DIRECTORS, EMPLOYEES, EQUITYHOLDERS, AGENTS, CONSULTANTS OR SERVICE PROVIDERS (INCLUDING, WITHOUT LIMITATION, ANY REGULATORY SERVICES PROVIDER), NOR ANY MEMBER OF ANY COMMITTEE OR OTHER GOVERNING BODY OF ANY AFFILIATE OF THE CLEARINGHOUSE (EACH OF THE FOREGOING, AS APPLICABLE, THE \u201cDISCLAIMING PARTY\u201d AND, COLLECTIVELY, \u201cDISCLAIMING PARTIES\u201d) SHALL BE RESPONSIBLE FOR ANY ACTION TAKEN, OR ANY DELAY OR FAILURE TO TAKE ANY ACTION, HEREUNDER OR OTHERWISE TO FULFILL A DISCLAIMING PARTY\u2019S OBLIGATIONS TO CLEARING PARTICIPANTS, OTHER THAN FOR LOSSES CAUSED DIRECTLY BY A DISCLAIMING PARTY\u2019S GROSS NEGLIGENCE OR WILLFUL MISCONDUCT AND SHALL NOT BE LIABLE FOR ANY OTHER OBLIGATIONS, INCLUDING BUT NOT LIMITED TO OBLIGATIONS OF A CLEARING PARTICIPANT, OBLIGATIONS OF A CLEARING PARTICIPANT TO A CUSTOMER OR OTHER NON-CLEARING PARTICIPANT OR OBLIGATIONS OF A CLEARING PARTICIPANT TO ANOTHER CLEARING PARTICIPANT THAT IS ACTING FOR IT AS BROKER; NOR SHALL A DISCLAIMING PARTY BECOME LIABLE TO MAKE DELIVERIES TO OR ACCEPT DELIVERIES FROM CLEARING PARTICIPANTS OR CUSTOMERS. UNDER NO CIRCUMSTANCES WILL A DISCLAIMING PARTY BE LIABLE FOR (1) THE ACTS, DELAYS, OMISSIONS, BANKRUPTCY, OR INSOLVENCY, OF ANY THIRD PARTY, INCLUDING, WITHOUT LIMITATION, ANY DEPOSITORY, CUSTODIAN, SUBCUSTODIAN, CLEARING OR SETTLEMENT SYSTEM UNLESS THE DISCLAIMING PARTY WAS GROSSLY NEGLIGENT OR ENGAGED IN WILLFUL MISCONDUCT OR (2) THE PERFORMANCE OR OPERATION (OR NON- PERFORMANCE OR NON-OPERATION) OF ANY DIGITAL ASSET OR RELATED DISTRIBUTED LEDGER (\u201cANCILLARY DL\u201d) ATTRIBUTABLE DIRECTLY OR INDIRECTLY TO THE DESIGN OF THE DIGITAL ASSET OR ANCILLARY DL. UNDER NO CIRCUMSTANCES WILL A DISCLAIMING PARTY BE LIABLE FOR ANY INDIRECT, CONSEQUENTIAL, INCIDENTAL, SPECIAL, PUNITIVE OR EXEMPLARY LOSS OR DAMAGE (INCLUDING, BUT NOT LIMITED TO, LOSS OF BUSINESS, LOSS OF PROFITS, TRADING LOSSES, LOSS OF OPPORTUNITY AND LOSS OF USE) HOWSOEVER SUFFERED OR INCURRED, REGARDLESS OF WHETHER THE DISCLAIMING PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES OR WHETHER SUCH DAMAGES OTHERWISE COULD HAVE BEEN FORESEEN OR PREVENTED. THE FOREGOING LIMITATIONS OF LIABILITY SHALL APPLY REGARDLESS OF WHETHER A CLAIM IS BASED ON BREACH OF CONTRACT, TORT, INCLUDING, WITHOUT LIMITATION, NEGLIGENCE (OTHER THAN GROSS NEGLIGENCE), STRICT LIABILITY, NEGLIGENT MISREPRESENTATION, RESTITUTION, BREACH OF STATUTORY DUTY, BREACH OF WARRANTY OR OTHERWISE, AND WHETHER THE CLAIM IS BROUGHT DIRECTLY OR AS A THIRD-PARTY CLAIM. (B). THERE ARE NO EXPRESS OR IMPLIED WARRANTIES OR REPRESENTATIONS PROVIDED BY THE CLEARINGHOUSE OR ANY OTHER DISCLAIMING PARTY RELATING TO ANY SYSTEMS OR SERVICES OF THE CLEARINGHOUSE OR SERVICES, EQUIPMENT OR FACILITIES USED TO SUPPORT SUCH SYSTEMS OR SERVICES, AND THE CLEARINGHOUSE HEREBY SPECIFICALLY DISCLAIMS, OVERRIDES AND EXCLUDES, TO THE FULLEST EXTENT PERMITTED BY LAW, ALL IMPLIED WARRANTIES OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A PARTICULAR PURPOSE AND ALL OTHER WARRANTIES, CONDITIONS, OTHER CONTRACTUAL TERMS, REPRESENTATIONS, INDEMNITIES AND GUARANTEES WITH RESPECT TO THE SERVICES, WHETHER EXPRESS, IMPLIED OR STATUTORY, ARISING BY LAW, CUSTOM, PRIOR ORAL OR WRITTEN STATEMENTS BY THE CLEARINGHOUSE OR ANY OTHER DISCLAIMING PARTY OR OTHERWISE (INCLUDING BUT NOT LIMITED TO, AS TO TITLE, SATISFACTORY QUALITY, ACCURACY, COMPLETENESS, UNINTERRUPTED USE, NON-INFRINGEMENT, TIMELINESS, TRUTHFULNESS, SEQUENCE AND ANY IMPLIED WARRANTIES, CONDITIONS AND OTHER CONTRACTUAL TERMS ARISING FROM TRANSACTION USAGE, COURSE OF DEALING OR COURSE OF PERFORMANCE) RELATING TO ANY SYSTEMS OR SERVICES OF THE CLEARINGHOUSE OR SERVICES, EQUIPMENT OR FACILITIES USED TO SUPPORT SUCH SYSTEMS OR SERVICES. (C). Commodity Stream, LLC CLEARING MAY ACCEPT AND RELY UPON ANY INFORMATION OR INSTRUCTION GIVEN TO Commodity Stream, LLC CLEARING BY A CLEARING PARTICIPANT OR ITS OFFICERS OR AUTHORIZED REPRESENTATIVES, WHICH REASONABLY IS UNDERSTOOD BY Commodity Stream, LLC CLEARING TO HAVE BEEN DELIVERED TO Commodity Stream, LLC CLEARING BY THE CLEARING PARTICIPANT AND SUCH CLEARING PARTICIPANT SHALL INDEMNIFY THE DISCLAIMING PARTIES AND CLEARING PARTICIPANTS AGAINST ANY LOSS, LIABILITY OR EXPENSE AS A RESULT OF ANY ACT DONE IN RELIANCE UPON THE AUTHENTICITY OF ANY INFORMATION OR INSTRUCTION RECEIVED BY Commodity Stream, LLC CLEARING, THE INACCURACY OF THE INFORMATION CONTAINED THEREIN OR EFFECTING TRANSACTIONS IN RELIANCE UPON SUCH INFORMATION OR INSTRUCTION. (D). A CLEARING PARTICIPANT SHALL REIMBURSE Commodity Stream, LLC CLEARING FOR ALL FEES, EXPENSES, CHARGES AND COSTS ASSESSED BY A DEPOSITORY AGAINST Commodity Stream, LLC CLEARING WITH RESPECT TO MARGIN MAINTAINED IN SUCH CLEARING PARTICIPANT\u2019S ACCOUNT, AND Commodity Stream, LLC CLEARING SHALL NOT HAVE ANY OBLIGATION OR RESPONSIBILITY TO PRESERVE, PROTECT, COLLECT OR REALIZE UPON, AND EXCEPT AS PROVIDED IN RULE 403(D), Commodity Stream, LLC CLEARING SHALL NOT BE LIABLE FOR, ANY LOSS OR DIMINUTION IN VALUE OR DEPRECIATION IN MARGIN DEPOSITED BY CLEARING PARTICIPANTS. CLEARING PARTICIPANTS THAT DEPOSIT MARGIN WITH AN APPROVED DEPOSITORY INSTITUTION PURSUANT TO THE RULES SHALL HOLD Commodity Stream, LLC CLEARING HARMLESS FROM ALL LIABILITY, LOSSES AND DAMAGES WHICH MAY RESULT FROM OR ARISE WITH RESPECT TO THE CARE AND SALE OF SUCH MARGIN. (E). ANY OBLIGATION OF Commodity Stream, LLC CLEARING TO A CLEARING PARTICIPANT ARISING FROM A CONTRACT OR FROM ANY PROVISION OF THE RULES SHALL BE SUBJECT TO ALL THE TERMS OF THE RULES, INCLUDING THE SETOFF AND OTHER RIGHTS SET FORTH HEREIN. (F). EXCEPT IN ANY CASE WHERE A DISCLAIMING PARTY HAS BEEN FINALLY ADJUDICATED TO HAVE ENGAGED IN FRAUD OR WILLFUL OR WANTON MISCONDUCT, IN NO EVENT SHALL THE DISCLAIMING PARTIES\u2019 TOTAL COMBINED AGGREGATE LIABILITY FOR ALL CLAIMS, OTHER THAN THOSE ARISING UNDER RULE 501(F), EXCEED $100,000 FOR ALL LOSSES SUFFERED FROM ALL CAUSES ON A SINGLE CALENDAR DAY; $200,000 FOR ALL LOSSES SUFFERED FROM ALL CAUSES IN A SINGLE CALENDAR MONTH; AND $1,000,000 FOR ALL LOSSES SUFFERED FROM ALL CAUSES IN A SINGLE CALENDAR YEAR. IF THE NUMBER OF ALLOWED CLAIMS ARISING OUT OF ANY FAILURES OR MALFUNCTIONS ON A SINGLE DAY, SINGLE MONTH OR SINGLE YEAR CANNOT BE FULLY SATISFIED BECAUSE OF THE ABOVE DOLLAR LIMITATIONS, ALL SUCH CLAIMS SHALL BE LIMITED TO A PRO RATA SHARE OF THE MAXIMUM AMOUNT FOR THE RESPECTIVE PERIOD. (G). THE RIGHTS OF Commodity Stream, LLC CLEARING SET FORTH HEREIN SHALL BE IN ADDITION TO OTHER RIGHTS THAT Commodity Stream, LLC CLEARING MAY HAVE UNDER APPLICABLE LAW AND GOVERNMENTAL REGULATIONS, OTHER PROVISIONS OF THE RULES, ADDITIONAL AGREEMENTS WITH THE CLEARING PARTICIPANT OR ANY OTHER SOURCE.","title":"501. Limitation of Liability"},{"location":"obligations/#502-clearing-participant-default","text":"(A). If a Clearing Participant is in Default, Margin held with respect to such Clearing Participant\u2019s Member Property Accounts, and any other of such Clearing Participant\u2019s assets held by, pledged to or otherwise available to Commodity Stream, LLC, may be applied by Commodity Stream, LLC to discharge the Obligations of such Clearing Participant to Commodity Stream, LLC (including any costs and expenses associated with the liquidation, transfer or management of Contracts held in or for the Member Property Accounts of such Clearing Participant, and any fees, assessments or fines imposed by Commodity Stream, LLC on such Clearing Participant), and Commodity Stream, LLC may cause all Contracts of such Clearing Participant (whether or not carried in a Customer Account) to be closed or offset, transferred to any other Clearing Participant, or otherwise resolved as provided in these Rules. (B). If the Margin held with respect to such Clearing Participant\u2019s Member Property Accounts, and other of such Clearing Participant\u2019s assets held by, pledged to or otherwise available to Commodity Stream, LLC, including any guarantee issued pursuant to these Rules, are insufficient to satisfy the defaulting Clearing Participant\u2019s Obligations to Commodity Stream, LLC after giving effect to the application of such amounts pursuant to paragraph (a), such defaulting Clearing Participant shall continue to be liable therefor. (C). In closing, offsetting, transferring or otherwise resolving the Contracts of a Clearing Participant as provided herein and in Rule 601, Commodity Stream, LLC shall have the right: (i) With respect to Contracts in a Customer Account of such Commodity Stream, LLC Clearing Participant, to set off [x] any proceeds received by Commodity Stream, LLC from the disposition of such Contracts and any property or proceeds thereof deposited with or held by Commodity Stream, LLC as Margin for such account against [y] any amounts paid by Commodity Stream, LLC in the disposition of such Contracts, including any commissions or other losses or expenses incurred in connection therewith or in connection with the liquidation of Margin deposits in such Customer Account and any other amounts owed to Commodity Stream, LLC as a result of transactions in the Customer Account or otherwise lawfully chargeable against such Customer Account; (ii) With respect to the Contracts in any Member Property Accounts of such Clearing Participant, to set off (x) any proceeds received by Commodity Stream, LLC from the disposition of such Contracts, any property or proceeds thereof deposited with or held by Commodity Stream, LLC as Margin for such Member Property Accounts and any other property of the Clearing Participant within the possession or control of Commodity Stream, LLC other than property that has been identified by such Clearing Participant as required to be segregated pursuant to the CEA and CFTC Regulations, against (y) any amounts paid by Commodity Stream, LLC in the disposition of such Contracts, including any commissions or other losses or expenses incurred in connection therewith or in connection with the liquidation of Margin deposits in such Member Property Accounts, and any other Obligations of the Clearing Participant to Commodity Stream, LLC, including Obligations of the Clearing Participant to Commodity Stream, LLC remaining after the setoffs referred to in paragraph (i) above, and any Obligations arising from any other Member Property Accounts maintained by the Clearing Participant with Commodity Stream, LLC; and (iii) To defer closing or otherwise settling such trades and Contracts if, in its discretion, it determines that the closing out of some or all of the suspended Clearing Participant\u2019s trades or Contracts would not be in the best interests of Commodity Stream, LLC or other Clearing Participants, taking into account the size and nature of the positions in question, market conditions prevailing at the time, the potential market effects of such liquidating transactions as might be directed by Commodity Stream, LLC, and such other circumstances as it deems relevant; (iv) Or take any action the Clearinghouse deems proper or in the best interest of the Clearinghouse or its Clearing Participants. (D). For purposes of this Rule, each Default by a Network and/or Clearing Participant will be considered a separate Default. (E). A Network and/or Clearing Participant shall take no action, including but not limited to attempting to obtain a court order, that would interfere with the ability of Commodity Stream, LLC to exercise its rights under the Rules and its agreements with such Network or Clearing Participant.","title":"502. Clearing Participant Default"},{"location":"obligations/#503-investment-of-customer-funds","text":"Funds and assets belonging to Customers that are invested by Commodity Stream, LLC Clearing shall be held in instruments that comply with CFTC Regulations 1.25 and 39.15(e). Non-Customer funds and assets belonging to Clearing Participants that are invested by Commodity Stream, LLC shall be held in instruments that comply with CFTC Regulation 39.15(e).","title":"503. Investment of Customer Funds"},{"location":"refunder/","text":"Proxy Gas Refunder \u00b6 A generic contract system for reliably refunding the gas costs of transactions. The purpose of the project is to: Enable Protocols to specify what contract calls they are willing to sponsor with a set of limitations (e.g gas price) Enable anyone to submit transactions that are eligible for refunding and get their transaction costs reimbursed. Contracts \u00b6 There are 3 major contracts: Refunder factory Refunder GatewayProxy Refunder Factory \u00b6 Factory contract used for the deployment of Refunder contracts. Anyone is able to deploy a refunder contract and configure it for its own needs. RefunderFactory is aware of the GateWayProxy and its interface. On deployment: msg.sender is the initial owner of the Refunder contract. the deployed Refunder contract is added to the set of registered refunders in the GatewayProxy via the GatewayProxy.addRefunder function. Refunder \u00b6 Refunder contract is a standalone, completely independent contract that represents the interest of a given protocol/entity that wants to sponsor a set of function calls. The contract: is ownable . Initially set to the msg.sender that calls the factory Holds ETH for gas cost reimbursements has a map(address, bool) of whitelisted GatewayProxy contracts has a map(address -> map(bytes4, uint256)) of whitelisted refundableCalls . The key of the outer map is a \"whitelisted\" contract address . Calls are represented by the function's signature. The keys of the inner map ( bytes4 ) are calculated as keccak256('functionName(params)') . For example, if a given refunder contract allows for refunding of ERC20 approve tx, the key of the inner map would be bytes4(keccak256(approve(address,uint256)) . The value ( uint256 ) of the inner map ( map(bytes4, uint256) ) represents the estimated gas costs of refunding users for that specific contract call. NOTE: this is not the gas costs that will be reimbursed to the msg.sender , but the expected gas costs only for calling refund with those arguments. Interface \u00b6 Note: Function calls must be nonReentrant // @param isEligible - Returns true/false whether the specified contract call is eligible for gas refund function isEligible ( address targetContract , bytes4 interfaceId , uint256 gasPrice ) external returns ( bool ) // @param getRefundCost - Returns the `expected` gas costs for executing the `refund` with the specified arguments function getRefundCost ( address targetContract , bytes4 interfaceId , uint256 gasPrice ) external returns ( uint256 ) // @param refund - Refunds the sender, calling the target contract's function function refund ( address sender , address target , bytes4 interfaceId , uint256 amount ) external returns ( bool ) // @param withdraw - Withdraws ETH from the Refunder contract function withdraw ( uint256 amount ) Context \u00b6 abstract contract Context { function _msgSender () internal view virtual returns ( address ) { return msg.sender ; } function _msgData () internal view virtual returns ( bytes calldata ) { this ; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 return msg.data ; } } GatewayProxy \u00b6 The GatewayProxy contract is a singleton contract used to forward the provided contract call data (e.g raw msg + signature) to the target contract and request a refund for the msg.sender afterwards from the responsible Refunder contract. Note v1 should implement the factory/registry pattern The contract has a map(address, bool) of the deployed refunder contracts. Anyone is able to add addresses to the map if they support the required Refunder interface. Interface \u00b6 Note v1 should implement the factory/registry pattern // Provides the `refunder` of the call, the target contract and the call data to be passed. Refunder reimburses the gas costs of the msg sender function supplyAndRefund ( address refunder , address target , bytes data ) // Adds new refunder in the `refunders` map. Internally this function calls the `refunder.refundGasCost` function to set the appropriate value in the `refunders` map function addRefunder ( address refunder ) Pseudo-code \u00b6 Refund calculations modifier netGasCost ( targetContract , interfaceId ) { uint256 gasProvided = gasLeft (); uint256 refundCost = refunder . getRefundCost ( targetContract , interfaceId , tx.gasprice ) // FIXME - non-reentrance _ ; uint256 gasUsedSoFar = gasProvided - gasLeft (); refundAmount = ( gasUsedSoFar + refundCost ) * tx.gasprice ; refunder . refund ( msg.sender , targetContract , interfaceId , refundAmount ); } getRefundCost information is required in order for the GatewayProxy to know how much will be the additional cost for the actual refund call NOTE: interfaceId is the first 4 bytes of the provided bytes data Supply and Refund ( bool success , bytes memory returnData ) = target . call ( data ) // @dev forwarding value","title":"Gas Rebating"},{"location":"refunder/#proxy-gas-refunder","text":"A generic contract system for reliably refunding the gas costs of transactions. The purpose of the project is to: Enable Protocols to specify what contract calls they are willing to sponsor with a set of limitations (e.g gas price) Enable anyone to submit transactions that are eligible for refunding and get their transaction costs reimbursed.","title":"Proxy Gas Refunder"},{"location":"refunder/#contracts","text":"There are 3 major contracts: Refunder factory Refunder GatewayProxy","title":"Contracts"},{"location":"refunder/#refunder-factory","text":"Factory contract used for the deployment of Refunder contracts. Anyone is able to deploy a refunder contract and configure it for its own needs. RefunderFactory is aware of the GateWayProxy and its interface. On deployment: msg.sender is the initial owner of the Refunder contract. the deployed Refunder contract is added to the set of registered refunders in the GatewayProxy via the GatewayProxy.addRefunder function.","title":"Refunder Factory"},{"location":"refunder/#refunder","text":"Refunder contract is a standalone, completely independent contract that represents the interest of a given protocol/entity that wants to sponsor a set of function calls. The contract: is ownable . Initially set to the msg.sender that calls the factory Holds ETH for gas cost reimbursements has a map(address, bool) of whitelisted GatewayProxy contracts has a map(address -> map(bytes4, uint256)) of whitelisted refundableCalls . The key of the outer map is a \"whitelisted\" contract address . Calls are represented by the function's signature. The keys of the inner map ( bytes4 ) are calculated as keccak256('functionName(params)') . For example, if a given refunder contract allows for refunding of ERC20 approve tx, the key of the inner map would be bytes4(keccak256(approve(address,uint256)) . The value ( uint256 ) of the inner map ( map(bytes4, uint256) ) represents the estimated gas costs of refunding users for that specific contract call. NOTE: this is not the gas costs that will be reimbursed to the msg.sender , but the expected gas costs only for calling refund with those arguments.","title":"Refunder"},{"location":"refunder/#interface","text":"Note: Function calls must be nonReentrant // @param isEligible - Returns true/false whether the specified contract call is eligible for gas refund function isEligible ( address targetContract , bytes4 interfaceId , uint256 gasPrice ) external returns ( bool ) // @param getRefundCost - Returns the `expected` gas costs for executing the `refund` with the specified arguments function getRefundCost ( address targetContract , bytes4 interfaceId , uint256 gasPrice ) external returns ( uint256 ) // @param refund - Refunds the sender, calling the target contract's function function refund ( address sender , address target , bytes4 interfaceId , uint256 amount ) external returns ( bool ) // @param withdraw - Withdraws ETH from the Refunder contract function withdraw ( uint256 amount )","title":"Interface"},{"location":"refunder/#context","text":"abstract contract Context { function _msgSender () internal view virtual returns ( address ) { return msg.sender ; } function _msgData () internal view virtual returns ( bytes calldata ) { this ; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691 return msg.data ; } }","title":"Context"},{"location":"refunder/#gatewayproxy","text":"The GatewayProxy contract is a singleton contract used to forward the provided contract call data (e.g raw msg + signature) to the target contract and request a refund for the msg.sender afterwards from the responsible Refunder contract. Note v1 should implement the factory/registry pattern The contract has a map(address, bool) of the deployed refunder contracts. Anyone is able to add addresses to the map if they support the required Refunder interface.","title":"GatewayProxy"},{"location":"refunder/#interface_1","text":"Note v1 should implement the factory/registry pattern // Provides the `refunder` of the call, the target contract and the call data to be passed. Refunder reimburses the gas costs of the msg sender function supplyAndRefund ( address refunder , address target , bytes data ) // Adds new refunder in the `refunders` map. Internally this function calls the `refunder.refundGasCost` function to set the appropriate value in the `refunders` map function addRefunder ( address refunder )","title":"Interface"},{"location":"refunder/#pseudo-code","text":"Refund calculations modifier netGasCost ( targetContract , interfaceId ) { uint256 gasProvided = gasLeft (); uint256 refundCost = refunder . getRefundCost ( targetContract , interfaceId , tx.gasprice ) // FIXME - non-reentrance _ ; uint256 gasUsedSoFar = gasProvided - gasLeft (); refundAmount = ( gasUsedSoFar + refundCost ) * tx.gasprice ; refunder . refund ( msg.sender , targetContract , interfaceId , refundAmount ); } getRefundCost information is required in order for the GatewayProxy to know how much will be the additional cost for the actual refund call NOTE: interfaceId is the first 4 bytes of the provided bytes data Supply and Refund ( bool success , bytes memory returnData ) = target . call ( data ) // @dev forwarding value","title":"Pseudo-code"},{"location":"suspensions/","text":"Suspension and Disciplinary Proceedings \u00b6 Overview \u00b6 (A). The Board, Risk Management Committee, or any Exchange Committee may summarily suspend any Clearing Participant (i) if the Clearing Participant is in Default, (ii) upon the discovery of a materially false or misleading representation or warranty made by the Clearing Participant to Commodity Stream, LLC under or in connection with any agreement between Commodity Stream, LLC and the Clearing Participant, (iii) if a breach by the Clearing Participant of the Rules or any of the terms or provisions of any agreement between Commodity Stream, LLC and the Clearing Participant is not remedied promptly after notice from Commodity Stream, LLC, (iv) in the event of a material violation of the Rules of the Exchange or of the Clearinghouse, or (v) if the Board or the Risk Management Committee determines that suspension is necessary for the protection of Commodity Stream, LLC, other Clearing Participants, or the general public (whether or not such Clearing Participant continues to meet the required minimum financial requirements pursuant to the Rules). Notice of Suspension to Participants \u00b6 (B). Notice of Suspension to Network and Clearing Participants Upon the suspension of a Clearing Participant, Commodity Stream, LLC shall as soon as possible notify all Clearing Participants of the suspension. Such notice shall state to the extent practicable in general terms how pending transactions, open positions and other pending matters will be affected and what steps are to be taken in connection therewith. Pending Transactions \u00b6 (C). Pending Transactions Notwithstanding any other provision of the Rules, Commodity Stream, LLC shall have no obligation to accept any transaction of a suspended Network and/or Clearing Participant that was effected after the time at which the Clearing Participant was suspended. In the event a transaction of a suspended Clearing Participant is rejected by Commodity Stream, LLC, Commodity Stream, LLC shall provide notice of such rejection to the other party thereto and such transaction shall be closed by the other party thereto in accordance with the rules of the Exchange. Open Positions \u00b6 (D). Open Positions * Commodity Stream, LLC shall have the right to cause open positions in Contracts in any of the accounts of a suspended Clearing Participant: (i) To be closed in such manner as deemed practicable by Commodity Stream, LLC, in its sole discretion; (ii) To be transferred to the account of one or more other Clearing Participants; (iii) To be offset against each other and, to the extent of any remaining imbalance, against the Contracts of other Clearing Participants; or (iv) To be settled at the Settlement Price for such Contracts, or at such other price or prices as Commodity Stream, LLC may deem fair and reasonable under the circumstances, in which event Commodity Stream, LLC may cause Contracts in the accounts of other Clearing Participants to be settled at such price or prices; (v) Or take any other action with respect to open positions it deems in the best interest of the Clearinghouse or the Clearing Participants. In connection with any action undertaken by Commodity Stream, LLC pursuant to subparagraphs (i) through (iv) above, Commodity Stream, LLC shall have the right to apply the Margin of the applicable Clearing Participant and any other assets of such Clearing Participant held by, pledged to or otherwise available to Commodity Stream, LLC, including any guarantee issued pursuant to these Rules, to discharge the Obligations of such Clearing Participant to Commodity Stream, LLC Clearing (including any costs and expenses associated with the liquidation, transfer or management of Contracts held in or for the accounts of such Network and/or Clearing Participant, and any fees, assessments or fines imposed by Commodity Stream, LLC on such Clearing Participant). Commodity Stream, LLC may delegate to specified Officers or agents of Commodity Stream, LLC the authority to determine, within such guidelines, if any, as Commodity Stream, LLC shall prescribe, the nature and timing of transactions of the type described in subparagraph (i). Notwithstanding the preceding provisions of this paragraph (d), if Commodity Stream, LLC shall determine, taking into account the size and nature of a suspended Clearing Participant\u2019s positions, market conditions prevailing at the time, the potential market effects of liquidating transactions that might be directed by Commodity Stream, LLC, and such other circumstances as Commodity Stream, LLC deems relevant, that the closing out of some or all of the suspended Network and/or Clearing Participant\u2019s positions would not be in the best interests of Commodity Stream, LLC, other Clearing Participants, or the general public, such positions need not be closed out. Protective Action \u00b6 (E). Protective Action If Commodity Stream, LLC (i) is unable, for any reason, to close out in a prompt and orderly manner any positions or to convert to cash any Margin deposits of a suspended Network and/or Clearing Participant, or (ii) elects pursuant to paragraph (d) of this Rule not to close out any such positions, Commodity Stream, LLC may authorize the execution of hedging transactions from time to time for the account of Commodity Stream, LLC, solely for the purpose of reducing the risk to Commodity Stream, LLC resulting from the continued maintenance of such positions or the continued holding of such Margin deposits. Commodity Stream, LLC may delegate to specified Officers or agents of Commodity Stream, LLC the authority to determine, within such guidelines, if any, as Commodity Stream, LLC shall prescribe, the nature and timing of such hedging transactions. Reimbursement of Costs and Expenses \u00b6 (F). Reimbursement of Costs and Expenses Any costs or expenses, including losses, sustained by Commodity Stream, LLC in connection with transactions effected for its account pursuant to this Rule shall be charged to the suspended Clearing Participant, and any gains realized on such transactions shall be credited to such Clearing Participant; provided, however, that costs, expenses, and gains allocable to the hedging of positions in a Customer Account shall be charged or credited, as the case may be, to the Customer Account, and only the excess, if any, of such costs and expenses over the funds available in that account shall be charged to the Clearing Participant. Reasonable allocations of costs, expenses, and gains among accounts made by Commodity Stream, LLC for the purpose of implementing the proviso to the preceding sentence shall be binding on the Clearing Participant and any persons claiming through the Clearing Participant and their respective successors and assigns. 602. Right of Appeal \u00b6 A Clearing Participant suspended pursuant to Rule 601 shall be entitled, upon request within five Business Days after the date of its suspension, to a written statement of the grounds for its suspension and shall have the right to appeal its suspension in accordance with the following procedure: (A). A suspended Clearing Participant may appeal its suspension by filing a written notice of appeal within five Business Days after the date of its receipt of a written statement of the grounds for its suspension. (B). Appeals shall be considered and decided by the Appeal Panel. Appeals shall be heard as promptly as possible, and in no event more than five Business Days after the filing of the notice of appeal. The appellant shall be notified of the time, place and date of the hearing not less than three Business Days in advance of such date. At the hearing, the appellant shall be afforded an opportunity to be heard and to present evidence in its own behalf, and may, if it so desires, be represented by counsel. As promptly as possible after the hearing, the Appeal Panel shall, by the vote of a majority of its members, affirm or reverse the suspension or modify the terms thereof. The appellant shall be notified in writing of the Appeal Panel\u2019s decision; and if the decision shall have been to affirm or modify the suspension, the appellant shall be given a written statement of the grounds therefor. (C). Any decision by the Appeal Panel to affirm or modify a suspension shall be reviewable by the Board on its own motion or on written demand by the appellant filed with Commodity Stream, LLC within three Business Days after receipt of notice of the Appeal Panel\u2019s decision. The Board may afford the appellant a further opportunity to be heard or to present evidence. The appellant shall be notified in writing of the decision of the Board; and if the decision shall have been to affirm or modify the suspension, the appellant shall be given a written statement of the grounds therefor. (D). The filing of an appeal pursuant to this Rule shall not impair the validity or stay the effect of the suspension appealed from. The reversal or modification of a suspension shall not invalidate any acts of Commodity Stream, LLC taken pursuant to such suspension prior to such reversal or modification, and the rights of any person which may arise out of any such acts shall not be affected by such reversal or modification. (E). A record shall be kept of any hearing held pursuant hereto. The cost of the transcript may, in the discretion of the body holding the hearing, be charged in whole or in part to the suspended Clearing Participant in the event that the suspension is finally affirmed. 603. Sanctions from Disciplinary Proceedings \u00b6 (A). Commodity Stream, LLC may censure, suspend, expel or limit the activities, functions or operations of, and/or impose a fine on (each a \u201csanction\u201d), a Clearing Participant for (i) a violation of the Rules or its agreements with Commodity Stream, LLC or the Exchange, (ii) any neglect or refusal by such Clearing Participant to comply with any applicable order or direction of Commodity Stream, LLC or the Exchange, (iii) any error, delay or other conduct that materially and adversely affects the operations of Commodity Stream, LLC or Commodity Stream, LLC Exchange, (iv) a violation of the rules of the Exchange, or (v) a failure to provide adequate personnel or facilities, where applicable, for its transactions with Commodity Stream, LLC. (B). Commodity Stream, LLC shall provide prompt notice to the CFTC/and or any other governance Board of any action taken in accordance with this Rule 603. 604. Procedures for Disciplinary Proceedings \u00b6 (A). Before any sanction is imposed pursuant to Rule 603, Commodity Stream, LLC shall furnish the person against whom the sanction is sought to be imposed (\u201cRespondent\u201d) with a concise written statement of the charges against the Respondent. The Respondent shall have ten Business Days after the service of such statement to file with Commodity Stream, LLC a written answer thereto. The answer shall admit or deny each allegation contained in the statement of charges and may also contain any defense which the Respondent wishes to submit. Allegations contained in the statement of charges which are not denied in the answer shall be deemed to have been admitted, and any defense not raised in the answer shall be deemed to have been waived. If an answer is not filed within the time prescribed above or any extension thereof granted pursuant to paragraph (d) of this Rule, the allegations contained in the statement of charges shall be deemed to have been admitted, and the sanction specified in the final request shall be imposed without further proceedings and the Respondent shall be notified thereof in writing. If an answer is timely filed, Commodity Stream, LLC shall (unless the Respondent and Commodity Stream, LLC shall have stipulated to the imposition of an agreed sanction) schedule a hearing before the Disciplinary Panel. The Respondent shall be given not less than three Business Days advance notice of the place and time of such hearing. At the hearing, the Respondent shall be afforded the opportunity to be heard and to present evidence in its behalf and may be represented by counsel. A record of the hearing shall be prepared and the cost of the transcript may, in the discretion of the Disciplinary Panel, be charged in whole or in part to the Respondent in the event any sanction is imposed on the Respondent. As soon as practicable after the conclusion of the hearing, the Disciplinary Panel shall furnish the Respondent and the Board with a written statement of its decision. If the decision shall have been to impose a disciplinary sanction, the written statement shall set forth (i) any act or practice in which the Respondent has been found to have engaged, or which the Respondent has been found to have omitted; (ii) the specific provisions of the Rules which any such act, practice or omission has been deemed to violate; and (iii) the sanction imposed and the reasons therefor. (B). In the event that (i) the Disciplinary Panel censures, fines, suspends, expels or limits the activities, functions or operations of a Respondent, or (ii) determines not to impose any disciplinary measures on a Respondent, the Respondent, in the case of (i) above, or the President, in the case of (ii) above, may apply for review to the Board, by written motion filed with Commodity Stream, LLC within five Business Days after issuance of the Disciplinary Panel\u2019s written statement of its decision. (C). The granting of any such motion shall be within the discretion of the Board. In addition, the Board may determine to review any such action by the Disciplinary Panel on its own motion. Review by the Board shall be on the basis of the written record of the proceedings in which the sanction was imposed, but the Board may, in its discretion, afford the Respondent a further opportunity to be heard or to present evidence. A record shall be kept of any such further proceedings. Based upon such review, the Board may affirm, reverse or modify, in whole or in part, the decision of the Disciplinary Panel. The Respondent shall be notified in writing of the decision of the Board and if the decision shall have been to affirm or modify the imposition of any disciplinary sanction, the Respondent shall be given a written statement setting forth (i) any act or practice in which the Respondent has been found to have engaged, or which the Respondent has been found to have omitted; (ii) the Rules which any such act, practice or omission has been deemed to violate; and (iii) the sanction imposed and the reasons therefor. (D). Any time limit set forth in this Rule may be extended by the body having jurisdiction over the matter in respect of which the time limit is imposed. (E). Any action taken by the Disciplinary Panel hereunder shall be deemed to be final upon (i) expiration of the time provided for the filing of a motion for review, or any extension thereof granted pursuant to paragraph (d) hereof; or (ii) if a motion for review is timely filed, when the Respondent is notified of the denial of the motion or the decision of the Board on review, as the case may be; or (iii) if the Board shall determine on its own motion to review the action by the Disciplinary Panel, when the Respondent is notified of the decision of the Board on review. (F). The summary suspension of a Clearing Participant pursuant to Rule 601 shall not be deemed to be a \u201csanction\u201d within the meaning of this Rule, and the provisions of this Rule shall be inapplicable to any such summary suspension. 605. Discipline by Other Self-Regulatory Organizations \u00b6 (A). At the discretion of the Clearinghouse, any suspected violation of these Rules may be referred to the enforcement staff of the Exchange. (B). Any inquiry, investigation or disciplinary action resulting from a suspected violation of these Rules may be handled by Clearinghouse personnel, Exchange personnel, or personnel that serve in roles at both the Clearinghouse and the Exchange. (C). Nothing in this Chapter 6 shall affect the right of any Self-Regulatory Organization to discipline its members pursuant to the provisions of its rules for a violation of the Rules of Commodity Stream, LLC. ## 606. Restriction on or Termination of Clearing Privileges. (A). If [x] a Removal Event occurs with respect to a Clearing Participant, or [y]Commodity Stream, LLC determines that the financial or operational condition of a Clearing Participant or one of its affiliates is such that to allow the Clearing Participant to continue its operation as a Clearing Participant could adversely affect Commodity Stream, LLC or cleared markets (whether or not such Clearing Participant continues to meet the required minimum financial requirements, if applicable), Commodity Stream, LLC may: (i) Allow such Clearing Participant (in the case of an Commodity Stream, LLC Clearing Participant handling Customer Accounts) to submit Contracts for clearing solely for its Member Property Account; (ii) Limit or restrict the type of Contracts that may be cleared by such Clearing Participant in any of its Accounts with Commodity Stream, LLC; (iii) Limit or restrict the number of Contracts that are permitted to be maintained by such Clearing Participant in any of its Accounts with Commodity Stream, LLC; (iv) Decline to accept new trades or positions in Contracts for the Accounts of the Clearing Participant; (v) Increase such Clearing Participant\u2019s Margin requirements and/or require such Clearing Participant to deposit the same in cash or Eligible Securities in proportions different than those that are applicable to Clearing Participants generally;","title":"Suspensions"},{"location":"suspensions/#suspension-and-disciplinary-proceedings","text":"","title":"Suspension and Disciplinary Proceedings"},{"location":"suspensions/#overview","text":"(A). The Board, Risk Management Committee, or any Exchange Committee may summarily suspend any Clearing Participant (i) if the Clearing Participant is in Default, (ii) upon the discovery of a materially false or misleading representation or warranty made by the Clearing Participant to Commodity Stream, LLC under or in connection with any agreement between Commodity Stream, LLC and the Clearing Participant, (iii) if a breach by the Clearing Participant of the Rules or any of the terms or provisions of any agreement between Commodity Stream, LLC and the Clearing Participant is not remedied promptly after notice from Commodity Stream, LLC, (iv) in the event of a material violation of the Rules of the Exchange or of the Clearinghouse, or (v) if the Board or the Risk Management Committee determines that suspension is necessary for the protection of Commodity Stream, LLC, other Clearing Participants, or the general public (whether or not such Clearing Participant continues to meet the required minimum financial requirements pursuant to the Rules).","title":"Overview"},{"location":"suspensions/#notice-of-suspension-to-participants","text":"(B). Notice of Suspension to Network and Clearing Participants Upon the suspension of a Clearing Participant, Commodity Stream, LLC shall as soon as possible notify all Clearing Participants of the suspension. Such notice shall state to the extent practicable in general terms how pending transactions, open positions and other pending matters will be affected and what steps are to be taken in connection therewith.","title":"Notice of Suspension to Participants"},{"location":"suspensions/#pending-transactions","text":"(C). Pending Transactions Notwithstanding any other provision of the Rules, Commodity Stream, LLC shall have no obligation to accept any transaction of a suspended Network and/or Clearing Participant that was effected after the time at which the Clearing Participant was suspended. In the event a transaction of a suspended Clearing Participant is rejected by Commodity Stream, LLC, Commodity Stream, LLC shall provide notice of such rejection to the other party thereto and such transaction shall be closed by the other party thereto in accordance with the rules of the Exchange.","title":"Pending Transactions"},{"location":"suspensions/#open-positions","text":"(D). Open Positions * Commodity Stream, LLC shall have the right to cause open positions in Contracts in any of the accounts of a suspended Clearing Participant: (i) To be closed in such manner as deemed practicable by Commodity Stream, LLC, in its sole discretion; (ii) To be transferred to the account of one or more other Clearing Participants; (iii) To be offset against each other and, to the extent of any remaining imbalance, against the Contracts of other Clearing Participants; or (iv) To be settled at the Settlement Price for such Contracts, or at such other price or prices as Commodity Stream, LLC may deem fair and reasonable under the circumstances, in which event Commodity Stream, LLC may cause Contracts in the accounts of other Clearing Participants to be settled at such price or prices; (v) Or take any other action with respect to open positions it deems in the best interest of the Clearinghouse or the Clearing Participants. In connection with any action undertaken by Commodity Stream, LLC pursuant to subparagraphs (i) through (iv) above, Commodity Stream, LLC shall have the right to apply the Margin of the applicable Clearing Participant and any other assets of such Clearing Participant held by, pledged to or otherwise available to Commodity Stream, LLC, including any guarantee issued pursuant to these Rules, to discharge the Obligations of such Clearing Participant to Commodity Stream, LLC Clearing (including any costs and expenses associated with the liquidation, transfer or management of Contracts held in or for the accounts of such Network and/or Clearing Participant, and any fees, assessments or fines imposed by Commodity Stream, LLC on such Clearing Participant). Commodity Stream, LLC may delegate to specified Officers or agents of Commodity Stream, LLC the authority to determine, within such guidelines, if any, as Commodity Stream, LLC shall prescribe, the nature and timing of transactions of the type described in subparagraph (i). Notwithstanding the preceding provisions of this paragraph (d), if Commodity Stream, LLC shall determine, taking into account the size and nature of a suspended Clearing Participant\u2019s positions, market conditions prevailing at the time, the potential market effects of liquidating transactions that might be directed by Commodity Stream, LLC, and such other circumstances as Commodity Stream, LLC deems relevant, that the closing out of some or all of the suspended Network and/or Clearing Participant\u2019s positions would not be in the best interests of Commodity Stream, LLC, other Clearing Participants, or the general public, such positions need not be closed out.","title":"Open Positions"},{"location":"suspensions/#protective-action","text":"(E). Protective Action If Commodity Stream, LLC (i) is unable, for any reason, to close out in a prompt and orderly manner any positions or to convert to cash any Margin deposits of a suspended Network and/or Clearing Participant, or (ii) elects pursuant to paragraph (d) of this Rule not to close out any such positions, Commodity Stream, LLC may authorize the execution of hedging transactions from time to time for the account of Commodity Stream, LLC, solely for the purpose of reducing the risk to Commodity Stream, LLC resulting from the continued maintenance of such positions or the continued holding of such Margin deposits. Commodity Stream, LLC may delegate to specified Officers or agents of Commodity Stream, LLC the authority to determine, within such guidelines, if any, as Commodity Stream, LLC shall prescribe, the nature and timing of such hedging transactions.","title":"Protective Action"},{"location":"suspensions/#reimbursement-of-costs-and-expenses","text":"(F). Reimbursement of Costs and Expenses Any costs or expenses, including losses, sustained by Commodity Stream, LLC in connection with transactions effected for its account pursuant to this Rule shall be charged to the suspended Clearing Participant, and any gains realized on such transactions shall be credited to such Clearing Participant; provided, however, that costs, expenses, and gains allocable to the hedging of positions in a Customer Account shall be charged or credited, as the case may be, to the Customer Account, and only the excess, if any, of such costs and expenses over the funds available in that account shall be charged to the Clearing Participant. Reasonable allocations of costs, expenses, and gains among accounts made by Commodity Stream, LLC for the purpose of implementing the proviso to the preceding sentence shall be binding on the Clearing Participant and any persons claiming through the Clearing Participant and their respective successors and assigns.","title":"Reimbursement of Costs and Expenses"},{"location":"suspensions/#602-right-of-appeal","text":"A Clearing Participant suspended pursuant to Rule 601 shall be entitled, upon request within five Business Days after the date of its suspension, to a written statement of the grounds for its suspension and shall have the right to appeal its suspension in accordance with the following procedure: (A). A suspended Clearing Participant may appeal its suspension by filing a written notice of appeal within five Business Days after the date of its receipt of a written statement of the grounds for its suspension. (B). Appeals shall be considered and decided by the Appeal Panel. Appeals shall be heard as promptly as possible, and in no event more than five Business Days after the filing of the notice of appeal. The appellant shall be notified of the time, place and date of the hearing not less than three Business Days in advance of such date. At the hearing, the appellant shall be afforded an opportunity to be heard and to present evidence in its own behalf, and may, if it so desires, be represented by counsel. As promptly as possible after the hearing, the Appeal Panel shall, by the vote of a majority of its members, affirm or reverse the suspension or modify the terms thereof. The appellant shall be notified in writing of the Appeal Panel\u2019s decision; and if the decision shall have been to affirm or modify the suspension, the appellant shall be given a written statement of the grounds therefor. (C). Any decision by the Appeal Panel to affirm or modify a suspension shall be reviewable by the Board on its own motion or on written demand by the appellant filed with Commodity Stream, LLC within three Business Days after receipt of notice of the Appeal Panel\u2019s decision. The Board may afford the appellant a further opportunity to be heard or to present evidence. The appellant shall be notified in writing of the decision of the Board; and if the decision shall have been to affirm or modify the suspension, the appellant shall be given a written statement of the grounds therefor. (D). The filing of an appeal pursuant to this Rule shall not impair the validity or stay the effect of the suspension appealed from. The reversal or modification of a suspension shall not invalidate any acts of Commodity Stream, LLC taken pursuant to such suspension prior to such reversal or modification, and the rights of any person which may arise out of any such acts shall not be affected by such reversal or modification. (E). A record shall be kept of any hearing held pursuant hereto. The cost of the transcript may, in the discretion of the body holding the hearing, be charged in whole or in part to the suspended Clearing Participant in the event that the suspension is finally affirmed.","title":"602. Right of Appeal"},{"location":"suspensions/#603-sanctions-from-disciplinary-proceedings","text":"(A). Commodity Stream, LLC may censure, suspend, expel or limit the activities, functions or operations of, and/or impose a fine on (each a \u201csanction\u201d), a Clearing Participant for (i) a violation of the Rules or its agreements with Commodity Stream, LLC or the Exchange, (ii) any neglect or refusal by such Clearing Participant to comply with any applicable order or direction of Commodity Stream, LLC or the Exchange, (iii) any error, delay or other conduct that materially and adversely affects the operations of Commodity Stream, LLC or Commodity Stream, LLC Exchange, (iv) a violation of the rules of the Exchange, or (v) a failure to provide adequate personnel or facilities, where applicable, for its transactions with Commodity Stream, LLC. (B). Commodity Stream, LLC shall provide prompt notice to the CFTC/and or any other governance Board of any action taken in accordance with this Rule 603.","title":"603. Sanctions from Disciplinary Proceedings"},{"location":"suspensions/#604-procedures-for-disciplinary-proceedings","text":"(A). Before any sanction is imposed pursuant to Rule 603, Commodity Stream, LLC shall furnish the person against whom the sanction is sought to be imposed (\u201cRespondent\u201d) with a concise written statement of the charges against the Respondent. The Respondent shall have ten Business Days after the service of such statement to file with Commodity Stream, LLC a written answer thereto. The answer shall admit or deny each allegation contained in the statement of charges and may also contain any defense which the Respondent wishes to submit. Allegations contained in the statement of charges which are not denied in the answer shall be deemed to have been admitted, and any defense not raised in the answer shall be deemed to have been waived. If an answer is not filed within the time prescribed above or any extension thereof granted pursuant to paragraph (d) of this Rule, the allegations contained in the statement of charges shall be deemed to have been admitted, and the sanction specified in the final request shall be imposed without further proceedings and the Respondent shall be notified thereof in writing. If an answer is timely filed, Commodity Stream, LLC shall (unless the Respondent and Commodity Stream, LLC shall have stipulated to the imposition of an agreed sanction) schedule a hearing before the Disciplinary Panel. The Respondent shall be given not less than three Business Days advance notice of the place and time of such hearing. At the hearing, the Respondent shall be afforded the opportunity to be heard and to present evidence in its behalf and may be represented by counsel. A record of the hearing shall be prepared and the cost of the transcript may, in the discretion of the Disciplinary Panel, be charged in whole or in part to the Respondent in the event any sanction is imposed on the Respondent. As soon as practicable after the conclusion of the hearing, the Disciplinary Panel shall furnish the Respondent and the Board with a written statement of its decision. If the decision shall have been to impose a disciplinary sanction, the written statement shall set forth (i) any act or practice in which the Respondent has been found to have engaged, or which the Respondent has been found to have omitted; (ii) the specific provisions of the Rules which any such act, practice or omission has been deemed to violate; and (iii) the sanction imposed and the reasons therefor. (B). In the event that (i) the Disciplinary Panel censures, fines, suspends, expels or limits the activities, functions or operations of a Respondent, or (ii) determines not to impose any disciplinary measures on a Respondent, the Respondent, in the case of (i) above, or the President, in the case of (ii) above, may apply for review to the Board, by written motion filed with Commodity Stream, LLC within five Business Days after issuance of the Disciplinary Panel\u2019s written statement of its decision. (C). The granting of any such motion shall be within the discretion of the Board. In addition, the Board may determine to review any such action by the Disciplinary Panel on its own motion. Review by the Board shall be on the basis of the written record of the proceedings in which the sanction was imposed, but the Board may, in its discretion, afford the Respondent a further opportunity to be heard or to present evidence. A record shall be kept of any such further proceedings. Based upon such review, the Board may affirm, reverse or modify, in whole or in part, the decision of the Disciplinary Panel. The Respondent shall be notified in writing of the decision of the Board and if the decision shall have been to affirm or modify the imposition of any disciplinary sanction, the Respondent shall be given a written statement setting forth (i) any act or practice in which the Respondent has been found to have engaged, or which the Respondent has been found to have omitted; (ii) the Rules which any such act, practice or omission has been deemed to violate; and (iii) the sanction imposed and the reasons therefor. (D). Any time limit set forth in this Rule may be extended by the body having jurisdiction over the matter in respect of which the time limit is imposed. (E). Any action taken by the Disciplinary Panel hereunder shall be deemed to be final upon (i) expiration of the time provided for the filing of a motion for review, or any extension thereof granted pursuant to paragraph (d) hereof; or (ii) if a motion for review is timely filed, when the Respondent is notified of the denial of the motion or the decision of the Board on review, as the case may be; or (iii) if the Board shall determine on its own motion to review the action by the Disciplinary Panel, when the Respondent is notified of the decision of the Board on review. (F). The summary suspension of a Clearing Participant pursuant to Rule 601 shall not be deemed to be a \u201csanction\u201d within the meaning of this Rule, and the provisions of this Rule shall be inapplicable to any such summary suspension.","title":"604. Procedures for Disciplinary Proceedings"},{"location":"suspensions/#605-discipline-by-other-self-regulatory-organizations","text":"(A). At the discretion of the Clearinghouse, any suspected violation of these Rules may be referred to the enforcement staff of the Exchange. (B). Any inquiry, investigation or disciplinary action resulting from a suspected violation of these Rules may be handled by Clearinghouse personnel, Exchange personnel, or personnel that serve in roles at both the Clearinghouse and the Exchange. (C). Nothing in this Chapter 6 shall affect the right of any Self-Regulatory Organization to discipline its members pursuant to the provisions of its rules for a violation of the Rules of Commodity Stream, LLC. ## 606. Restriction on or Termination of Clearing Privileges. (A). If [x] a Removal Event occurs with respect to a Clearing Participant, or [y]Commodity Stream, LLC determines that the financial or operational condition of a Clearing Participant or one of its affiliates is such that to allow the Clearing Participant to continue its operation as a Clearing Participant could adversely affect Commodity Stream, LLC or cleared markets (whether or not such Clearing Participant continues to meet the required minimum financial requirements, if applicable), Commodity Stream, LLC may: (i) Allow such Clearing Participant (in the case of an Commodity Stream, LLC Clearing Participant handling Customer Accounts) to submit Contracts for clearing solely for its Member Property Account; (ii) Limit or restrict the type of Contracts that may be cleared by such Clearing Participant in any of its Accounts with Commodity Stream, LLC; (iii) Limit or restrict the number of Contracts that are permitted to be maintained by such Clearing Participant in any of its Accounts with Commodity Stream, LLC; (iv) Decline to accept new trades or positions in Contracts for the Accounts of the Clearing Participant; (v) Increase such Clearing Participant\u2019s Margin requirements and/or require such Clearing Participant to deposit the same in cash or Eligible Securities in proportions different than those that are applicable to Clearing Participants generally;","title":"605. Discipline by Other Self-Regulatory Organizations"},{"location":"trade-settlement/","text":"Trade and Settlement \u00b6 401. Submission of Trades \u00b6 (A). Upon matching of a trade effected on or pursuant to the rules of the Exchange, the Exchange shall promptly submit to Commodity Stream, LLC a trade report generated by the electronic trading system of the Exchange. The report shall show for each trade (i) the identity of each Clearing Participant and/or Network Participant, (ii) whether bought or sold, (iii) quantity, (iv) delivery month, (v) the price, (vi) whether for house, Customer, or non- Customer account, and (vii) such other information as may be required by Commodity Stream, LLC. (B). If Commodity Stream, LLC determines that any trade report submitted pursuant to this Rule 401 contains a material error or is otherwise not eligible for clearing by Commodity Stream, LLC, Commodity Stream, LLC may reject such trade and notify the Exchange of such rejection, setting forth the basis of such objection. 402. Clearance and Substitution \u00b6 (a) The submission of a Contract (Smart Contract or a Normal Contract) to Commodity Stream, LLC by or on behalf of the buying and selling Clearing Participants shall constitute a request, by such Clearing Participants, for the clearing of such Contract by Commodity Stream, LLC. Upon the acceptance thereof by Commodity Stream, LLC, which ordinarily shall be deemed to occur upon the receipt of matched trade data from the Exchange, the Contract shall be novated and Commodity Stream, LLC shall be substituted as, and assume the position of, seller to the Clearing Participant buying such Contract and buyer from the Clearing Participant selling such Contract. Upon such substitution, such buying and selling Clearing Participants shall be released from their obligations to each other, and Commodity Stream, LLC shall be deemed to have succeeded to all the rights, and to have assumed all the Obligations, of the Clearing Participants that were party to such Contract, in each case as provided in the Rules. (b) Where an Commodity Stream, LLC Clearing Participant and/or Network Participant acts to clear a Contract made for the account of a Customer, the Commodity Stream, LLC Clearing Participant becomes obligated to Commodity Stream, LLC, and Commodity Stream, LLC becomes obligated to the Commodity Stream, LLC Clearing Participant, with respect to such Contract in the same manner and to the same extent as if the Contract were for the account of the Commodity Stream, LLC Clearing Participant. \u00a9 Notwithstanding the provisions of paragraph (a), a trade shall not be accepted for clearing, and Commodity Stream, LLC shall not be substituted for a given Contract, unless the Margin for such Contract is made available to Commodity Stream, LLC, by or for both Clearing Participants, pursuant to Rule 403. 403. Margin \u00b6 (a) Each Network and Clearing Participant SHALL deposit funds or Collateral in the form of the applicable quantity of the deliverable underlying commodity and/or deliverable asset required to fully collateralize orders pursuant to the contract specifications contained in the Rulebook, including payment of premiums, payment in exchange for delivery or to fulfill delivery obligations, as applicable, prior to submission of such orders to the Exchange. Fund and Collateral transfers made by a Clearing Participant to the Clearinghouse or by the Clearinghouse to a Clearing Participant are irrevocable and unconditional when effected. The Clearing Participant shall be responsible for all fees associated with wires or transfers of Collateral to the Clearinghouse. (b) Subject to the terms and conditions of the Clearinghouse, Clearing Participants may deposit the following as Margin: (1) cash; (2) the underlying commodity; and (3) any other form of Collateral deemed acceptable by the Risk Management Committee upon the Risk Management Committee\u2019s approval of such Collateral as communicated through Clearinghouse notices. The Clearinghouse will value margin Collateral as it deems appropriate. \u00a9 Funds and Collateral must be and remain unencumbered. Except as otherwise provided herein, each Clearing Participant posting funds or Collateral hereby grants to the Clearinghouse a first priority security interest in and unencumbered lien against any Margin, Contracts, positions and other funds, property and any other Collateral deposited with the Clearinghouse by the Clearing Participant, including without limitation such Clearing Participant\u2019s Member Property Accounts, the Customer Accounts of such Clearing Participant\u2019s Customers, and all securities entitlements held therein. A Clearing Participant shall execute any documents required by Commodity Stream, LLC to create, perfect and enforce such lien. Each Clearing Participant hereby agrees that with respect to any funds or Collateral which is or may be credited to the Clearing Participant\u2019s Member Property Account or Customer Account, as applicable, the Clearinghouse shall have control pursuant to Section 9-106(a) and 8-106(e) of the UCC and a perfected security interest pursuant to Section 9-314(a) of the UCC. (d) Commodity Stream, LLC may assign, pledge, repledge or otherwise create a lien on or security interest in, and enter into repurchase agreements involving, Margin, Contracts, positions and other funds, property and any other Collateral deposited with the Clearinghouse by the Clearing Participant, as permitted by CFTC Regulations, held in or for such Clearing Participant\u2019s Member Property Accounts or the Customer Accounts of such Clearing Participant\u2019s Customers to secure the repayment of funds that may be borrowed by Commodity Stream, LLC. (e) Clearing Participant must transfer the funds and Collateral to the Clearinghouse which will hold funds and Collateral on behalf of the Clearing Participant. Commodity Stream, LLC will credit to the Clearing Participant the funds and Collateral that such Clearing Participant deposits. Funds and Collateral shall be held by the Clearinghouse until a Clearing Participant submits a withdrawal notification, unless otherwise stipulated by these Rules. Commodity Stream, LLC will not be responsible for any diminution in value of funds or Collateral that a Clearing Participant deposits with the Clearinghouse, except, in the case of cash, the diminution of value is as a direct result of investment activity of the Clearinghouse, such activity having been conducted in full compliance with CFTC Regulations. Any fluctuation in markets is the risk of each Clearing Participant. Any interest earned on Clearing Participant funds or Collateral may be retained by the Clearinghouse. (f) If a Clearing Participant is in Default, Commodity Stream, LLC may foreclose on and sell any of the Margin deposited by such Clearing Participant without notice. (g) Commodity Stream, LLC shall be empowered to invest and reinvest all or part of the funds constituting Margin. Such investments shall be for the account and risk of Commodity Stream, LLC, and any income and gains on such investments and interest on such deposits shall belong to Commodity Stream, LLC and may be withdrawn from the account holding the Margin and deposited with the general funds of Commodity Stream, LLC. 404. Offset and Settlement \u00b6 (a) Where, as the result of novation under Rule 402, a Clearing Participant has bought and sold a Contract on or subject to the Rules of the Exchange with the same expiration, or otherwise deemed equivalent by the Clearinghouse, the purchase and sale will be offset by Commodity Stream, LLC through the timely submission of instructions by the Clearing Participant containing such information as Commodity Stream, LLC may require in accordance with its procedures. A Clearing Participant shall be required to pay the loss or entitled to collect the profit, as the case may be, upon such offsetting transactions, and shall have no further rights or be under any further obligation with respect thereto. For purposes of this Rule 404, the first Contracts made shall be deemed the first Contracts offset. (b) Contracts made and designated by the Network or Clearing Participant as for the Network and/or Clearing Participant\u2019s Customer Account shall not be offset under this Rule 405 against Contracts designated by the Clearing Participant as for the Clearing Participant\u2019s own Member Property Account. 405. Approved Depository Institutions \u00b6 A bank, trust company or other depository that meets such financial and other requirements of Commodity Stream, LLC may be designated by Commodity Stream, LLC as an Approved Depository Institution. 406. Statement of Trades and Contracts \u00b6 Commodity Stream, LLC shall in the manner and at the time that it determines from time to time make available to a Clearing Participant an accounting of trades and Contracts for each Business Day on which such Clearing Participant has trades to be cleared or Contracts open with Commodity Stream, LLC. Any amounts the Clearing Participant has posted to Commodity Stream, LLC under Rule 403 shall be indicated on this statement 409. Settlement Prices \u00b6 As used in the Rules, the term \u201cSettlement Price\u201d means the settlement price for a Contract for which positions remain open, as determined, intra-day and at the close of regular trading hours, by the Exchange in accordance with its rules, except in the case of manifest error or where Commodity Stream, LLC believes that such settlement price does not reasonably reflect the value or price of the Contract, in which case Commodity Stream, LLC, using its best efforts to consult with the Exchange, shall determine the official Settlement Price; provided, that Commodity Stream, LLC shall in such circumstances promptly notify the Exchange and Clearing Participants, and the reasons for that determination and the basis for the Settlement Price determined by Commodity Stream, LLC shall be published in a notice to the Exchange and Clearing Participants. 410. Delivery \u00b6 After trading ceases for a Smart Contract and/or Normal Contract that is physically settled, the Clearinghouse shall transfer the underlying to the Account of the Clearing Participant that is required to accept delivery, from the Account of the Clearing Participant obligated to make delivery, such full collateralization having been transferred to the Clearinghouse\u2019s custody at the inception of the trade. Deliveries will occur on the Clearinghouse\u2019s books and records unless otherwise specified in the Exchange contract specifications. 411. Reporting \u00b6 Network and Clearing Participants shall make such reports in respect of trades, Smart Contracts, Normal Contracts settlements and deliveries as may be as prescribed by Commodity Stream, LLC. copyright \u00a9 2021 Commodity Stream, LLC - All Rights Reserved CC-BY-NC-ND-2.5","title":"Settlement"},{"location":"trade-settlement/#trade-and-settlement","text":"","title":"Trade and Settlement"},{"location":"trade-settlement/#401-submission-of-trades","text":"(A). Upon matching of a trade effected on or pursuant to the rules of the Exchange, the Exchange shall promptly submit to Commodity Stream, LLC a trade report generated by the electronic trading system of the Exchange. The report shall show for each trade (i) the identity of each Clearing Participant and/or Network Participant, (ii) whether bought or sold, (iii) quantity, (iv) delivery month, (v) the price, (vi) whether for house, Customer, or non- Customer account, and (vii) such other information as may be required by Commodity Stream, LLC. (B). If Commodity Stream, LLC determines that any trade report submitted pursuant to this Rule 401 contains a material error or is otherwise not eligible for clearing by Commodity Stream, LLC, Commodity Stream, LLC may reject such trade and notify the Exchange of such rejection, setting forth the basis of such objection.","title":"401. Submission of Trades"},{"location":"trade-settlement/#402-clearance-and-substitution","text":"(a) The submission of a Contract (Smart Contract or a Normal Contract) to Commodity Stream, LLC by or on behalf of the buying and selling Clearing Participants shall constitute a request, by such Clearing Participants, for the clearing of such Contract by Commodity Stream, LLC. Upon the acceptance thereof by Commodity Stream, LLC, which ordinarily shall be deemed to occur upon the receipt of matched trade data from the Exchange, the Contract shall be novated and Commodity Stream, LLC shall be substituted as, and assume the position of, seller to the Clearing Participant buying such Contract and buyer from the Clearing Participant selling such Contract. Upon such substitution, such buying and selling Clearing Participants shall be released from their obligations to each other, and Commodity Stream, LLC shall be deemed to have succeeded to all the rights, and to have assumed all the Obligations, of the Clearing Participants that were party to such Contract, in each case as provided in the Rules. (b) Where an Commodity Stream, LLC Clearing Participant and/or Network Participant acts to clear a Contract made for the account of a Customer, the Commodity Stream, LLC Clearing Participant becomes obligated to Commodity Stream, LLC, and Commodity Stream, LLC becomes obligated to the Commodity Stream, LLC Clearing Participant, with respect to such Contract in the same manner and to the same extent as if the Contract were for the account of the Commodity Stream, LLC Clearing Participant. \u00a9 Notwithstanding the provisions of paragraph (a), a trade shall not be accepted for clearing, and Commodity Stream, LLC shall not be substituted for a given Contract, unless the Margin for such Contract is made available to Commodity Stream, LLC, by or for both Clearing Participants, pursuant to Rule 403.","title":"402. Clearance and Substitution"},{"location":"trade-settlement/#403-margin","text":"(a) Each Network and Clearing Participant SHALL deposit funds or Collateral in the form of the applicable quantity of the deliverable underlying commodity and/or deliverable asset required to fully collateralize orders pursuant to the contract specifications contained in the Rulebook, including payment of premiums, payment in exchange for delivery or to fulfill delivery obligations, as applicable, prior to submission of such orders to the Exchange. Fund and Collateral transfers made by a Clearing Participant to the Clearinghouse or by the Clearinghouse to a Clearing Participant are irrevocable and unconditional when effected. The Clearing Participant shall be responsible for all fees associated with wires or transfers of Collateral to the Clearinghouse. (b) Subject to the terms and conditions of the Clearinghouse, Clearing Participants may deposit the following as Margin: (1) cash; (2) the underlying commodity; and (3) any other form of Collateral deemed acceptable by the Risk Management Committee upon the Risk Management Committee\u2019s approval of such Collateral as communicated through Clearinghouse notices. The Clearinghouse will value margin Collateral as it deems appropriate. \u00a9 Funds and Collateral must be and remain unencumbered. Except as otherwise provided herein, each Clearing Participant posting funds or Collateral hereby grants to the Clearinghouse a first priority security interest in and unencumbered lien against any Margin, Contracts, positions and other funds, property and any other Collateral deposited with the Clearinghouse by the Clearing Participant, including without limitation such Clearing Participant\u2019s Member Property Accounts, the Customer Accounts of such Clearing Participant\u2019s Customers, and all securities entitlements held therein. A Clearing Participant shall execute any documents required by Commodity Stream, LLC to create, perfect and enforce such lien. Each Clearing Participant hereby agrees that with respect to any funds or Collateral which is or may be credited to the Clearing Participant\u2019s Member Property Account or Customer Account, as applicable, the Clearinghouse shall have control pursuant to Section 9-106(a) and 8-106(e) of the UCC and a perfected security interest pursuant to Section 9-314(a) of the UCC. (d) Commodity Stream, LLC may assign, pledge, repledge or otherwise create a lien on or security interest in, and enter into repurchase agreements involving, Margin, Contracts, positions and other funds, property and any other Collateral deposited with the Clearinghouse by the Clearing Participant, as permitted by CFTC Regulations, held in or for such Clearing Participant\u2019s Member Property Accounts or the Customer Accounts of such Clearing Participant\u2019s Customers to secure the repayment of funds that may be borrowed by Commodity Stream, LLC. (e) Clearing Participant must transfer the funds and Collateral to the Clearinghouse which will hold funds and Collateral on behalf of the Clearing Participant. Commodity Stream, LLC will credit to the Clearing Participant the funds and Collateral that such Clearing Participant deposits. Funds and Collateral shall be held by the Clearinghouse until a Clearing Participant submits a withdrawal notification, unless otherwise stipulated by these Rules. Commodity Stream, LLC will not be responsible for any diminution in value of funds or Collateral that a Clearing Participant deposits with the Clearinghouse, except, in the case of cash, the diminution of value is as a direct result of investment activity of the Clearinghouse, such activity having been conducted in full compliance with CFTC Regulations. Any fluctuation in markets is the risk of each Clearing Participant. Any interest earned on Clearing Participant funds or Collateral may be retained by the Clearinghouse. (f) If a Clearing Participant is in Default, Commodity Stream, LLC may foreclose on and sell any of the Margin deposited by such Clearing Participant without notice. (g) Commodity Stream, LLC shall be empowered to invest and reinvest all or part of the funds constituting Margin. Such investments shall be for the account and risk of Commodity Stream, LLC, and any income and gains on such investments and interest on such deposits shall belong to Commodity Stream, LLC and may be withdrawn from the account holding the Margin and deposited with the general funds of Commodity Stream, LLC.","title":"403. Margin"},{"location":"trade-settlement/#404-offset-and-settlement","text":"(a) Where, as the result of novation under Rule 402, a Clearing Participant has bought and sold a Contract on or subject to the Rules of the Exchange with the same expiration, or otherwise deemed equivalent by the Clearinghouse, the purchase and sale will be offset by Commodity Stream, LLC through the timely submission of instructions by the Clearing Participant containing such information as Commodity Stream, LLC may require in accordance with its procedures. A Clearing Participant shall be required to pay the loss or entitled to collect the profit, as the case may be, upon such offsetting transactions, and shall have no further rights or be under any further obligation with respect thereto. For purposes of this Rule 404, the first Contracts made shall be deemed the first Contracts offset. (b) Contracts made and designated by the Network or Clearing Participant as for the Network and/or Clearing Participant\u2019s Customer Account shall not be offset under this Rule 405 against Contracts designated by the Clearing Participant as for the Clearing Participant\u2019s own Member Property Account.","title":"404. Offset and Settlement"},{"location":"trade-settlement/#405-approved-depository-institutions","text":"A bank, trust company or other depository that meets such financial and other requirements of Commodity Stream, LLC may be designated by Commodity Stream, LLC as an Approved Depository Institution.","title":"405. Approved Depository Institutions"},{"location":"trade-settlement/#406-statement-of-trades-and-contracts","text":"Commodity Stream, LLC shall in the manner and at the time that it determines from time to time make available to a Clearing Participant an accounting of trades and Contracts for each Business Day on which such Clearing Participant has trades to be cleared or Contracts open with Commodity Stream, LLC. Any amounts the Clearing Participant has posted to Commodity Stream, LLC under Rule 403 shall be indicated on this statement","title":"406. Statement of Trades and Contracts"},{"location":"trade-settlement/#409-settlement-prices","text":"As used in the Rules, the term \u201cSettlement Price\u201d means the settlement price for a Contract for which positions remain open, as determined, intra-day and at the close of regular trading hours, by the Exchange in accordance with its rules, except in the case of manifest error or where Commodity Stream, LLC believes that such settlement price does not reasonably reflect the value or price of the Contract, in which case Commodity Stream, LLC, using its best efforts to consult with the Exchange, shall determine the official Settlement Price; provided, that Commodity Stream, LLC shall in such circumstances promptly notify the Exchange and Clearing Participants, and the reasons for that determination and the basis for the Settlement Price determined by Commodity Stream, LLC shall be published in a notice to the Exchange and Clearing Participants.","title":"409. Settlement Prices"},{"location":"trade-settlement/#410-delivery","text":"After trading ceases for a Smart Contract and/or Normal Contract that is physically settled, the Clearinghouse shall transfer the underlying to the Account of the Clearing Participant that is required to accept delivery, from the Account of the Clearing Participant obligated to make delivery, such full collateralization having been transferred to the Clearinghouse\u2019s custody at the inception of the trade. Deliveries will occur on the Clearinghouse\u2019s books and records unless otherwise specified in the Exchange contract specifications.","title":"410. Delivery"},{"location":"trade-settlement/#411-reporting","text":"Network and Clearing Participants shall make such reports in respect of trades, Smart Contracts, Normal Contracts settlements and deliveries as may be as prescribed by Commodity Stream, LLC. copyright \u00a9 2021 Commodity Stream, LLC - All Rights Reserved CC-BY-NC-ND-2.5","title":"411. Reporting"},{"location":"SushiSwap/","text":"SushiSwap User API \u00b6 Documentation for Order Book API Documentation for API Endpoints \u00b6 All URIs are relative to https://api.sushirelay.com Class Method HTTP request Description DefaultApi apiV1OrdersGet GET /api/v1/orders Get existing orders. DefaultApi apiV1OrdersPost POST /api/v1/orders Create a new order. DefaultApi apiV1OrdersUIDDelete DELETE /api/v1/orders/{UID} Cancels order by marking it invalid with a timestamp. DefaultApi apiV1OrdersUIDGet GET /api/v1/orders/{UID} Get existing order from UID. DefaultApi apiV1SolvableOrdersGet GET /api/v1/solvable_orders Get solvable orders. DefaultApi apiV1TokensSellTokenFeeGet GET /api/v1/tokens/{sellToken}/fee The fee that is charged for placing an order. The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service. DefaultApi apiV1TradesGet GET /api/v1/trades Get existing Trades. Documentation for Models \u00b6 FeeInformation Order OrderCancellation OrderCancellationError OrderCreation OrderMetaData OrderPostError OrderType Trade Documentation for Authorization \u00b6 All endpoints do not require authorization.","title":"Overview"},{"location":"SushiSwap/#sushiswap-user-api","text":"Documentation for Order Book API","title":"SushiSwap User API"},{"location":"SushiSwap/#documentation-for-api-endpoints","text":"All URIs are relative to https://api.sushirelay.com Class Method HTTP request Description DefaultApi apiV1OrdersGet GET /api/v1/orders Get existing orders. DefaultApi apiV1OrdersPost POST /api/v1/orders Create a new order. DefaultApi apiV1OrdersUIDDelete DELETE /api/v1/orders/{UID} Cancels order by marking it invalid with a timestamp. DefaultApi apiV1OrdersUIDGet GET /api/v1/orders/{UID} Get existing order from UID. DefaultApi apiV1SolvableOrdersGet GET /api/v1/solvable_orders Get solvable orders. DefaultApi apiV1TokensSellTokenFeeGet GET /api/v1/tokens/{sellToken}/fee The fee that is charged for placing an order. The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service. DefaultApi apiV1TradesGet GET /api/v1/trades Get existing Trades.","title":"Documentation for API Endpoints"},{"location":"SushiSwap/#documentation-for-models","text":"FeeInformation Order OrderCancellation OrderCancellationError OrderCreation OrderMetaData OrderPostError OrderType Trade","title":"Documentation for Models"},{"location":"SushiSwap/#documentation-for-authorization","text":"All endpoints do not require authorization.","title":"Documentation for Authorization"},{"location":"SushiSwap/FeeInformation/","text":"FeeInformation \u00b6 Properties \u00b6 Name Type Description Notes expirationDate String Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. [optional] [default to null] minimalFee String Amount of a token. uint256 encoded in decimal. [optional] [default to null] feeRatio BigDecimal The fee ratio charged on a sellAmount. Denoted in basis points [optional] [default to null]","title":"Fee Information"},{"location":"SushiSwap/FeeInformation/#feeinformation","text":"","title":"FeeInformation"},{"location":"SushiSwap/FeeInformation/#properties","text":"Name Type Description Notes expirationDate String Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. [optional] [default to null] minimalFee String Amount of a token. uint256 encoded in decimal. [optional] [default to null] feeRatio BigDecimal The fee ratio charged on a sellAmount. Denoted in basis points [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Order/","text":"Order \u00b6 Properties \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null] creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 5256 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Orders"},{"location":"SushiSwap/Order/#order","text":"","title":"Order"},{"location":"SushiSwap/Order/#properties","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null] creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 5256 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderCancellation/","text":"OrderCancellation \u00b6 Properties \u00b6 Name Type Description Notes signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Order Cancellation"},{"location":"SushiSwap/OrderCancellation/#ordercancellation","text":"","title":"OrderCancellation"},{"location":"SushiSwap/OrderCancellation/#properties","text":"Name Type Description Notes signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderCreation/","text":"OrderCreation \u00b6 Properties \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Order Creation"},{"location":"SushiSwap/OrderCreation/#ordercreation","text":"","title":"OrderCreation"},{"location":"SushiSwap/OrderCreation/#properties","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature oas_any_type_not_mapped 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderMetaData/","text":"OrderMetaData \u00b6 Properties \u00b6 Name Type Description Notes creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Order Data"},{"location":"SushiSwap/OrderMetaData/#ordermetadata","text":"","title":"OrderMetaData"},{"location":"SushiSwap/OrderMetaData/#properties","text":"Name Type Description Notes creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderPostError/","text":"OrderPostError \u00b6 Properties \u00b6 Name Type Description Notes errorType String [optional] [default to null] description String [optional] [default to null]","title":"Order Errors"},{"location":"SushiSwap/OrderPostError/#orderposterror","text":"","title":"OrderPostError"},{"location":"SushiSwap/OrderPostError/#properties","text":"Name Type Description Notes errorType String [optional] [default to null] description String [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/OrderType/","text":"OrderType \u00b6 Properties \u00b6 Name Type Description Notes","title":"Order Types"},{"location":"SushiSwap/OrderType/#ordertype","text":"","title":"OrderType"},{"location":"SushiSwap/OrderType/#properties","text":"Name Type Description Notes","title":"Properties"},{"location":"SushiSwap/Trade/","text":"Trade \u00b6 Properties \u00b6 Name Type Description Notes blockNumber Integer Block in which trade occurred. [optional] [default to null] logIndex Integer Index in which transaction was included in block. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] sellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null]","title":"Trade"},{"location":"SushiSwap/Trade/#trade","text":"","title":"Trade"},{"location":"SushiSwap/Trade/#properties","text":"Name Type Description Notes blockNumber Integer Block in which trade occurred. [optional] [default to null] logIndex Integer Index in which transaction was included in block. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] sellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Apis/","text":"API Overview \u00b6 {% include list.liquid all=true %} All URIs are relative to https://api.sushirelay.com Method HTTP request Description apiV1OrdersGet GET /api/v1/orders Get existing orders. apiV1OrdersPost POST /api/v1/orders Create a new order. apiV1OrdersUIDDelete DELETE /api/v1/orders/{UID} Cancels order by marking it invalid with a timestamp. apiV1OrdersUIDGet GET /api/v1/orders/{UID} Get existing order from UID. apiV1SolvableOrdersGet GET /api/v1/solvable_orders Get solvable orders. apiV1TokensSellTokenFeeGet GET /api/v1/tokens/{sellToken}/fee apiV1TradesGet GET /api/v1/trades Get existing Trades. apiV1OrdersGet \u00b6 List apiV1OrdersGet(owner, sellToken, buyToken, includeFullyExecuted, includeInvalidated, includeInsufficientBalance, minValidTo) Get existing orders. By default all currently valid orders are returned. The set of returned orders can be reduced by setting owner, sell token, buy token filters. It can be increased by disabling different order validity exclusion criteria. Parameters \u00b6 Name Type Description Notes owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] includeFullyExecuted Boolean Should fully executed orders be returned? [optional] [default to false] includeInvalidated Boolean Should orders that have been invalidated in the smart contract be returned? [optional] [default to false] includeInsufficientBalance Boolean Should fill or kill orders that are not sufficiently funded be included? [optional] [default to false] minValidTo Integer Minimum valid_to timestamp for included orders. The default is the current time. [optional] [default to null] Return type \u00b6 List Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json apiV1OrdersPost \u00b6 String apiV1OrdersPost(body) Create a new order. Parameters \u00b6 Name Type Description Notes body OrderCreation The order to create. Return type \u00b6 String Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : application/json apiV1OrdersUIDDelete \u00b6 apiV1OrdersUIDDelete(uID, body) Cancels order by marking it invalid with a timestamp. The successful deletion might not prevent solvers from settling the order Authentication must be provided by signing the following message: Parameters \u00b6 Name Type Description Notes uID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [default to null] body OrderCancellation Signed OrderCancellation Return type \u00b6 null (empty response body) Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : application/json Accept : Not defined apiV1OrdersUIDGet \u00b6 List apiV1OrdersUIDGet(uID) Get existing order from UID. Parameters \u00b6 Name Type Description Notes uID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [default to null] Return type \u00b6 List Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json apiV1SolvableOrdersGet \u00b6 List apiV1SolvableOrdersGet() Get solvable orders. The set of orders that solvers should be solving right now. These orders are determined to be valid at the time of the request. Parameters \u00b6 This endpoint does not need any parameter. Return type \u00b6 List Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json apiV1TokensSellTokenFeeGet \u00b6 FeeInformation apiV1TokensSellTokenFeeGet(sellToken) The fee that is charged for placing an order. The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service. Parameters \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [default to null] Return type \u00b6 FeeInformation Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json apiV1TradesGet \u00b6 List apiV1TradesGet(owner, orderUid) Get existing Trades. By default all trades are returned. Queries can be refined by specifiying owner or order_uid. Parameters \u00b6 Name Type Description Notes owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] Return type \u00b6 List Authorization \u00b6 No authorization required HTTP request headers \u00b6 Content-Type : Not defined Accept : application/json","title":"API"},{"location":"SushiSwap/Apis/#api-overview","text":"{% include list.liquid all=true %} All URIs are relative to https://api.sushirelay.com Method HTTP request Description apiV1OrdersGet GET /api/v1/orders Get existing orders. apiV1OrdersPost POST /api/v1/orders Create a new order. apiV1OrdersUIDDelete DELETE /api/v1/orders/{UID} Cancels order by marking it invalid with a timestamp. apiV1OrdersUIDGet GET /api/v1/orders/{UID} Get existing order from UID. apiV1SolvableOrdersGet GET /api/v1/solvable_orders Get solvable orders. apiV1TokensSellTokenFeeGet GET /api/v1/tokens/{sellToken}/fee apiV1TradesGet GET /api/v1/trades Get existing Trades.","title":"API Overview"},{"location":"SushiSwap/Apis/#apiv1ordersget","text":"List apiV1OrdersGet(owner, sellToken, buyToken, includeFullyExecuted, includeInvalidated, includeInsufficientBalance, minValidTo) Get existing orders. By default all currently valid orders are returned. The set of returned orders can be reduced by setting owner, sell token, buy token filters. It can be increased by disabling different order validity exclusion criteria.","title":"apiV1OrdersGet"},{"location":"SushiSwap/Apis/#parameters","text":"Name Type Description Notes owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] includeFullyExecuted Boolean Should fully executed orders be returned? [optional] [default to false] includeInvalidated Boolean Should orders that have been invalidated in the smart contract be returned? [optional] [default to false] includeInsufficientBalance Boolean Should fill or kill orders that are not sufficiently funded be included? [optional] [default to false] minValidTo Integer Minimum valid_to timestamp for included orders. The default is the current time. [optional] [default to null]","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type","text":"List","title":"Return type"},{"location":"SushiSwap/Apis/#authorization","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1orderspost","text":"String apiV1OrdersPost(body) Create a new order.","title":"apiV1OrdersPost"},{"location":"SushiSwap/Apis/#parameters_1","text":"Name Type Description Notes body OrderCreation The order to create.","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_1","text":"String","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_1","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_1","text":"Content-Type : application/json Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1ordersuiddelete","text":"apiV1OrdersUIDDelete(uID, body) Cancels order by marking it invalid with a timestamp. The successful deletion might not prevent solvers from settling the order Authentication must be provided by signing the following message:","title":"apiV1OrdersUIDDelete"},{"location":"SushiSwap/Apis/#parameters_2","text":"Name Type Description Notes uID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [default to null] body OrderCancellation Signed OrderCancellation","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_2","text":"null (empty response body)","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_2","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_2","text":"Content-Type : application/json Accept : Not defined","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1ordersuidget","text":"List apiV1OrdersUIDGet(uID) Get existing order from UID.","title":"apiV1OrdersUIDGet"},{"location":"SushiSwap/Apis/#parameters_3","text":"Name Type Description Notes uID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [default to null]","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_3","text":"List","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_3","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_3","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1solvableordersget","text":"List apiV1SolvableOrdersGet() Get solvable orders. The set of orders that solvers should be solving right now. These orders are determined to be valid at the time of the request.","title":"apiV1SolvableOrdersGet"},{"location":"SushiSwap/Apis/#parameters_4","text":"This endpoint does not need any parameter.","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_4","text":"List","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_4","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_4","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1tokensselltokenfeeget","text":"FeeInformation apiV1TokensSellTokenFeeGet(sellToken) The fee that is charged for placing an order. The fee is described by a minimum fee - in order to cover the gas costs for onchain settling - and a feeRatio charged to the users for using the service.","title":"apiV1TokensSellTokenFeeGet"},{"location":"SushiSwap/Apis/#parameters_5","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [default to null]","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_5","text":"FeeInformation","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_5","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_5","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Apis/#apiv1tradesget","text":"List apiV1TradesGet(owner, orderUid) Get existing Trades. By default all trades are returned. Queries can be refined by specifiying owner or order_uid.","title":"apiV1TradesGet"},{"location":"SushiSwap/Apis/#parameters_6","text":"Name Type Description Notes owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null]","title":"Parameters"},{"location":"SushiSwap/Apis/#return-type_6","text":"List","title":"Return type"},{"location":"SushiSwap/Apis/#authorization_6","text":"No authorization required","title":"Authorization"},{"location":"SushiSwap/Apis/#http-request-headers_6","text":"Content-Type : Not defined Accept : application/json","title":"HTTP request headers"},{"location":"SushiSwap/Models/FeeInformation/","text":"FeeInformation \u00b6 Properties \u00b6 Name Type Description Notes expirationDate String Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. [optional] [default to null] minimalFee String Amount of a token. uint256 encoded in decimal. [optional] [default to null] feeRatio BigDecimal The fee ratio charged on a sellAmount. Denoted in basis points [optional] [default to null]","title":"Fee Information"},{"location":"SushiSwap/Models/FeeInformation/#feeinformation","text":"","title":"FeeInformation"},{"location":"SushiSwap/Models/FeeInformation/#properties","text":"Name Type Description Notes expirationDate String Expiration date of the offered fee. Order service might not accept the fee after this expiration date. Encoded as ISO 8601 UTC. [optional] [default to null] minimalFee String Amount of a token. uint256 encoded in decimal. [optional] [default to null] feeRatio BigDecimal The fee ratio charged on a sellAmount. Denoted in basis points [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/Order/","text":"Order \u00b6 Properties \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null] creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Order"},{"location":"SushiSwap/Models/Order/#order","text":"","title":"Order"},{"location":"SushiSwap/Models/Order/#properties","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null] creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderCancellation/","text":"OrderCancellation \u00b6 Properties \u00b6 Name Type Description Notes signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"OrderCancellation"},{"location":"SushiSwap/Models/OrderCancellation/#ordercancellation","text":"","title":"OrderCancellation"},{"location":"SushiSwap/Models/OrderCancellation/#properties","text":"Name Type Description Notes signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderCreation/","text":"OrderCreation \u00b6 Properties \u00b6 Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"OrderCreation"},{"location":"SushiSwap/Models/OrderCreation/#ordercreation","text":"","title":"OrderCreation"},{"location":"SushiSwap/Models/OrderCreation/#properties","text":"Name Type Description Notes sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] validTo Integer Unix timestamp until the order is valid. uint32. [optional] [default to null] appData Integer Arbitrary identifier sent along with the order. Could be used to track the interface or other meta-aspects of the order. uint32 encoded [optional] [default to null] feeAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] kind OrderType [optional] [default to null] partiallyFillable Boolean Is this a fill-or-kill order or a partially fillable order? [optional] [default to null] Signature Object 65 bytes encoded as hex with `0x` prefix. r + s + v from the spec. [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderMetaData/","text":"OrderMetaData \u00b6 Properties \u00b6 Name Type Description Notes creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"OrderMetaData"},{"location":"SushiSwap/Models/OrderMetaData/#ordermetadata","text":"","title":"OrderMetaData"},{"location":"SushiSwap/Models/OrderMetaData/#properties","text":"Name Type Description Notes creationTime String Creation time of the order. Encoded as ISO 8601 UTC. [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] UID String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] availableBalance String Amount of a token. uint256 encoded in decimal. [optional] [default to null] executedSellAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedSellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] executedBuyAmount String A big unsigned integer encoded in decimal. [optional] [default to null] executedFeeAmount String A big unsigned integer encoded in decimal. [optional] [default to null] invalidated Boolean Has this order been invalidated? [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderPostError/","text":"OrderPostError \u00b6 Properties \u00b6 Name Type Description Notes errorType String [optional] [default to null] description String [optional] [default to null]","title":"OrderPostError"},{"location":"SushiSwap/Models/OrderPostError/#orderposterror","text":"","title":"OrderPostError"},{"location":"SushiSwap/Models/OrderPostError/#properties","text":"Name Type Description Notes errorType String [optional] [default to null] description String [optional] [default to null]","title":"Properties"},{"location":"SushiSwap/Models/OrderType/","text":"OrderType \u00b6 Properties \u00b6 Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"OrderType"},{"location":"SushiSwap/Models/OrderType/#ordertype","text":"","title":"OrderType"},{"location":"SushiSwap/Models/OrderType/#properties","text":"Name Type Description Notes [Back to Model list] [Back to API list] [Back to README]","title":"Properties"},{"location":"SushiSwap/Models/Trade/","text":"Trade \u00b6 Properties \u00b6 Name Type Description Notes blockNumber Integer Block in which trade occurred. [optional] [default to null] logIndex Integer Index in which transaction was included in block. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] sellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null]","title":"Trade"},{"location":"SushiSwap/Models/Trade/#trade","text":"","title":"Trade"},{"location":"SushiSwap/Models/Trade/#properties","text":"Name Type Description Notes blockNumber Integer Block in which trade occurred. [optional] [default to null] logIndex Integer Index in which transaction was included in block. [optional] [default to null] orderUid String Unique identifier for the order: 56 bytes encoded as hex with `0x` prefix. Bytes 0 to 32 are the order digest, bytes 30 to 52 the owner address and bytes 52..56 valid to, [optional] [default to null] owner String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] buyToken String Ethereum 40 byte address encoded as a hex with `0x` prefix. [optional] [default to null] sellAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null] sellAmountBeforeFees String A big unsigned integer encoded in decimal. [optional] [default to null] buyAmount String Amount of a token. uint256 encoded in decimal. [optional] [default to null]","title":"Properties"}]}